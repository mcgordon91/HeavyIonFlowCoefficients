//
// File generated by rootcint at Wed Jul 17 20:55:10 2024

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStBichseldIStBichsel_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StBichsel_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void dEdxParameterization_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dEdxParameterization(void *p = 0);
   static void *newArray_dEdxParameterization(Long_t size, void *p);
   static void delete_dEdxParameterization(void *p);
   static void deleteArray_dEdxParameterization(void *p);
   static void destruct_dEdxParameterization(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dEdxParameterization*)
   {
      ::dEdxParameterization *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dEdxParameterization >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dEdxParameterization", ::dEdxParameterization::Class_Version(), ".sl73_gcc485/obj/StRoot/StBichsel/dEdxParameterization.h", 14,
                  typeid(::dEdxParameterization), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dEdxParameterization::Dictionary, isa_proxy, 4,
                  sizeof(::dEdxParameterization) );
      instance.SetNew(&new_dEdxParameterization);
      instance.SetNewArray(&newArray_dEdxParameterization);
      instance.SetDelete(&delete_dEdxParameterization);
      instance.SetDeleteArray(&deleteArray_dEdxParameterization);
      instance.SetDestructor(&destruct_dEdxParameterization);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dEdxParameterization*)
   {
      return GenerateInitInstanceLocal((::dEdxParameterization*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dEdxParameterization*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Bichsel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Bichsel(void *p = 0);
   static void *newArray_Bichsel(Long_t size, void *p);
   static void delete_Bichsel(void *p);
   static void deleteArray_Bichsel(void *p);
   static void destruct_Bichsel(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Bichsel*)
   {
      ::Bichsel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Bichsel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Bichsel", ::Bichsel::Class_Version(), ".sl73_gcc485/obj/StRoot/StBichsel/Bichsel.h", 15,
                  typeid(::Bichsel), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Bichsel::Dictionary, isa_proxy, 4,
                  sizeof(::Bichsel) );
      instance.SetNew(&new_Bichsel);
      instance.SetNewArray(&newArray_Bichsel);
      instance.SetDelete(&delete_Bichsel);
      instance.SetDeleteArray(&deleteArray_Bichsel);
      instance.SetDestructor(&destruct_Bichsel);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Bichsel*)
   {
      return GenerateInitInstanceLocal((::Bichsel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Bichsel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StdEdxModel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StdEdxModel(void *p);
   static void deleteArray_StdEdxModel(void *p);
   static void destruct_StdEdxModel(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StdEdxModel*)
   {
      ::StdEdxModel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StdEdxModel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StdEdxModel", ::StdEdxModel::Class_Version(), ".sl73_gcc485/obj/StRoot/StBichsel/StdEdxModel.h", 22,
                  typeid(::StdEdxModel), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StdEdxModel::Dictionary, isa_proxy, 4,
                  sizeof(::StdEdxModel) );
      instance.SetDelete(&delete_StdEdxModel);
      instance.SetDeleteArray(&deleteArray_StdEdxModel);
      instance.SetDestructor(&destruct_StdEdxModel);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StdEdxModel*)
   {
      return GenerateInitInstanceLocal((::StdEdxModel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StdEdxModel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr dEdxParameterization::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *dEdxParameterization::Class_Name()
{
   return "dEdxParameterization";
}

//______________________________________________________________________________
const char *dEdxParameterization::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dEdxParameterization*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int dEdxParameterization::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dEdxParameterization*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void dEdxParameterization::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dEdxParameterization*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *dEdxParameterization::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dEdxParameterization*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Bichsel::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Bichsel::Class_Name()
{
   return "Bichsel";
}

//______________________________________________________________________________
const char *Bichsel::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Bichsel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Bichsel::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Bichsel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Bichsel::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Bichsel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Bichsel::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Bichsel*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StdEdxModel::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StdEdxModel::Class_Name()
{
   return "StdEdxModel";
}

//______________________________________________________________________________
const char *StdEdxModel::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StdEdxModel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StdEdxModel::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StdEdxModel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StdEdxModel::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StdEdxModel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StdEdxModel::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StdEdxModel*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void Bichsel::Streamer(TBuffer &R__b)
{
   // Stream an object of class Bichsel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Bichsel::Class(),this);
   } else {
      R__b.WriteClassBuffer(Bichsel::Class(),this);
   }
}

//______________________________________________________________________________
void Bichsel::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Bichsel.
      TClass *R__cl = ::Bichsel::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Type", &m_Type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Tag", &m_Tag);
      R__insp.InspectMember(m_Tag, "m_Tag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_dEdxParameterization", &m_dEdxParameterization);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Bichsel(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Bichsel : new ::Bichsel;
   }
   static void *newArray_Bichsel(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Bichsel[nElements] : new ::Bichsel[nElements];
   }
   // Wrapper around operator delete
   static void delete_Bichsel(void *p) {
      delete ((::Bichsel*)p);
   }
   static void deleteArray_Bichsel(void *p) {
      delete [] ((::Bichsel*)p);
   }
   static void destruct_Bichsel(void *p) {
      typedef ::Bichsel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Bichsel

//______________________________________________________________________________
void StdEdxModel::Streamer(TBuffer &R__b)
{
   // Stream an object of class StdEdxModel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StdEdxModel::Class(),this);
   } else {
      R__b.WriteClassBuffer(StdEdxModel::Class(),this);
   }
}

//______________________________________________________________________________
void StdEdxModel::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StdEdxModel.
      TClass *R__cl = ::StdEdxModel::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StdEdxModel(void *p) {
      delete ((::StdEdxModel*)p);
   }
   static void deleteArray_StdEdxModel(void *p) {
      delete [] ((::StdEdxModel*)p);
   }
   static void destruct_StdEdxModel(void *p) {
      typedef ::StdEdxModel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StdEdxModel

//______________________________________________________________________________
void dEdxParameterization::Streamer(TBuffer &R__b)
{
   // Stream an object of class dEdxParameterization.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dEdxParameterization::Class(),this);
   } else {
      R__b.WriteClassBuffer(dEdxParameterization::Class(),this);
   }
}

//______________________________________________________________________________
void dEdxParameterization::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dEdxParameterization.
      TClass *R__cl = ::dEdxParameterization::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTag", &fTag);
      R__insp.InspectMember(fTag, "fTag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP", &fP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fA", &fA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fI70", &fI70);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fI60", &fI60);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fD", &fD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRms", &fRms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fW", &fW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnBins[3]", fnBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbinW[3]", fbinW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAXYZ[3]", &fAXYZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMostProbableZShift", &fMostProbableZShift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAverageZShift", &fAverageZShift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fI70Shift", &fI70Shift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fI60Shift", &fI60Shift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbgL10min", &fbgL10min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbgL10max", &fbgL10max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdxL2min", &fdxL2min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdxL2max", &fdxL2max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fzmin", &fzmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fzmax", &fzmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrs[10][6]", &fTrs);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dEdxParameterization(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dEdxParameterization : new ::dEdxParameterization;
   }
   static void *newArray_dEdxParameterization(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dEdxParameterization[nElements] : new ::dEdxParameterization[nElements];
   }
   // Wrapper around operator delete
   static void delete_dEdxParameterization(void *p) {
      delete ((::dEdxParameterization*)p);
   }
   static void deleteArray_dEdxParameterization(void *p) {
      delete [] ((::dEdxParameterization*)p);
   }
   static void destruct_dEdxParameterization(void *p) {
      typedef ::dEdxParameterization current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dEdxParameterization

/********************************************************
* .sl73_gcc485/obj/StRoot/StBichsel/StBichsel_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStBichsel_Cint();

extern "C" void G__set_cpp_environmentStBichsel_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Bichsel.h");
  G__add_compiledheader("StdEdxModel.h");
  G__add_compiledheader("dEdxParameterization.h");
  G__cpp_reset_tagtableStBichsel_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStBichsel_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* dEdxParameterization */
static int G__StBichsel_Cint_588_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dEdxParameterization* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dEdxParameterization(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) dEdxParameterization(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dEdxParameterization(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3])
, (const Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) dEdxParameterization(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3])
, (const Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dEdxParameterization(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) dEdxParameterization(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dEdxParameterization(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) dEdxParameterization(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dEdxParameterization((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) dEdxParameterization((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dEdxParameterization((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dEdxParameterization((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dEdxParameterization[n];
       } else {
         p = new((void*) gvp) dEdxParameterization[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dEdxParameterization;
       } else {
         p = new((void*) gvp) dEdxParameterization;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBichsel_CintLN_dEdxParameterization));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->MostProbableZCorrection((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->I70Correction((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->GetMostProbableZ((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->GetAverageZ((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->GetRmsZ((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->GetI70((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->GetI60((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->GetMostProbabledEdx((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->GetdEdxWidth((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->GetMostProbableZM((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->GetAverageZM((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->GetI70M((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dEdxParameterization*) G__getstructoffset())->GetProbability((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dEdxParameterization*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const dEdxParameterization*) G__getstructoffset())->Tag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->A());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->I70());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->I60());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->Rms());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->W());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dEdxParameterization*) G__getstructoffset())->bgL10min());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dEdxParameterization*) G__getstructoffset())->bgL10max());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->I70Trs((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->I70Trs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->I70TrsB((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->I70TrsB());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->I70TrsS((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->I70TrsS());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->IfitTrs((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->IfitTrs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->IfitTrsB((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->IfitTrsB());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->IfitTrsS((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->IfitTrsS());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dEdxParameterization*) G__getstructoffset())->Get((TH1D*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dEdxParameterization*) G__getstructoffset())->I70Trs((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dEdxParameterization*) G__getstructoffset())->I70TrsB((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dEdxParameterization*) G__getstructoffset())->I70TrsS((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dEdxParameterization*) G__getstructoffset())->IfitTrs((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dEdxParameterization*) G__getstructoffset())->IfitTrsB((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dEdxParameterization*) G__getstructoffset())->IfitTrsS((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dEdxParameterization::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dEdxParameterization::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dEdxParameterization::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dEdxParameterization::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dEdxParameterization*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dEdxParameterization*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dEdxParameterization*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dEdxParameterization*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dEdxParameterization::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dEdxParameterization::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dEdxParameterization::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_588_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dEdxParameterization::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StBichsel_Cint_588_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dEdxParameterization* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dEdxParameterization(*(dEdxParameterization*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBichsel_CintLN_dEdxParameterization));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dEdxParameterization G__TdEdxParameterization;
static int G__StBichsel_Cint_588_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dEdxParameterization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dEdxParameterization*) (soff+(sizeof(dEdxParameterization)*i)))->~G__TdEdxParameterization();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dEdxParameterization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dEdxParameterization*) (soff))->~G__TdEdxParameterization();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StBichsel_Cint_588_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dEdxParameterization* dest = (dEdxParameterization*) G__getstructoffset();
   *dest = *(dEdxParameterization*) libp->para[0].ref;
   const dEdxParameterization& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Bichsel */
static int G__StBichsel_Cint_590_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Bichsel* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Bichsel((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Bichsel((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Bichsel((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) Bichsel((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Bichsel[n];
       } else {
         p = new((void*) gvp) Bichsel[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new Bichsel;
       } else {
         p = new((void*) gvp) Bichsel;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBichsel_CintLN_Bichsel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) Bichsel::Instance((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) Bichsel::Instance((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) Bichsel::Instance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) Bichsel::GetdEdxResolution((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) Bichsel::GetdEdxResolution((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) Bichsel::GetdEdxResolution());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Bichsel::GetdEdxResolution((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Bichsel::CalcCorrection((tpcCorrection_st*) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Bichsel::SumSeries(*(Double_t*) G__Doubleref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, (Double_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Bichsel::Clean();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetMostProbableZ((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetMostProbableZ((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetMostProbableZM((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetMostProbableZM((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetAverageZ((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetAverageZ((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetAverageZM((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetAverageZM((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetRmsZ((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetRmsZ((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetI70((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetI70((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetI70M((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetI70M((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetI60((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetI60((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetMostProbabledEdx((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetMostProbabledEdx((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetdEdxWidth((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetdEdxWidth((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Bichsel*) G__getstructoffset())->GetProbability((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->Parameterization());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Bichsel*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const Bichsel*) G__getstructoffset())->Tag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->A());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->I70());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->I60());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->Rms());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->W());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->I70Trs((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->I70Trs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->I70TrsB((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->I70TrsB());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->I70TrsS((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->I70TrsS());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->IfitTrs((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->IfitTrs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->IfitTrsB((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->IfitTrsB());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->IfitTrsS((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->IfitTrsS());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Bichsel*) G__getstructoffset())->I70Trs((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Bichsel*) G__getstructoffset())->I70TrsB((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Bichsel*) G__getstructoffset())->I70TrsS((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Bichsel*) G__getstructoffset())->IfitTrs((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Bichsel*) G__getstructoffset())->IfitTrsB((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Bichsel*) G__getstructoffset())->IfitTrsS((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Bichsel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Bichsel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Bichsel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Bichsel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Bichsel*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Bichsel*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Bichsel*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Bichsel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Bichsel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Bichsel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Bichsel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_590_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Bichsel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StBichsel_Cint_590_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Bichsel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Bichsel(*(Bichsel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBichsel_CintLN_Bichsel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Bichsel G__TBichsel;
static int G__StBichsel_Cint_590_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Bichsel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Bichsel*) (soff+(sizeof(Bichsel)*i)))->~G__TBichsel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Bichsel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Bichsel*) (soff))->~G__TBichsel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StBichsel_Cint_590_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Bichsel* dest = (Bichsel*) G__getstructoffset();
   *dest = *(Bichsel*) libp->para[0].ref;
   const Bichsel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StdEdxModel */
static int G__StBichsel_Cint_633_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StdEdxModel::instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StdEdxModel::GetdNdxL10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StdEdxModel::GetdNdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) StdEdxModel::GetdEdN((StdEdxModel::EValType) G__int(libp->para[0]), (StdEdxModel::ETpcType) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) StdEdxModel::GetdEdN((StdEdxModel::EValType) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) StdEdxModel::GetdEdN());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) StdEdxModel::GetdEdNMPV((StdEdxModel::ETpcType) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) StdEdxModel::GetdEdNMPV());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) StdEdxModel::GetLogdEdN((StdEdxModel::EValType) G__int(libp->para[0]), (StdEdxModel::ETpcType) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) StdEdxModel::GetLogdEdN((StdEdxModel::EValType) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) StdEdxModel::GetLogdEdN());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) StdEdxModel::GetLogdEdNMPV((StdEdxModel::ETpcType) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) StdEdxModel::GetLogdEdNMPV());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) StdEdxModel::dNdx((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) StdEdxModel::dNdx((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) StdEdxModel::zMPVFunc((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) StdEdxModel::zMPVFunc((Double_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StdEdxModel::zMPV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) StdEdxModel::zdEFunc((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StdEdxModel::zdE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StdEdxModel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StdEdxModel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StdEdxModel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StdEdxModel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StdEdxModel*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StdEdxModel*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StdEdxModel*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StdEdxModel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StdEdxModel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StdEdxModel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StdEdxModel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBichsel_Cint_633_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StdEdxModel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StBichsel_Cint_633_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StdEdxModel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StdEdxModel(*(StdEdxModel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StdEdxModel G__TStdEdxModel;
static int G__StBichsel_Cint_633_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StdEdxModel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StdEdxModel*) (soff+(sizeof(StdEdxModel)*i)))->~G__TStdEdxModel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StdEdxModel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StdEdxModel*) (soff))->~G__TStdEdxModel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StBichsel_Cint_633_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StdEdxModel* dest = (StdEdxModel*) G__getstructoffset();
   *dest = *(StdEdxModel*) libp->para[0].ref;
   const StdEdxModel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* dEdxParameterization */

/* Bichsel */

/* StdEdxModel */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStBichsel_Cint {
 public:
  G__Sizep2memfuncStBichsel_Cint(): p(&G__Sizep2memfuncStBichsel_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStBichsel_Cint::*p)();
};

size_t G__get_sizep2memfuncStBichsel_Cint()
{
  G__Sizep2memfuncStBichsel_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStBichsel_Cint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStBichsel_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBichsel_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBichsel_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBichsel_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBichsel_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__StBichsel_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBichsel_CintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StBichsel_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBichsel_CintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* dEdxParameterization */
static void G__setup_memvardEdxParameterization(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StBichsel_CintLN_dEdxParameterization));
   { dEdxParameterization *p; p=(dEdxParameterization*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TString),-1,-1,4,"fTag=",0,"! Tag for  root file (Bichsel or PAI)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D),-1,-1,4,"fP=",0,"! zm: The most probable value of ::log(dE/dx) versus log10(beta*gamma) and log2(dx)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D),-1,-1,4,"fA=",0,"! mean_z: The average value of z = ::log(dE/dx) versus log10(beta*gamma) and log2(dx)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D),-1,-1,4,"fI70=",0,"! I70: The average value after 30% truncation versus log10(beta*gamma) and log2(dx)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D),-1,-1,4,"fI60=",0,"! I60: The average value after 40% truncation versus log10(beta*gamma) and log2(dx)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D),-1,-1,4,"fD=",0,"! Delta_P : The most probable dE/dx versus log10(beta*gamma) and log2(dx)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D),-1,-1,4,"fRms=",0,"! sigma_z : The RMS value of z = ::log(dE/dx) versus log10(beta*gamma) and log2(dx)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D),-1,-1,4,"fW=",0,"! width : The RMS value of z = ::log(dE/dx) versus log10(beta*gamma) and log2(dx)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TH3D),-1,-1,4,"fPhi=",0,"! The dEdxParameterization probability versus log10(beta*gamma) and log2(dx) and z");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fnBins[3]=",0,"! no. of bin for each dimension (log10(bg), log2(dx) and z = ::log(dE/dx))");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fbinW[3]=",0,"! bin width");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TAxis),-1,-1,4,"fAXYZ[3]=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMostProbableZShift=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAverageZShift=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fI70Shift=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fI60Shift=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fbgL10min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fbgL10max=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fdxL2min=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fdxL2max=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fzmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fzmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D),-1,-1,4,"fTrs[10][6]=",0,"! Histograms from TpcRS dE/dx simulation for each particle type");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Bichsel */
static void G__setup_memvarBichsel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StBichsel_CintLN_Bichsel));
   { Bichsel *p; p=(Bichsel*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBichsel_CintLN_BichselcLcLEParTypes),-1,-2,1,G__FastAllocString(4096).Format("kP10=%lldLL",(long long)Bichsel::kP10).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBichsel_CintLN_BichselcLcLEParTypes),-1,-2,1,G__FastAllocString(4096).Format("kBichsel=%lldLL",(long long)Bichsel::kBichsel).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBichsel_CintLN_BichselcLcLEParTypes),-1,-2,1,G__FastAllocString(4096).Format("kPAI=%lldLL",(long long)Bichsel::kPAI).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBichsel_CintLN_BichselcLcLEParTypes),-1,-2,1,G__FastAllocString(4096).Format("kTotal=%lldLL",(long long)Bichsel::kTotal).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TString),-1,-2,4,"m_Tags[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_Type=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TString),-1,-1,4,"m_Tag=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_dEdxParameterization),-1,-2,4,"m_dEdxParameterizations[3]=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_dEdxParameterization),-1,-1,4,"m_dEdxParameterization=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_Bichsel),-1,-2,4,"fgBichsel=",0,"! last instance          ");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StdEdxModel */
static void G__setup_memvarStdEdxModel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModel));
   { StdEdxModel *p; p=(StdEdxModel*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModelcLcLETpcType),-1,-2,1,G__FastAllocString(4096).Format("kTpcOuter=%lldLL",(long long)StdEdxModel::kTpcOuter).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModelcLcLETpcType),-1,-2,1,G__FastAllocString(4096).Format("kTpcInner=%lldLL",(long long)StdEdxModel::kTpcInner).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModelcLcLETpcType),-1,-2,1,G__FastAllocString(4096).Format("kTpcAll=%lldLL",(long long)StdEdxModel::kTpcAll).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModelcLcLEValType),-1,-2,1,G__FastAllocString(4096).Format("kProb=%lldLL",(long long)StdEdxModel::kProb).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModelcLcLEValType),-1,-2,1,G__FastAllocString(4096).Format("kdProbdX=%lldLL",(long long)StdEdxModel::kdProbdX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModelcLcLEValType),-1,-2,1,G__FastAllocString(4096).Format("kdProbdY=%lldLL",(long long)StdEdxModel::kdProbdY).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModel),-1,-2,4,"fgStdEdxModel=",0,"! last instance          ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D),-1,-2,4,"mdNdxL10=",0,"dN/dx versus log10(beta*gamma)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D),-1,-2,4,"mdNdx=",0,"dN/dx versus beta*gamma");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TH2F),-1,-2,4,"mdEdNModel[3][3]=",0,"Tpc [I,O,All] [Prob, dProb/dX, dProb/dY] versus dE/Np,log(Np)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TH1F),-1,-2,4,"mdEdNMPV[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TH2F),-1,-2,4,"mLogdEdxModel[3][3]=",0,"Tpc [I,O,All] [Prob, dProb/dX, dProb/dY] versus Log(dE/Np),log(Np)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TH1F),-1,-2,4,"mLogdEdNMPV[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,4,"fScale=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"_debug=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBichsel_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStBichsel_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncdEdxParameterization(void) {
   /* dEdxParameterization */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StBichsel_CintLN_dEdxParameterization));
   G__memfunc_setup("dEdxParameterization",2084,G__StBichsel_Cint_588_0_1, 105, G__get_linked_tagnum(&G__StBichsel_CintLN_dEdxParameterization), -1, 0, 6, 1, 1, 0, 
"C - 'Char_t' 10 '\"p10\"' Tag i - 'Int_t' 0 '0' keep3D "
"d - 'Double_t' 10 '0' MostProbableZShift d - 'Double_t' 10 '0' AverageZShift "
"d - 'Double_t' 10 '1' I70Shift d - 'Double_t' 10 '1' I60Shift", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MostProbableZCorrection",2364,G__StBichsel_Cint_588_0_2, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - log10bg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("I70Correction",1224,G__StBichsel_Cint_588_0_3, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - log10bg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMostProbableZ",1604,G__StBichsel_Cint_588_0_4, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverageZ",1077,G__StBichsel_Cint_588_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRmsZ",684,G__StBichsel_Cint_588_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetI70",464,G__StBichsel_Cint_588_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetI60",463,G__StBichsel_Cint_588_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMostProbabledEdx",1903,G__StBichsel_Cint_588_0_9, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdEdxWidth",1189,G__StBichsel_Cint_588_0_10, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMostProbableZM",1681,G__StBichsel_Cint_588_0_11, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverageZM",1154,G__StBichsel_Cint_588_0_12, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetI70M",541,G__StBichsel_Cint_588_0_13, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProbability",1441,G__StBichsel_Cint_588_0_14, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__StBichsel_Cint_588_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tag",284,G__StBichsel_Cint_588_0_16, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P",80,G__StBichsel_Cint_588_0_17, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A",65,G__StBichsel_Cint_588_0_18, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("I70",176,G__StBichsel_Cint_588_0_19, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("I60",175,G__StBichsel_Cint_588_0_20, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("D",68,G__StBichsel_Cint_588_0_21, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rms",306,G__StBichsel_Cint_588_0_22, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("W",87,G__StBichsel_Cint_588_0_23, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__StBichsel_Cint_588_0_24, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH3D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bgL10min",698,G__StBichsel_Cint_588_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bgL10max",700,G__StBichsel_Cint_588_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("I70Trs",489,G__StBichsel_Cint_588_0_27, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for I70 from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("I70TrsB",555,G__StBichsel_Cint_588_0_28, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for I70 - Bichsel from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("I70TrsS",572,G__StBichsel_Cint_588_0_29, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for relative sigma beta*gamma dependence for I70 from TpcRS normalized to MIP", (void*) NULL, 0);
   G__memfunc_setup("IfitTrs",709,G__StBichsel_Cint_588_0_30, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for Ifit from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("IfitTrsB",775,G__StBichsel_Cint_588_0_31, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for Ifit - Bichsel from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("IfitTrsS",792,G__StBichsel_Cint_588_0_32, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for relative sigma beta*gamma dependence for Ifit from TpcRS normalized to MIP", (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__StBichsel_Cint_588_0_33, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"U 'TH1D' - 10 - hist d - 'Double_t' 0 - log10bg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("I70Trs",489,G__StBichsel_Cint_588_0_34, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for I70 from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("I70TrsB",555,G__StBichsel_Cint_588_0_35, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for I70 - Bichsel from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("I70TrsS",572,G__StBichsel_Cint_588_0_36, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for relative sigma beta*gamma dependence for I70 from TpcRS normalized to MIP", (void*) NULL, 0);
   G__memfunc_setup("IfitTrs",709,G__StBichsel_Cint_588_0_37, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for Ifit from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("IfitTrsB",775,G__StBichsel_Cint_588_0_38, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for Ifit - Bichsel from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("IfitTrsS",792,G__StBichsel_Cint_588_0_39, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for relative sigma beta*gamma dependence for Ifit from TpcRS normalized to MIP", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StBichsel_Cint_588_0_40, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dEdxParameterization::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StBichsel_Cint_588_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dEdxParameterization::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StBichsel_Cint_588_0_42, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dEdxParameterization::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StBichsel_Cint_588_0_43, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dEdxParameterization::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StBichsel_Cint_588_0_44, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StBichsel_Cint_588_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StBichsel_Cint_588_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StBichsel_Cint_588_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StBichsel_Cint_588_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dEdxParameterization::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StBichsel_Cint_588_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dEdxParameterization::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StBichsel_Cint_588_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dEdxParameterization::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StBichsel_Cint_588_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dEdxParameterization::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("dEdxParameterization", 2084, G__StBichsel_Cint_588_0_52, (int) ('i'), G__get_linked_tagnum(&G__StBichsel_CintLN_dEdxParameterization), -1, 0, 1, 1, 1, 0, "u 'dEdxParameterization' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~dEdxParameterization", 2210, G__StBichsel_Cint_588_0_53, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StBichsel_Cint_588_0_54, (int) ('u'), G__get_linked_tagnum(&G__StBichsel_CintLN_dEdxParameterization), -1, 1, 1, 1, 1, 0, "u 'dEdxParameterization' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBichsel(void) {
   /* Bichsel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StBichsel_CintLN_Bichsel));
   G__memfunc_setup("Bichsel",698,G__StBichsel_Cint_590_0_1, 105, G__get_linked_tagnum(&G__StBichsel_CintLN_Bichsel), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"P10\"' tag i - 'Int_t' 0 '0' keep3D", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__StBichsel_Cint_590_0_2, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_Bichsel), -1, 0, 2, 3, 1, 0, 
"C - 'Char_t' 10 '\"P10\"' tag i - 'Int_t' 0 '0' keep3D", (char*)NULL, (void*) G__func2void( (Bichsel* (*)(const Char_t*, Int_t))(&Bichsel::Instance) ), 0);
   G__memfunc_setup("GetdEdxResolution",1753,G__StBichsel_Cint_590_0_3, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 '1' k d - 'Double_t' 0 '60' TrackLengthInTPC", (char*)NULL, (void*) G__func2void( (Double_t (*)(Int_t, Double_t))(&Bichsel::GetdEdxResolution) ), 0);
   G__memfunc_setup("GetdEdxResolution",1753,G__StBichsel_Cint_590_0_4, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - p", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&Bichsel::GetdEdxResolution) ), 0);
   G__memfunc_setup("CalcCorrection",1419,G__StBichsel_Cint_590_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"U 'tpcCorrection_st' - 10 - cor d - 'Double_t' 10 - x", (char*)NULL, (void*) G__func2void( (Double_t (*)(const tpcCorrection_st*, const Double_t))(&Bichsel::CalcCorrection) ), 0);
   G__memfunc_setup("SumSeries",928,G__StBichsel_Cint_590_0_6, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 11 - X i - 'Int_t' 11 - N "
"D - 'Double_t' 10 - params", (char*)NULL, (void*) G__func2void( (Double_t (*)(const Double_t&, const Int_t&, const Double_t*))(&Bichsel::SumSeries) ), 0);
   G__memfunc_setup("Clean",483,G__StBichsel_Cint_590_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Bichsel::Clean) ), 0);
   G__memfunc_setup("GetMostProbableZ",1604,G__StBichsel_Cint_590_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 '1.' log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMostProbableZM",1681,G__StBichsel_Cint_590_0_9, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 '1.' log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverageZ",1077,G__StBichsel_Cint_590_0_10, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 '1.' log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAverageZM",1154,G__StBichsel_Cint_590_0_11, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 '1.' log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRmsZ",684,G__StBichsel_Cint_590_0_12, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 '1.' log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetI70",464,G__StBichsel_Cint_590_0_13, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 '1.' log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetI70M",541,G__StBichsel_Cint_590_0_14, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 '1.' log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetI60",463,G__StBichsel_Cint_590_0_15, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 '1.' log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMostProbabledEdx",1903,G__StBichsel_Cint_590_0_16, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 '1.' log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdEdxWidth",1189,G__StBichsel_Cint_590_0_17, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 '1.' log2dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProbability",1441,G__StBichsel_Cint_590_0_18, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - log10bg d - 'Double_t' 0 - log2dx "
"d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parameterization",1695,G__StBichsel_Cint_590_0_19, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_dEdxParameterization), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__StBichsel_Cint_590_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Tag",284,G__StBichsel_Cint_590_0_21, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P",80,G__StBichsel_Cint_590_0_22, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A",65,G__StBichsel_Cint_590_0_23, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("I70",176,G__StBichsel_Cint_590_0_24, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("I60",175,G__StBichsel_Cint_590_0_25, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("D",68,G__StBichsel_Cint_590_0_26, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rms",306,G__StBichsel_Cint_590_0_27, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("W",87,G__StBichsel_Cint_590_0_28, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TProfile2D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__StBichsel_Cint_590_0_29, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH3D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("I70Trs",489,G__StBichsel_Cint_590_0_30, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for I70 from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("I70TrsB",555,G__StBichsel_Cint_590_0_31, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for I70 - Bichsel from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("I70TrsS",572,G__StBichsel_Cint_590_0_32, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for relative sigma bg dependence for I70 from TpcRS normalized to MIP", (void*) NULL, 0);
   G__memfunc_setup("IfitTrs",709,G__StBichsel_Cint_590_0_33, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for Ifit from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("IfitTrsB",775,G__StBichsel_Cint_590_0_34, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for Ifit - Bichsel from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("IfitTrsS",792,G__StBichsel_Cint_590_0_35, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 'KPidParticles' part", "Estimation for relative sigma bg dependence for Ifit from TpcRS normalized to MIP", (void*) NULL, 0);
   G__memfunc_setup("I70Trs",489,G__StBichsel_Cint_590_0_36, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for I70 from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("I70TrsB",555,G__StBichsel_Cint_590_0_37, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for I70 - Bichsel from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("I70TrsS",572,G__StBichsel_Cint_590_0_38, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for relative sigma beta*gamma dependence for I70 from TpcRS normalized to MIP", (void*) NULL, 0);
   G__memfunc_setup("IfitTrs",709,G__StBichsel_Cint_590_0_39, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for Ifit from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("IfitTrsB",775,G__StBichsel_Cint_590_0_40, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for Ifit - Bichsel from TpcRS", (void*) NULL, 0);
   G__memfunc_setup("IfitTrsS",792,G__StBichsel_Cint_590_0_41, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - part d - 'Double_t' 0 - log10bg", "Estimation for relative sigma beta*gamma dependence for Ifit from TpcRS normalized to MIP", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StBichsel_Cint_590_0_42, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Bichsel::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StBichsel_Cint_590_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Bichsel::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StBichsel_Cint_590_0_44, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Bichsel::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StBichsel_Cint_590_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Bichsel::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StBichsel_Cint_590_0_46, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StBichsel_Cint_590_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StBichsel_Cint_590_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StBichsel_Cint_590_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StBichsel_Cint_590_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Bichsel::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StBichsel_Cint_590_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Bichsel::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StBichsel_Cint_590_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Bichsel::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StBichsel_Cint_590_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Bichsel::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Bichsel", 698, G__StBichsel_Cint_590_0_54, (int) ('i'), G__get_linked_tagnum(&G__StBichsel_CintLN_Bichsel), -1, 0, 1, 1, 1, 0, "u 'Bichsel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Bichsel", 824, G__StBichsel_Cint_590_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StBichsel_Cint_590_0_56, (int) ('u'), G__get_linked_tagnum(&G__StBichsel_CintLN_Bichsel), -1, 1, 1, 1, 1, 0, "u 'Bichsel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStdEdxModel(void) {
   /* StdEdxModel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModel));
   G__memfunc_setup("instance",853,G__StBichsel_Cint_633_0_1, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModel), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (StdEdxModel* (*)())(&StdEdxModel::instance) ), 0);
   G__memfunc_setup("GetdNdxL10",859,G__StBichsel_Cint_633_0_2, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 0, 3, 1, 0, "", "dN/dx log10(versus beta*gamma)", (void*) G__func2void( (TH1D* (*)())(&StdEdxModel::GetdNdxL10) ), 0);
   G__memfunc_setup("GetdNdx",686,G__StBichsel_Cint_633_0_3, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1D), -1, 0, 0, 3, 1, 0, "", "dN/dx versus beta*gamma", (void*) G__func2void( (TH1D* (*)())(&StdEdxModel::GetdNdx) ), 0);
   G__memfunc_setup("GetdEdN",635,G__StBichsel_Cint_633_0_4, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH2F), -1, 0, 2, 3, 1, 0, 
"i 'StdEdxModel::EValType' - 0 'kProb' val i 'StdEdxModel::ETpcType' - 0 'kTpcAll' tpcType", (char*)NULL, (void*) G__func2void( (TH2F* (*)(StdEdxModel::EValType, StdEdxModel::ETpcType))(&StdEdxModel::GetdEdN) ), 0);
   G__memfunc_setup("GetdEdNMPV",878,G__StBichsel_Cint_633_0_5, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1F), -1, 0, 1, 3, 1, 0, "i 'StdEdxModel::ETpcType' - 0 'kTpcAll' tpcType", (char*)NULL, (void*) G__func2void( (TH1F* (*)(StdEdxModel::ETpcType))(&StdEdxModel::GetdEdNMPV) ), 0);
   G__memfunc_setup("GetLogdEdN",925,G__StBichsel_Cint_633_0_6, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH2F), -1, 0, 2, 3, 1, 0, 
"i 'StdEdxModel::EValType' - 0 'kProb' val i 'StdEdxModel::ETpcType' - 0 'kTpcAll' tpcType", (char*)NULL, (void*) G__func2void( (TH2F* (*)(StdEdxModel::EValType, StdEdxModel::ETpcType))(&StdEdxModel::GetLogdEdN) ), 0);
   G__memfunc_setup("GetLogdEdNMPV",1168,G__StBichsel_Cint_633_0_7, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TH1F), -1, 0, 1, 3, 1, 0, "i 'StdEdxModel::ETpcType' - 0 'kTpcAll' tpcType", (char*)NULL, (void*) G__func2void( (TH1F* (*)(StdEdxModel::ETpcType))(&StdEdxModel::GetLogdEdNMPV) ), 0);
   G__memfunc_setup("dNdx",398,G__StBichsel_Cint_633_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - poverm d - 'Double_t' 0 '1.0' charge", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t))(&StdEdxModel::dNdx) ), 0);
   G__memfunc_setup("zMPVFunc",761,G__StBichsel_Cint_633_0_9, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 '0' p", "most probable dE versus x[0] = log(N_p) and sector p[0]", (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&StdEdxModel::zMPVFunc) ), 0);
   G__memfunc_setup("zMPV",365,G__StBichsel_Cint_633_0_10, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TF1), -1, 0, 0, 3, 1, 0, "", "-\"-", (void*) G__func2void( (TF1* (*)())(&StdEdxModel::zMPV) ), 0);
   G__memfunc_setup("zdEFunc",687,G__StBichsel_Cint_633_0_11, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - p", "Distributon Log(dE) - log(most probable dE) versus sector p[0]  and  p[1] = log(N_p)", (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&StdEdxModel::zdEFunc) ), 0);
   G__memfunc_setup("zdE",291,G__StBichsel_Cint_633_0_12, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TF1), -1, 0, 0, 3, 1, 0, "", "-\"-", (void*) G__func2void( (TF1* (*)())(&StdEdxModel::zdE) ), 0);
   G__memfunc_setup("StdEdxModel",1085,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModel), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StBichsel_Cint_633_0_14, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StdEdxModel::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StBichsel_Cint_633_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StdEdxModel::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StBichsel_Cint_633_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StdEdxModel::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StBichsel_Cint_633_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StdEdxModel::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StBichsel_Cint_633_0_18, 85, G__get_linked_tagnum(&G__StBichsel_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StBichsel_Cint_633_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StBichsel_Cint_633_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StBichsel_Cint_633_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StBichsel_Cint_633_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StdEdxModel::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StBichsel_Cint_633_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StdEdxModel::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StBichsel_Cint_633_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StdEdxModel::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StBichsel_Cint_633_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StdEdxModel::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StdEdxModel", 1085, G__StBichsel_Cint_633_0_26, (int) ('i'), G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModel), -1, 0, 1, 1, 1, 0, "u 'StdEdxModel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StdEdxModel", 1211, G__StBichsel_Cint_633_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StBichsel_Cint_633_0_28, (int) ('u'), G__get_linked_tagnum(&G__StBichsel_CintLN_StdEdxModel), -1, 1, 1, 1, 1, 0, "u 'StdEdxModel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStBichsel_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStBichsel_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStBichsel_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StBichsel_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StBichsel_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TAxis = { "TAxis" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TProfile2D = { "TProfile2D" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_TH3D = { "TH3D" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_dEdxParameterization = { "dEdxParameterization" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_tpcCorrection_st = { "tpcCorrection_st" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_Bichsel = { "Bichsel" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_BichselcLcLEParTypes = { "Bichsel::EParTypes" , 101 , -1 };
G__linked_taginfo G__StBichsel_CintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_StdEdxModel = { "StdEdxModel" , 99 , -1 };
G__linked_taginfo G__StBichsel_CintLN_StdEdxModelcLcLETpcType = { "StdEdxModel::ETpcType" , 101 , -1 };
G__linked_taginfo G__StBichsel_CintLN_StdEdxModelcLcLEValType = { "StdEdxModel::EValType" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStBichsel_Cint() {
  G__StBichsel_CintLN_TClass.tagnum = -1 ;
  G__StBichsel_CintLN_TBuffer.tagnum = -1 ;
  G__StBichsel_CintLN_TMemberInspector.tagnum = -1 ;
  G__StBichsel_CintLN_TString.tagnum = -1 ;
  G__StBichsel_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__StBichsel_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StBichsel_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StBichsel_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StBichsel_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StBichsel_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StBichsel_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__StBichsel_CintLN_TAxis.tagnum = -1 ;
  G__StBichsel_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StBichsel_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StBichsel_CintLN_TF1.tagnum = -1 ;
  G__StBichsel_CintLN_TH1D.tagnum = -1 ;
  G__StBichsel_CintLN_TH1F.tagnum = -1 ;
  G__StBichsel_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__StBichsel_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__StBichsel_CintLN_TH2F.tagnum = -1 ;
  G__StBichsel_CintLN_TProfile2D.tagnum = -1 ;
  G__StBichsel_CintLN_TH3D.tagnum = -1 ;
  G__StBichsel_CintLN_dEdxParameterization.tagnum = -1 ;
  G__StBichsel_CintLN_tpcCorrection_st.tagnum = -1 ;
  G__StBichsel_CintLN_Bichsel.tagnum = -1 ;
  G__StBichsel_CintLN_BichselcLcLEParTypes.tagnum = -1 ;
  G__StBichsel_CintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__StBichsel_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StBichsel_CintLN_StdEdxModel.tagnum = -1 ;
  G__StBichsel_CintLN_StdEdxModelcLcLETpcType.tagnum = -1 ;
  G__StBichsel_CintLN_StdEdxModelcLcLEValType.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStBichsel_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TString);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TAxis);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TF1);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TProfile2D);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_TH3D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_dEdxParameterization),sizeof(dEdxParameterization),-1,263424,(char*)NULL,G__setup_memvardEdxParameterization,G__setup_memfuncdEdxParameterization);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_tpcCorrection_st);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_Bichsel),sizeof(Bichsel),-1,263424,(char*)NULL,G__setup_memvarBichsel,G__setup_memfuncBichsel);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_BichselcLcLEParTypes),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_StdEdxModel),sizeof(StdEdxModel),-1,263424,(char*)NULL,G__setup_memvarStdEdxModel,G__setup_memfuncStdEdxModel);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_StdEdxModelcLcLETpcType);
   G__get_linked_tagnum_fwd(&G__StBichsel_CintLN_StdEdxModelcLcLEValType);
}
extern "C" void G__cpp_setupStBichsel_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStBichsel_Cint()");
  G__set_cpp_environmentStBichsel_Cint();
  G__cpp_setup_tagtableStBichsel_Cint();

  G__cpp_setup_inheritanceStBichsel_Cint();

  G__cpp_setup_typetableStBichsel_Cint();

  G__cpp_setup_memvarStBichsel_Cint();

  G__cpp_setup_memfuncStBichsel_Cint();
  G__cpp_setup_globalStBichsel_Cint();
  G__cpp_setup_funcStBichsel_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStBichsel_Cint();
  return;
}
class G__cpp_setup_initStBichsel_Cint {
  public:
    G__cpp_setup_initStBichsel_Cint() { G__add_setup_func("StBichsel_Cint",(G__incsetup)(&G__cpp_setupStBichsel_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStBichsel_Cint() { G__remove_setup_func("StBichsel_Cint"); }
};
G__cpp_setup_initStBichsel_Cint G__cpp_setup_initializerStBichsel_Cint;

