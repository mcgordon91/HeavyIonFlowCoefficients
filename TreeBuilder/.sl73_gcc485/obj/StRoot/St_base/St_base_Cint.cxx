//
// File generated by rootcint at Tue Feb 20 13:20:11 2024

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdISt_basedISt_base_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "St_base_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void table_head_st_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void table_head_st_Dictionary();
   static void *new_table_head_st(void *p = 0);
   static void *newArray_table_head_st(Long_t size, void *p);
   static void delete_table_head_st(void *p);
   static void deleteArray_table_head_st(void *p);
   static void destruct_table_head_st(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::table_head_st*)
   {
      ::table_head_st *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::table_head_st),0);
      static ::ROOT::TGenericClassInfo 
         instance("table_head_st", ".sl73_gcc485/obj/StRoot/St_base/table_header.h", 20,
                  typeid(::table_head_st), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &table_head_st_Dictionary, isa_proxy, 1,
                  sizeof(::table_head_st) );
      instance.SetNew(&new_table_head_st);
      instance.SetNewArray(&newArray_table_head_st);
      instance.SetDelete(&delete_table_head_st);
      instance.SetDeleteArray(&deleteArray_table_head_st);
      instance.SetDestructor(&destruct_table_head_st);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::table_head_st*)
   {
      return GenerateInitInstanceLocal((::table_head_st*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::table_head_st*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void table_head_st_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::table_head_st*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void St_table_header_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_St_table_header(void *p = 0);
   static void *newArray_St_table_header(Long_t size, void *p);
   static void delete_St_table_header(void *p);
   static void deleteArray_St_table_header(void *p);
   static void destruct_St_table_header(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::St_table_header*)
   {
      ::St_table_header *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::St_table_header >(0);
      static ::ROOT::TGenericClassInfo 
         instance("St_table_header", ::St_table_header::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/St_table_header_Table.h", 16,
                  typeid(::St_table_header), ::ROOT::DefineBehavior(ptr, ptr),
                  &::St_table_header::Dictionary, isa_proxy, 4,
                  sizeof(::St_table_header) );
      instance.SetNew(&new_St_table_header);
      instance.SetNewArray(&newArray_St_table_header);
      instance.SetDelete(&delete_St_table_header);
      instance.SetDeleteArray(&deleteArray_St_table_header);
      instance.SetDestructor(&destruct_St_table_header);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::St_table_header*)
   {
      return GenerateInitInstanceLocal((::St_table_header*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::St_table_header*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void St_Module_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_St_Module(void *p = 0);
   static void *newArray_St_Module(Long_t size, void *p);
   static void delete_St_Module(void *p);
   static void deleteArray_St_Module(void *p);
   static void destruct_St_Module(void *p);
   static void streamer_St_Module(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::St_Module*)
   {
      ::St_Module *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::St_Module >(0);
      static ::ROOT::TGenericClassInfo 
         instance("St_Module", ::St_Module::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/St_Module.h", 78,
                  typeid(::St_Module), ::ROOT::DefineBehavior(ptr, ptr),
                  &::St_Module::Dictionary, isa_proxy, 1,
                  sizeof(::St_Module) );
      instance.SetNew(&new_St_Module);
      instance.SetNewArray(&newArray_St_Module);
      instance.SetDelete(&delete_St_Module);
      instance.SetDeleteArray(&deleteArray_St_Module);
      instance.SetDestructor(&destruct_St_Module);
      instance.SetStreamerFunc(&streamer_St_Module);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::St_Module*)
   {
      return GenerateInitInstanceLocal((::St_Module*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::St_Module*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StUKey_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void StUKey_Dictionary();
   static void *new_StUKey(void *p = 0);
   static void *newArray_StUKey(Long_t size, void *p);
   static void delete_StUKey(void *p);
   static void deleteArray_StUKey(void *p);
   static void destruct_StUKey(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StUKey*)
   {
      ::StUKey *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::StUKey),0);
      static ::ROOT::TGenericClassInfo 
         instance("StUKey", ".sl73_gcc485/obj/StRoot/St_base/StFileI.h", 14,
                  typeid(::StUKey), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &StUKey_Dictionary, isa_proxy, 0,
                  sizeof(::StUKey) );
      instance.SetNew(&new_StUKey);
      instance.SetNewArray(&newArray_StUKey);
      instance.SetDelete(&delete_StUKey);
      instance.SetDeleteArray(&deleteArray_StUKey);
      instance.SetDestructor(&destruct_StUKey);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StUKey*)
   {
      return GenerateInitInstanceLocal((::StUKey*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StUKey*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void StUKey_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::StUKey*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StFileI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StFileI(void *p);
   static void deleteArray_StFileI(void *p);
   static void destruct_StFileI(void *p);
   static void streamer_StFileI(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StFileI*)
   {
      ::StFileI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StFileI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StFileI", ::StFileI::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StFileI.h", 47,
                  typeid(::StFileI), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StFileI::Dictionary, isa_proxy, 0,
                  sizeof(::StFileI) );
      instance.SetDelete(&delete_StFileI);
      instance.SetDeleteArray(&deleteArray_StFileI);
      instance.SetDestructor(&destruct_StFileI);
      instance.SetStreamerFunc(&streamer_StFileI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StFileI*)
   {
      return GenerateInitInstanceLocal((::StFileI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StFileI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StIO_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void StIO_Dictionary();
   static void *new_StIO(void *p = 0);
   static void *newArray_StIO(Long_t size, void *p);
   static void delete_StIO(void *p);
   static void deleteArray_StIO(void *p);
   static void destruct_StIO(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StIO*)
   {
      ::StIO *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::StIO),0);
      static ::ROOT::TGenericClassInfo 
         instance("StIO", ".sl73_gcc485/obj/StRoot/St_base/StTree.h", 18,
                  typeid(::StIO), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &StIO_Dictionary, isa_proxy, 1,
                  sizeof(::StIO) );
      instance.SetNew(&new_StIO);
      instance.SetNewArray(&newArray_StIO);
      instance.SetDelete(&delete_StIO);
      instance.SetDeleteArray(&deleteArray_StIO);
      instance.SetDestructor(&destruct_StIO);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StIO*)
   {
      return GenerateInitInstanceLocal((::StIO*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StIO*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void StIO_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::StIO*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StTree(void *p = 0);
   static void *newArray_StTree(Long_t size, void *p);
   static void delete_StTree(void *p);
   static void deleteArray_StTree(void *p);
   static void destruct_StTree(void *p);
   static void streamer_StTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StTree*)
   {
      ::StTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StTree", ::StTree::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StTree.h", 84,
                  typeid(::StTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StTree::Dictionary, isa_proxy, 0,
                  sizeof(::StTree) );
      instance.SetNew(&new_StTree);
      instance.SetNewArray(&newArray_StTree);
      instance.SetDelete(&delete_StTree);
      instance.SetDeleteArray(&deleteArray_StTree);
      instance.SetDestructor(&destruct_StTree);
      instance.SetStreamerFunc(&streamer_StTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StTree*)
   {
      return GenerateInitInstanceLocal((::StTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StBranch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StBranch(void *p = 0);
   static void *newArray_StBranch(Long_t size, void *p);
   static void delete_StBranch(void *p);
   static void deleteArray_StBranch(void *p);
   static void destruct_StBranch(void *p);
   static void streamer_StBranch(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StBranch*)
   {
      ::StBranch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StBranch >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StBranch", ::StBranch::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StTree.h", 35,
                  typeid(::StBranch), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StBranch::Dictionary, isa_proxy, 0,
                  sizeof(::StBranch) );
      instance.SetNew(&new_StBranch);
      instance.SetNewArray(&newArray_StBranch);
      instance.SetDelete(&delete_StBranch);
      instance.SetDeleteArray(&deleteArray_StBranch);
      instance.SetDestructor(&destruct_StBranch);
      instance.SetStreamerFunc(&streamer_StBranch);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StBranch*)
   {
      return GenerateInitInstanceLocal((::StBranch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StBranch*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StIOEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StIOEvent(void *p = 0);
   static void *newArray_StIOEvent(Long_t size, void *p);
   static void delete_StIOEvent(void *p);
   static void deleteArray_StIOEvent(void *p);
   static void destruct_StIOEvent(void *p);
   static void streamer_StIOEvent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StIOEvent*)
   {
      ::StIOEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StIOEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StIOEvent", ::StIOEvent::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StTree.h", 114,
                  typeid(::StIOEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StIOEvent::Dictionary, isa_proxy, 1,
                  sizeof(::StIOEvent) );
      instance.SetNew(&new_StIOEvent);
      instance.SetNewArray(&newArray_StIOEvent);
      instance.SetDelete(&delete_StIOEvent);
      instance.SetDeleteArray(&deleteArray_StIOEvent);
      instance.SetDestructor(&destruct_StIOEvent);
      instance.SetStreamerFunc(&streamer_StIOEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StIOEvent*)
   {
      return GenerateInitInstanceLocal((::StIOEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StIOEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StFile(void *p = 0);
   static void *newArray_StFile(Long_t size, void *p);
   static void delete_StFile(void *p);
   static void deleteArray_StFile(void *p);
   static void destruct_StFile(void *p);
   static void streamer_StFile(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StFile*)
   {
      ::StFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StFile", ::StFile::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StTree.h", 126,
                  typeid(::StFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StFile::Dictionary, isa_proxy, 0,
                  sizeof(::StFile) );
      instance.SetNew(&new_StFile);
      instance.SetNewArray(&newArray_StFile);
      instance.SetDelete(&delete_StFile);
      instance.SetDeleteArray(&deleteArray_StFile);
      instance.SetDestructor(&destruct_StFile);
      instance.SetStreamerFunc(&streamer_StFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StFile*)
   {
      return GenerateInitInstanceLocal((::StFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StXRefMain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StXRefMain(void *p);
   static void deleteArray_StXRefMain(void *p);
   static void destruct_StXRefMain(void *p);
   static void streamer_StXRefMain(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StXRefMain*)
   {
      ::StXRefMain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StXRefMain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StXRefMain", ::StXRefMain::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StObject.h", 132,
                  typeid(::StXRefMain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StXRefMain::Dictionary, isa_proxy, 1,
                  sizeof(::StXRefMain) );
      instance.SetDelete(&delete_StXRefMain);
      instance.SetDeleteArray(&deleteArray_StXRefMain);
      instance.SetDestructor(&destruct_StXRefMain);
      instance.SetStreamerFunc(&streamer_StXRefMain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StXRefMain*)
   {
      return GenerateInitInstanceLocal((::StXRefMain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StXRefMain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StRefArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRefArray(void *p = 0);
   static void *newArray_StRefArray(Long_t size, void *p);
   static void delete_StRefArray(void *p);
   static void deleteArray_StRefArray(void *p);
   static void destruct_StRefArray(void *p);
   static void streamer_StRefArray(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRefArray*)
   {
      ::StRefArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRefArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRefArray", ::StRefArray::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StArray.h", 156,
                  typeid(::StRefArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRefArray::Dictionary, isa_proxy, 1,
                  sizeof(::StRefArray) );
      instance.SetNew(&new_StRefArray);
      instance.SetNewArray(&newArray_StRefArray);
      instance.SetDelete(&delete_StRefArray);
      instance.SetDeleteArray(&deleteArray_StRefArray);
      instance.SetDestructor(&destruct_StRefArray);
      instance.SetStreamerFunc(&streamer_StRefArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRefArray*)
   {
      return GenerateInitInstanceLocal((::StRefArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRefArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StStrArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StStrArray(void *p = 0);
   static void *newArray_StStrArray(Long_t size, void *p);
   static void delete_StStrArray(void *p);
   static void deleteArray_StStrArray(void *p);
   static void destruct_StStrArray(void *p);
   static void streamer_StStrArray(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StStrArray*)
   {
      ::StStrArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StStrArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StStrArray", ::StStrArray::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StArray.h", 135,
                  typeid(::StStrArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StStrArray::Dictionary, isa_proxy, 1,
                  sizeof(::StStrArray) );
      instance.SetNew(&new_StStrArray);
      instance.SetNewArray(&newArray_StStrArray);
      instance.SetDelete(&delete_StStrArray);
      instance.SetDeleteArray(&deleteArray_StStrArray);
      instance.SetDestructor(&destruct_StStrArray);
      instance.SetStreamerFunc(&streamer_StStrArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StStrArray*)
   {
      return GenerateInitInstanceLocal((::StStrArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StStrArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StObject(void *p = 0);
   static void *newArray_StObject(Long_t size, void *p);
   static void delete_StObject(void *p);
   static void deleteArray_StObject(void *p);
   static void destruct_StObject(void *p);
   static void streamer_StObject(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StObject*)
   {
      ::StObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StObject", ::StObject::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StObject.h", 54,
                  typeid(::StObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StObject::Dictionary, isa_proxy, 1,
                  sizeof(::StObject) );
      instance.SetNew(&new_StObject);
      instance.SetNewArray(&newArray_StObject);
      instance.SetDelete(&delete_StObject);
      instance.SetDeleteArray(&deleteArray_StObject);
      instance.SetDestructor(&destruct_StObject);
      instance.SetStreamerFunc(&streamer_StObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StObject*)
   {
      return GenerateInitInstanceLocal((::StObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StUUId_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StUUId(void *p = 0);
   static void *newArray_StUUId(Long_t size, void *p);
   static void delete_StUUId(void *p);
   static void deleteArray_StUUId(void *p);
   static void destruct_StUUId(void *p);
   static void streamer_StUUId(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StUUId*)
   {
      ::StUUId *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StUUId >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StUUId", ::StUUId::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StObject.h", 84,
                  typeid(::StUUId), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StUUId::Dictionary, isa_proxy, 1,
                  sizeof(::StUUId) );
      instance.SetNew(&new_StUUId);
      instance.SetNewArray(&newArray_StUUId);
      instance.SetDelete(&delete_StUUId);
      instance.SetDeleteArray(&deleteArray_StUUId);
      instance.SetDestructor(&destruct_StUUId);
      instance.SetStreamerFunc(&streamer_StUUId);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StUUId*)
   {
      return GenerateInitInstanceLocal((::StUUId*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StUUId*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StXRef_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StXRef(void *p);
   static void deleteArray_StXRef(void *p);
   static void destruct_StXRef(void *p);
   static void streamer_StXRef(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StXRef*)
   {
      ::StXRef *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StXRef >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StXRef", ::StXRef::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StObject.h", 105,
                  typeid(::StXRef), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StXRef::Dictionary, isa_proxy, 1,
                  sizeof(::StXRef) );
      instance.SetDelete(&delete_StXRef);
      instance.SetDeleteArray(&deleteArray_StXRef);
      instance.SetDestructor(&destruct_StXRef);
      instance.SetStreamerFunc(&streamer_StXRef);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StXRef*)
   {
      return GenerateInitInstanceLocal((::StXRef*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StXRef*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TPageMap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TPageMap_Dictionary();
   static void *new_TPageMap(void *p = 0);
   static void *newArray_TPageMap(Long_t size, void *p);
   static void delete_TPageMap(void *p);
   static void deleteArray_TPageMap(void *p);
   static void destruct_TPageMap(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TPageMap*)
   {
      ::TPageMap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TPageMap),0);
      static ::ROOT::TGenericClassInfo 
         instance("TPageMap", ".sl73_gcc485/obj/StRoot/St_base/StObject.h", 143,
                  typeid(::TPageMap), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &TPageMap_Dictionary, isa_proxy, 1,
                  sizeof(::TPageMap) );
      instance.SetNew(&new_TPageMap);
      instance.SetNewArray(&newArray_TPageMap);
      instance.SetDelete(&delete_TPageMap);
      instance.SetDeleteArray(&deleteArray_TPageMap);
      instance.SetDestructor(&destruct_TPageMap);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TPageMap*)
   {
      return GenerateInitInstanceLocal((::TPageMap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPageMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TPageMap_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TPageMap*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StObjLink_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StObjLink(void *p = 0);
   static void *newArray_StObjLink(Long_t size, void *p);
   static void delete_StObjLink(void *p);
   static void deleteArray_StObjLink(void *p);
   static void destruct_StObjLink(void *p);
   static void streamer_StObjLink(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StObjLink*)
   {
      ::StObjLink *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StObjLink >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StObjLink", ::StObjLink::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StArray.h", 46,
                  typeid(::StObjLink), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StObjLink::Dictionary, isa_proxy, 1,
                  sizeof(::StObjLink) );
      instance.SetNew(&new_StObjLink);
      instance.SetNewArray(&newArray_StObjLink);
      instance.SetDelete(&delete_StObjLink);
      instance.SetDeleteArray(&deleteArray_StObjLink);
      instance.SetDestructor(&destruct_StObjLink);
      instance.SetStreamerFunc(&streamer_StObjLink);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StObjLink*)
   {
      return GenerateInitInstanceLocal((::StObjLink*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StObjLink*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StObjArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StObjArray(void *p = 0);
   static void *newArray_StObjArray(Long_t size, void *p);
   static void delete_StObjArray(void *p);
   static void deleteArray_StObjArray(void *p);
   static void destruct_StObjArray(void *p);
   static void streamer_StObjArray(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StObjArray*)
   {
      ::StObjArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StObjArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StObjArray", ::StObjArray::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StArray.h", 87,
                  typeid(::StObjArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StObjArray::Dictionary, isa_proxy, 1,
                  sizeof(::StObjArray) );
      instance.SetNew(&new_StObjArray);
      instance.SetNewArray(&newArray_StObjArray);
      instance.SetDelete(&delete_StObjArray);
      instance.SetDeleteArray(&deleteArray_StObjArray);
      instance.SetDestructor(&destruct_StObjArray);
      instance.SetStreamerFunc(&streamer_StObjArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StObjArray*)
   {
      return GenerateInitInstanceLocal((::StObjArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StObjArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StMem_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void StMem_Dictionary();

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMem*)
   {
      ::StMem *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::StMem),0);
      static ::ROOT::TGenericClassInfo 
         instance("StMem", ".sl73_gcc485/obj/StRoot/St_base/StMem.h", 17,
                  typeid(::StMem), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &StMem_Dictionary, isa_proxy, 1,
                  sizeof(::StMem) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMem*)
   {
      return GenerateInitInstanceLocal((::StMem*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMem*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void StMem_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::StMem*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StMessMgr_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StMessMgr(void *p);
   static void deleteArray_StMessMgr(void *p);
   static void destruct_StMessMgr(void *p);
   static void streamer_StMessMgr(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMessMgr*)
   {
      ::StMessMgr *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMessMgr >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMessMgr", ::StMessMgr::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StMessMgr.h", 108,
                  typeid(::StMessMgr), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StMessMgr::Dictionary, isa_proxy, 0,
                  sizeof(::StMessMgr) );
      instance.SetDelete(&delete_StMessMgr);
      instance.SetDeleteArray(&deleteArray_StMessMgr);
      instance.SetDestructor(&destruct_StMessMgr);
      instance.SetStreamerFunc(&streamer_StMessMgr);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMessMgr*)
   {
      return GenerateInitInstanceLocal((::StMessMgr*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMessMgr*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StFileIter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StFileIter(void *p = 0);
   static void *newArray_StFileIter(Long_t size, void *p);
   static void delete_StFileIter(void *p);
   static void deleteArray_StFileIter(void *p);
   static void destruct_StFileIter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StFileIter*)
   {
      ::StFileIter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StFileIter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StFileIter", ::StFileIter::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StFileIter.h", 61,
                  typeid(::StFileIter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StFileIter::Dictionary, isa_proxy, 4,
                  sizeof(::StFileIter) );
      instance.SetNew(&new_StFileIter);
      instance.SetNewArray(&newArray_StFileIter);
      instance.SetDelete(&delete_StFileIter);
      instance.SetDeleteArray(&deleteArray_StFileIter);
      instance.SetDestructor(&destruct_StFileIter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StFileIter*)
   {
      return GenerateInitInstanceLocal((::StFileIter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StFileIter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StVirtualEventFilter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StVirtualEventFilter(void *p = 0);
   static void *newArray_StVirtualEventFilter(Long_t size, void *p);
   static void delete_StVirtualEventFilter(void *p);
   static void deleteArray_StVirtualEventFilter(void *p);
   static void destruct_StVirtualEventFilter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StVirtualEventFilter*)
   {
      ::StVirtualEventFilter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StVirtualEventFilter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StVirtualEventFilter", ::StVirtualEventFilter::Class_Version(), ".sl73_gcc485/obj/StRoot/St_base/StVirtualEventFilter.h", 27,
                  typeid(::StVirtualEventFilter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StVirtualEventFilter::Dictionary, isa_proxy, 4,
                  sizeof(::StVirtualEventFilter) );
      instance.SetNew(&new_StVirtualEventFilter);
      instance.SetNewArray(&newArray_StVirtualEventFilter);
      instance.SetDelete(&delete_StVirtualEventFilter);
      instance.SetDeleteArray(&deleteArray_StVirtualEventFilter);
      instance.SetDestructor(&destruct_StVirtualEventFilter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StVirtualEventFilter*)
   {
      return GenerateInitInstanceLocal((::StVirtualEventFilter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StVirtualEventFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr St_table_header::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *St_table_header::Class_Name()
{
   return "St_table_header";
}

//______________________________________________________________________________
const char *St_table_header::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St_table_header*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int St_table_header::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St_table_header*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void St_table_header::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St_table_header*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *St_table_header::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St_table_header*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr St_Module::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *St_Module::Class_Name()
{
   return "St_Module";
}

//______________________________________________________________________________
const char *St_Module::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St_Module*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int St_Module::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::St_Module*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void St_Module::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St_Module*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *St_Module::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::St_Module*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StFileI::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFileI::Class_Name()
{
   return "StFileI";
}

//______________________________________________________________________________
const char *StFileI::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFileI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFileI::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFileI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFileI::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFileI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFileI::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFileI*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StTree::Class_Name()
{
   return "StTree";
}

//______________________________________________________________________________
const char *StTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StBranch::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StBranch::Class_Name()
{
   return "StBranch";
}

//______________________________________________________________________________
const char *StBranch::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StBranch*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StBranch::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StBranch*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StBranch::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StBranch*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StBranch::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StBranch*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StIOEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StIOEvent::Class_Name()
{
   return "StIOEvent";
}

//______________________________________________________________________________
const char *StIOEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StIOEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StIOEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StIOEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StIOEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StIOEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StIOEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StIOEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFile::Class_Name()
{
   return "StFile";
}

//______________________________________________________________________________
const char *StFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StXRefMain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StXRefMain::Class_Name()
{
   return "StXRefMain";
}

//______________________________________________________________________________
const char *StXRefMain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StXRefMain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StXRefMain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StXRefMain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StXRefMain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StXRefMain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StXRefMain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StXRefMain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StRefArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRefArray::Class_Name()
{
   return "StRefArray";
}

//______________________________________________________________________________
const char *StRefArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRefArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRefArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRefArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRefArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRefArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRefArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRefArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StStrArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StStrArray::Class_Name()
{
   return "StStrArray";
}

//______________________________________________________________________________
const char *StStrArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StStrArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StStrArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StStrArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StStrArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StStrArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StStrArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StStrArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StObject::Class_Name()
{
   return "StObject";
}

//______________________________________________________________________________
const char *StObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StObject*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StUUId::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StUUId::Class_Name()
{
   return "StUUId";
}

//______________________________________________________________________________
const char *StUUId::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUUId*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StUUId::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUUId*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StUUId::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUUId*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StUUId::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUUId*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StXRef::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StXRef::Class_Name()
{
   return "StXRef";
}

//______________________________________________________________________________
const char *StXRef::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StXRef*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StXRef::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StXRef*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StXRef::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StXRef*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StXRef::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StXRef*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StObjLink::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StObjLink::Class_Name()
{
   return "StObjLink";
}

//______________________________________________________________________________
const char *StObjLink::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StObjLink*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StObjLink::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StObjLink*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StObjLink::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StObjLink*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StObjLink::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StObjLink*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StObjArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StObjArray::Class_Name()
{
   return "StObjArray";
}

//______________________________________________________________________________
const char *StObjArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StObjArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StObjArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StObjArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StObjArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StObjArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StObjArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StObjArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StMessMgr::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StMessMgr::Class_Name()
{
   return "StMessMgr";
}

//______________________________________________________________________________
const char *StMessMgr::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMessMgr*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StMessMgr::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMessMgr*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StMessMgr::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMessMgr*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StMessMgr::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMessMgr*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StFileIter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFileIter::Class_Name()
{
   return "StFileIter";
}

//______________________________________________________________________________
const char *StFileIter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFileIter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFileIter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFileIter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFileIter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFileIter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFileIter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFileIter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StVirtualEventFilter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StVirtualEventFilter::Class_Name()
{
   return "StVirtualEventFilter";
}

//______________________________________________________________________________
const char *StVirtualEventFilter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StVirtualEventFilter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StVirtualEventFilter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StVirtualEventFilter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StVirtualEventFilter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StVirtualEventFilter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StVirtualEventFilter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StVirtualEventFilter*)0x0)->GetClass();} }
   return fgIsA;
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_table_head_st(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::table_head_st : new ::table_head_st;
   }
   static void *newArray_table_head_st(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::table_head_st[nElements] : new ::table_head_st[nElements];
   }
   // Wrapper around operator delete
   static void delete_table_head_st(void *p) {
      delete ((::table_head_st*)p);
   }
   static void deleteArray_table_head_st(void *p) {
      delete [] ((::table_head_st*)p);
   }
   static void destruct_table_head_st(void *p) {
      typedef ::table_head_st current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::table_head_st

//______________________________________________________________________________
void St_Module::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class St_Module.
      TClass *R__cl = ::St_Module::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParams", &fParams);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHeaders", &fHeaders);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fName", &fName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndex", &fIndex);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_St_Module(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::St_Module : new ::St_Module;
   }
   static void *newArray_St_Module(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::St_Module[nElements] : new ::St_Module[nElements];
   }
   // Wrapper around operator delete
   static void delete_St_Module(void *p) {
      delete ((::St_Module*)p);
   }
   static void deleteArray_St_Module(void *p) {
      delete [] ((::St_Module*)p);
   }
   static void destruct_St_Module(void *p) {
      typedef ::St_Module current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_St_Module(TBuffer &buf, void *obj) {
      ((::St_Module*)obj)->::St_Module::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::St_Module

//______________________________________________________________________________
void StTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class StTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      StBranch::Streamer(R__b);
      fBaseName.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, StTree::IsA());
   } else {
      R__c = R__b.WriteVersion(StTree::IsA(), kTRUE);
      StBranch::Streamer(R__b);
      fBaseName.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void StTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StTree.
      TClass *R__cl = ::StTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaseName", &fBaseName);
      R__insp.InspectMember(fBaseName, "fBaseName.");
      StBranch::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StTree(void *p) {
      return  p ? new(p) ::StTree : new ::StTree;
   }
   static void *newArray_StTree(Long_t nElements, void *p) {
      return p ? new(p) ::StTree[nElements] : new ::StTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_StTree(void *p) {
      delete ((::StTree*)p);
   }
   static void deleteArray_StTree(void *p) {
      delete [] ((::StTree*)p);
   }
   static void destruct_StTree(void *p) {
      typedef ::StTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StTree(TBuffer &buf, void *obj) {
      ((::StTree*)obj)->::StTree::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StTree

//______________________________________________________________________________
void StBranch::Streamer(TBuffer &R__b)
{
   // Stream an object of class StBranch.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TDataSet::Streamer(R__b);
      R__b >> fNEvents;
      fFile.Streamer(R__b);
      fOption.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, StBranch::IsA());
   } else {
      R__c = R__b.WriteVersion(StBranch::IsA(), kTRUE);
      TDataSet::Streamer(R__b);
      R__b << fNEvents;
      fFile.Streamer(R__b);
      fOption.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void StBranch::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StBranch.
      TClass *R__cl = ::StBranch::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEvents", &fNEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUKey", (void*)&fUKey);
      R__insp.InspectMember("StUKey", (void*)&fUKey, "fUKey.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIOMode", &fIOMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFile", &fFile);
      R__insp.InspectMember(fFile, "fFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOption", &fOption);
      R__insp.InspectMember(fOption, "fOption.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTFile", &fTFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebug", &fDebug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHandle", &fHandle);
      TDataSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StBranch(void *p) {
      return  p ? new(p) ::StBranch : new ::StBranch;
   }
   static void *newArray_StBranch(Long_t nElements, void *p) {
      return p ? new(p) ::StBranch[nElements] : new ::StBranch[nElements];
   }
   // Wrapper around operator delete
   static void delete_StBranch(void *p) {
      delete ((::StBranch*)p);
   }
   static void deleteArray_StBranch(void *p) {
      delete [] ((::StBranch*)p);
   }
   static void destruct_StBranch(void *p) {
      typedef ::StBranch current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StBranch(TBuffer &buf, void *obj) {
      ((::StBranch*)obj)->::StBranch::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StBranch

//______________________________________________________________________________
void StFileI::Streamer(TBuffer &R__b)
{
   // Stream an object of class StFileI.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void StFileI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StFileI.
      TClass *R__cl = ::StFileI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebug", &fDebug);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StFileI(void *p) {
      delete ((::StFileI*)p);
   }
   static void deleteArray_StFileI(void *p) {
      delete [] ((::StFileI*)p);
   }
   static void destruct_StFileI(void *p) {
      typedef ::StFileI current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StFileI(TBuffer &buf, void *obj) {
      ((::StFileI*)obj)->::StFileI::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StFileI

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StUKey(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StUKey : new ::StUKey;
   }
   static void *newArray_StUKey(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StUKey[nElements] : new ::StUKey[nElements];
   }
   // Wrapper around operator delete
   static void delete_StUKey(void *p) {
      delete ((::StUKey*)p);
   }
   static void deleteArray_StUKey(void *p) {
      delete [] ((::StUKey*)p);
   }
   static void destruct_StUKey(void *p) {
      typedef ::StUKey current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StUKey

//______________________________________________________________________________
void StFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class StFile.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      StFileI::Streamer(R__b);
      R__b >> fDS;
      R__b >> fIter;
      R__b >> fKeyIter;
      R__b.CheckByteCount(R__s, R__c, StFile::IsA());
   } else {
      R__c = R__b.WriteVersion(StFile::IsA(), kTRUE);
      StFileI::Streamer(R__b);
      R__b << fDS;
      R__b << fIter;
      R__b << fKeyIter;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void StFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StFile.
      TClass *R__cl = ::StFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDS", &fDS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIter", &fIter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fKeyIter", &fKeyIter);
      StFileI::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StFile(void *p) {
      return  p ? new(p) ::StFile : new ::StFile;
   }
   static void *newArray_StFile(Long_t nElements, void *p) {
      return p ? new(p) ::StFile[nElements] : new ::StFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_StFile(void *p) {
      delete ((::StFile*)p);
   }
   static void deleteArray_StFile(void *p) {
      delete [] ((::StFile*)p);
   }
   static void destruct_StFile(void *p) {
      typedef ::StFile current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StFile(TBuffer &buf, void *obj) {
      ((::StFile*)obj)->::StFile::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StFile

//______________________________________________________________________________
void StIOEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StIOEvent.
      TClass *R__cl = ::StIOEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fObj", &fObj);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StIOEvent(void *p) {
      return  p ? new(p) ::StIOEvent : new ::StIOEvent;
   }
   static void *newArray_StIOEvent(Long_t nElements, void *p) {
      return p ? new(p) ::StIOEvent[nElements] : new ::StIOEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_StIOEvent(void *p) {
      delete ((::StIOEvent*)p);
   }
   static void deleteArray_StIOEvent(void *p) {
      delete [] ((::StIOEvent*)p);
   }
   static void destruct_StIOEvent(void *p) {
      typedef ::StIOEvent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StIOEvent(TBuffer &buf, void *obj) {
      ((::StIOEvent*)obj)->::StIOEvent::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StIOEvent

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StIO(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StIO : new ::StIO;
   }
   static void *newArray_StIO(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StIO[nElements] : new ::StIO[nElements];
   }
   // Wrapper around operator delete
   static void delete_StIO(void *p) {
      delete ((::StIO*)p);
   }
   static void deleteArray_StIO(void *p) {
      delete [] ((::StIO*)p);
   }
   static void destruct_StIO(void *p) {
      typedef ::StIO current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StIO

//______________________________________________________________________________
void StObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StObject.
      TClass *R__cl = ::StObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StObject(void *p) {
      return  p ? new(p) ::StObject : new ::StObject;
   }
   static void *newArray_StObject(Long_t nElements, void *p) {
      return p ? new(p) ::StObject[nElements] : new ::StObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_StObject(void *p) {
      delete ((::StObject*)p);
   }
   static void deleteArray_StObject(void *p) {
      delete [] ((::StObject*)p);
   }
   static void destruct_StObject(void *p) {
      typedef ::StObject current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StObject(TBuffer &buf, void *obj) {
      ((::StObject*)obj)->::StObject::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StObject

//______________________________________________________________________________
void StUUId::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StUUId.
      TClass *R__cl = ::StUUId::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID[4]", fID);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StUUId(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StUUId : new ::StUUId;
   }
   static void *newArray_StUUId(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StUUId[nElements] : new ::StUUId[nElements];
   }
   // Wrapper around operator delete
   static void delete_StUUId(void *p) {
      delete ((::StUUId*)p);
   }
   static void deleteArray_StUUId(void *p) {
      delete [] ((::StUUId*)p);
   }
   static void destruct_StUUId(void *p) {
      typedef ::StUUId current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StUUId(TBuffer &buf, void *obj) {
      ((::StUUId*)obj)->::StUUId::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StUUId

//______________________________________________________________________________
void StXRef::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StXRef.
      TClass *R__cl = ::StXRef::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUUId", &fUUId);
      R__insp.InspectMember(fUUId, "fUUId.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTally", &fTally);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMain", &fMain);
      TDataSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StXRef(void *p) {
      delete ((::StXRef*)p);
   }
   static void deleteArray_StXRef(void *p) {
      delete [] ((::StXRef*)p);
   }
   static void destruct_StXRef(void *p) {
      typedef ::StXRef current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StXRef(TBuffer &buf, void *obj) {
      ((::StXRef*)obj)->::StXRef::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StXRef

//______________________________________________________________________________
void StXRefMain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StXRefMain.
      TClass *R__cl = ::StXRefMain::IsA();
      if (R__cl || R__insp.IsA()) { }
      StXRef::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StXRefMain(void *p) {
      delete ((::StXRefMain*)p);
   }
   static void deleteArray_StXRefMain(void *p) {
      delete [] ((::StXRefMain*)p);
   }
   static void destruct_StXRefMain(void *p) {
      typedef ::StXRefMain current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StXRefMain(TBuffer &buf, void *obj) {
      ((::StXRefMain*)obj)->::StXRefMain::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StXRefMain

//______________________________________________________________________________
void StObjArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StObjArray.
      TClass *R__cl = ::StObjArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV", (void*)&fV);
      R__insp.InspectMember("VecTObj", (void*)&fV, "fV.", false);
      StObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StObjArray(void *p) {
      return  p ? new(p) ::StObjArray : new ::StObjArray;
   }
   static void *newArray_StObjArray(Long_t nElements, void *p) {
      return p ? new(p) ::StObjArray[nElements] : new ::StObjArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_StObjArray(void *p) {
      delete ((::StObjArray*)p);
   }
   static void deleteArray_StObjArray(void *p) {
      delete [] ((::StObjArray*)p);
   }
   static void destruct_StObjArray(void *p) {
      typedef ::StObjArray current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StObjArray(TBuffer &buf, void *obj) {
      ((::StObjArray*)obj)->::StObjArray::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StObjArray

//______________________________________________________________________________
void StRefArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRefArray.
      TClass *R__cl = ::StRefArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      StObjArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRefArray(void *p) {
      return  p ? new(p) ::StRefArray : new ::StRefArray;
   }
   static void *newArray_StRefArray(Long_t nElements, void *p) {
      return p ? new(p) ::StRefArray[nElements] : new ::StRefArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRefArray(void *p) {
      delete ((::StRefArray*)p);
   }
   static void deleteArray_StRefArray(void *p) {
      delete [] ((::StRefArray*)p);
   }
   static void destruct_StRefArray(void *p) {
      typedef ::StRefArray current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StRefArray(TBuffer &buf, void *obj) {
      ((::StRefArray*)obj)->::StRefArray::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StRefArray

//______________________________________________________________________________
void StStrArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StStrArray.
      TClass *R__cl = ::StStrArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      StObjArray::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StStrArray(void *p) {
      return  p ? new(p) ::StStrArray : new ::StStrArray;
   }
   static void *newArray_StStrArray(Long_t nElements, void *p) {
      return p ? new(p) ::StStrArray[nElements] : new ::StStrArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_StStrArray(void *p) {
      delete ((::StStrArray*)p);
   }
   static void deleteArray_StStrArray(void *p) {
      delete [] ((::StStrArray*)p);
   }
   static void destruct_StStrArray(void *p) {
      typedef ::StStrArray current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StStrArray(TBuffer &buf, void *obj) {
      ((::StStrArray*)obj)->::StStrArray::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StStrArray

//______________________________________________________________________________
void StObjLink::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StObjLink.
      TClass *R__cl = ::StObjLink::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLink", &fLink);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StObjLink(void *p) {
      return  p ? new(p) ::StObjLink : new ::StObjLink;
   }
   static void *newArray_StObjLink(Long_t nElements, void *p) {
      return p ? new(p) ::StObjLink[nElements] : new ::StObjLink[nElements];
   }
   // Wrapper around operator delete
   static void delete_StObjLink(void *p) {
      delete ((::StObjLink*)p);
   }
   static void deleteArray_StObjLink(void *p) {
      delete [] ((::StObjLink*)p);
   }
   static void destruct_StObjLink(void *p) {
      typedef ::StObjLink current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StObjLink(TBuffer &buf, void *obj) {
      ((::StObjLink*)obj)->::StObjLink::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StObjLink

namespace ROOTDict {
} // end of namespace ROOTDict for class ::StMem

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TPageMap(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPageMap : new ::TPageMap;
   }
   static void *newArray_TPageMap(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TPageMap[nElements] : new ::TPageMap[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPageMap(void *p) {
      delete ((::TPageMap*)p);
   }
   static void deleteArray_TPageMap(void *p) {
      delete [] ((::TPageMap*)p);
   }
   static void destruct_TPageMap(void *p) {
      typedef ::TPageMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TPageMap

//______________________________________________________________________________
void StMessMgr::Streamer(TBuffer &R__b)
{
   // Stream an object of class StMessMgr.

   ::Error("StMessMgr::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void StMessMgr::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StMessMgr.
      TClass *R__cl = ::StMessMgr::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("basic_ostringstream<char,char_traits<char>,allocator<char> >", ( ::basic_ostringstream<char,char_traits<char>,allocator<char> > *) (this ), false);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StMessMgr(void *p) {
      delete ((::StMessMgr*)p);
   }
   static void deleteArray_StMessMgr(void *p) {
      delete [] ((::StMessMgr*)p);
   }
   static void destruct_StMessMgr(void *p) {
      typedef ::StMessMgr current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StMessMgr(TBuffer &buf, void *obj) {
      ((::StMessMgr*)obj)->::StMessMgr::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StMessMgr

//______________________________________________________________________________
void StFileIter::Streamer(TBuffer &R__b)
{
   // Stream an object of class StFileIter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StFileIter::Class(),this);
   } else {
      R__b.WriteClassBuffer(StFileIter::Class(),this);
   }
}

//______________________________________________________________________________
void StFileIter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StFileIter.
      TClass *R__cl = ::StFileIter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileBackUp", &fFileBackUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDirectoryBackUp", &fDirectoryBackUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNestedIterator", &fNestedIterator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRootFile", &fRootFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventName", &fEventName);
      R__insp.InspectMember(fEventName, "fEventName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCursorPosition", &fCursorPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOwnTFile", &fOwnTFile);
      TListIter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StFileIter(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StFileIter : new ::StFileIter;
   }
   static void *newArray_StFileIter(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StFileIter[nElements] : new ::StFileIter[nElements];
   }
   // Wrapper around operator delete
   static void delete_StFileIter(void *p) {
      delete ((::StFileIter*)p);
   }
   static void deleteArray_StFileIter(void *p) {
      delete [] ((::StFileIter*)p);
   }
   static void destruct_StFileIter(void *p) {
      typedef ::StFileIter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StFileIter

//______________________________________________________________________________
void StVirtualEventFilter::Streamer(TBuffer &R__b)
{
   // Stream an object of class StVirtualEventFilter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StVirtualEventFilter::Class(),this);
   } else {
      R__b.WriteClassBuffer(StVirtualEventFilter::Class(),this);
   }
}

//______________________________________________________________________________
void StVirtualEventFilter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StVirtualEventFilter.
      TClass *R__cl = ::StVirtualEventFilter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_ActiveFlag", &m_ActiveFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOptions", &mOptions);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StVirtualEventFilter(void *p) {
      return  p ? new(p) ::StVirtualEventFilter : new ::StVirtualEventFilter;
   }
   static void *newArray_StVirtualEventFilter(Long_t nElements, void *p) {
      return p ? new(p) ::StVirtualEventFilter[nElements] : new ::StVirtualEventFilter[nElements];
   }
   // Wrapper around operator delete
   static void delete_StVirtualEventFilter(void *p) {
      delete ((::StVirtualEventFilter*)p);
   }
   static void deleteArray_StVirtualEventFilter(void *p) {
      delete [] ((::StVirtualEventFilter*)p);
   }
   static void destruct_StVirtualEventFilter(void *p) {
      typedef ::StVirtualEventFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StVirtualEventFilter

//______________________________________________________________________________
void St_table_header::Streamer(TBuffer &R__b)
{
   // Stream an object of class St_table_header.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(St_table_header::Class(),this);
   } else {
      R__b.WriteClassBuffer(St_table_header::Class(),this);
   }
}

//______________________________________________________________________________
void St_table_header::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class St_table_header.
      TClass *R__cl = ::St_table_header::IsA();
      if (R__cl || R__insp.IsA()) { }
      TTable::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_St_table_header(void *p) {
      return  p ? new(p) ::St_table_header : new ::St_table_header;
   }
   static void *newArray_St_table_header(Long_t nElements, void *p) {
      return p ? new(p) ::St_table_header[nElements] : new ::St_table_header[nElements];
   }
   // Wrapper around operator delete
   static void delete_St_table_header(void *p) {
      delete ((::St_table_header*)p);
   }
   static void deleteArray_St_table_header(void *p) {
      delete [] ((::St_table_header*)p);
   }
   static void destruct_St_table_header(void *p) {
      typedef ::St_table_header current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::St_table_header

namespace ROOTDict {
   void vectorlETObjectmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETObjectmUgR_Dictionary();
   static void *new_vectorlETObjectmUgR(void *p = 0);
   static void *newArray_vectorlETObjectmUgR(Long_t size, void *p);
   static void delete_vectorlETObjectmUgR(void *p);
   static void deleteArray_vectorlETObjectmUgR(void *p);
   static void destruct_vectorlETObjectmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TObject*>*)
   {
      vector<TObject*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TObject*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TObject*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TObject*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETObjectmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TObject*>) );
      instance.SetNew(&new_vectorlETObjectmUgR);
      instance.SetNewArray(&newArray_vectorlETObjectmUgR);
      instance.SetDelete(&delete_vectorlETObjectmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETObjectmUgR);
      instance.SetDestructor(&destruct_vectorlETObjectmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TObject*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TObject*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETObjectmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TObject*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETObjectmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TObject*> : new vector<TObject*>;
   }
   static void *newArray_vectorlETObjectmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TObject*>[nElements] : new vector<TObject*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETObjectmUgR(void *p) {
      delete ((vector<TObject*>*)p);
   }
   static void deleteArray_vectorlETObjectmUgR(void *p) {
      delete [] ((vector<TObject*>*)p);
   }
   static void destruct_vectorlETObjectmUgR(void *p) {
      typedef vector<TObject*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TObject*>

/********************************************************
* .sl73_gcc485/obj/StRoot/St_base/St_base_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSt_base_Cint();

extern "C" void G__set_cpp_environmentSt_base_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Stypes.h");
  G__add_compiledheader("St_Module.h");
  G__add_compiledheader("StTree.h");
  G__add_compiledheader("StFileI.h");
  G__add_compiledheader("StObject.h");
  G__add_compiledheader("StArray.h");
  G__add_compiledheader("StMem.h");
  G__add_compiledheader("StMessMgr.h");
  G__add_compiledheader("StFileIter.h");
  G__add_compiledheader("StVirtualEventFilter.h");
  G__add_compiledheader("St_table_header_Table.h");
  G__add_compiledheader("Stypes.h");
  G__cpp_reset_tagtableSt_base_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevSt_base_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* table_head_st */
// automatic default constructor
static int G__St_base_Cint_239_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   table_head_st *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new table_head_st[n];
     } else {
       p = new((void*) gvp) table_head_st[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new table_head_st;
     } else {
       p = new((void*) gvp) table_head_st;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_table_head_st));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_239_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   table_head_st* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new table_head_st(*(table_head_st*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_table_head_st));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef table_head_st G__Ttable_head_st;
static int G__St_base_Cint_239_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (table_head_st*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((table_head_st*) (soff+(sizeof(table_head_st)*i)))->~G__Ttable_head_st();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (table_head_st*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((table_head_st*) (soff))->~G__Ttable_head_st();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__St_base_Cint_239_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   table_head_st* dest = (table_head_st*) G__getstructoffset();
   *dest = *(table_head_st*) libp->para[0].ref;
   const table_head_st& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* St_table_header */
static int G__St_base_Cint_240_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St_table_header* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new St_table_header((TTable*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) St_table_header((TTable*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_St_table_header));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) St_table_header::Object(libp->para[0].ref ? *(TTable**) libp->para[0].ref : *(TTable**) (void*) (&G__Mlong(libp->para[0])), (table_head_st*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St_table_header::TableDictionary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St_table_header* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_table_header[n];
     } else {
       p = new((void*) gvp) St_table_header[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_table_header;
     } else {
       p = new((void*) gvp) St_table_header;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_St_table_header));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St_table_header* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new St_table_header((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) St_table_header((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_St_table_header));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St_table_header* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new St_table_header((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) St_table_header((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_St_table_header));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St_table_header* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new St_table_header((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) St_table_header((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_St_table_header));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const St_table_header*) G__getstructoffset())->GetTable((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const St_table_header*) G__getstructoffset())->GetTable());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const table_head_st& obj = ((St_table_header*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const table_head_st& obj = ((const St_table_header*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const St_table_header*) G__getstructoffset())->begin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const St_table_header*) G__getstructoffset())->end());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) St_table_header::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St_table_header::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) St_table_header::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      St_table_header::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St_table_header*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St_table_header::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St_table_header::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St_table_header::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_240_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St_table_header::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_240_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   St_table_header* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new St_table_header(*(St_table_header*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_St_table_header));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef St_table_header G__TSt_table_header;
static int G__St_base_Cint_240_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (St_table_header*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((St_table_header*) (soff+(sizeof(St_table_header)*i)))->~G__TSt_table_header();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (St_table_header*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((St_table_header*) (soff))->~G__TSt_table_header();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* St_Module */
static int G__St_base_Cint_241_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St_Module* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module[n];
     } else {
       p = new((void*) gvp) St_Module[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module;
     } else {
       p = new((void*) gvp) St_Module;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_St_Module));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St_Module* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 38:
     //m: 38
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36]), (TTable*) G__int(libp->para[37]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36]), (TTable*) G__int(libp->para[37]));
     }
     break;
   case 37:
     //m: 37
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36]));
     }
     break;
   case 36:
     //m: 36
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35]));
     }
     break;
   case 35:
     //m: 35
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]));
     }
     break;
   case 34:
     //m: 34
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33]));
     }
     break;
   case 33:
     //m: 33
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]));
     }
     break;
   case 32:
     //m: 32
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31]));
     }
     break;
   case 31:
     //m: 31
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]));
     }
     break;
   case 30:
     //m: 30
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29]));
     }
     break;
   case 29:
     //m: 29
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]));
     }
     break;
   case 28:
     //m: 28
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27]));
     }
     break;
   case 27:
     //m: 27
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]));
     }
     break;
   case 26:
     //m: 26
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25]));
     }
     break;
   case 25:
     //m: 25
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]));
     }
     break;
   case 24:
     //m: 24
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23]));
     }
     break;
   case 23:
     //m: 23
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]));
     }
     break;
   case 22:
     //m: 22
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21]));
     }
     break;
   case 21:
     //m: 21
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]));
     }
     break;
   case 20:
     //m: 20
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19]));
     }
     break;
   case 19:
     //m: 19
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]));
     }
     break;
   case 18:
     //m: 18
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17]));
     }
     break;
   case 17:
     //m: 17
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]));
     }
     break;
   case 16:
     //m: 16
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15]));
     }
     break;
   case 15:
     //m: 15
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]));
     }
     break;
   case 14:
     //m: 14
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13]));
     }
     break;
   case 13:
     //m: 13
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]));
     }
     break;
   case 12:
     //m: 12
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11]));
     }
     break;
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) St_Module(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module((TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) St_Module((TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module((TTable*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) St_Module((TTable*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_St_Module));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St_Module* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 39:
     //m: 39
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36]), (TTable*) G__int(libp->para[37])
, (TTable*) G__int(libp->para[38]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36]), (TTable*) G__int(libp->para[37])
, (TTable*) G__int(libp->para[38]));
     }
     break;
   case 38:
     //m: 38
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36]), (TTable*) G__int(libp->para[37]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36]), (TTable*) G__int(libp->para[37]));
     }
     break;
   case 37:
     //m: 37
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36]));
     }
     break;
   case 36:
     //m: 36
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35]));
     }
     break;
   case 35:
     //m: 35
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]));
     }
     break;
   case 34:
     //m: 34
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33]));
     }
     break;
   case 33:
     //m: 33
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]));
     }
     break;
   case 32:
     //m: 32
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31]));
     }
     break;
   case 31:
     //m: 31
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]));
     }
     break;
   case 30:
     //m: 30
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29]));
     }
     break;
   case 29:
     //m: 29
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]));
     }
     break;
   case 28:
     //m: 28
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27]));
     }
     break;
   case 27:
     //m: 27
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]));
     }
     break;
   case 26:
     //m: 26
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25]));
     }
     break;
   case 25:
     //m: 25
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]));
     }
     break;
   case 24:
     //m: 24
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23]));
     }
     break;
   case 23:
     //m: 23
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]));
     }
     break;
   case 22:
     //m: 22
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21]));
     }
     break;
   case 21:
     //m: 21
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]));
     }
     break;
   case 20:
     //m: 20
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19]));
     }
     break;
   case 19:
     //m: 19
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]));
     }
     break;
   case 18:
     //m: 18
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17]));
     }
     break;
   case 17:
     //m: 17
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]));
     }
     break;
   case 16:
     //m: 16
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15]));
     }
     break;
   case 15:
     //m: 15
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]));
     }
     break;
   case 14:
     //m: 14
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13]));
     }
     break;
   case 13:
     //m: 13
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]));
     }
     break;
   case 12:
     //m: 12
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11]));
     }
     break;
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) St_Module(
(Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module((Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) St_Module((Char_t*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new St_Module((Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) St_Module((Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_St_Module));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St_Module*) G__getstructoffset())->Call();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->CheckParameters((const Char_t**) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->CheckParameters());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->CheckResults((Int_t) G__int(libp->para[0]), (const Char_t**) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->CheckResults((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->ExecuteModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const St_Module*) G__getstructoffset())->GetHeader((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const St_Module*) G__getstructoffset())->GetTable((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) ((const St_Module*) G__getstructoffset())->GetStruct((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 38:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36]), (TTable*) G__int(libp->para[37])));
      break;
   case 37:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])
, (TTable*) G__int(libp->para[36])));
      break;
   case 36:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34]), (TTable*) G__int(libp->para[35])));
      break;
   case 35:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])
, (TTable*) G__int(libp->para[34])));
      break;
   case 34:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32]), (TTable*) G__int(libp->para[33])));
      break;
   case 33:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])
, (TTable*) G__int(libp->para[32])));
      break;
   case 32:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30]), (TTable*) G__int(libp->para[31])));
      break;
   case 31:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])
, (TTable*) G__int(libp->para[30])));
      break;
   case 30:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28]), (TTable*) G__int(libp->para[29])));
      break;
   case 29:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])
, (TTable*) G__int(libp->para[28])));
      break;
   case 28:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26]), (TTable*) G__int(libp->para[27])));
      break;
   case 27:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])
, (TTable*) G__int(libp->para[26])));
      break;
   case 26:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24]), (TTable*) G__int(libp->para[25])));
      break;
   case 25:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])
, (TTable*) G__int(libp->para[24])));
      break;
   case 24:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22]), (TTable*) G__int(libp->para[23])));
      break;
   case 23:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])
, (TTable*) G__int(libp->para[22])));
      break;
   case 22:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20]), (TTable*) G__int(libp->para[21])));
      break;
   case 21:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])
, (TTable*) G__int(libp->para[20])));
      break;
   case 20:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18]), (TTable*) G__int(libp->para[19])));
      break;
   case 19:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])
, (TTable*) G__int(libp->para[18])));
      break;
   case 18:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16]), (TTable*) G__int(libp->para[17])));
      break;
   case 17:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])
, (TTable*) G__int(libp->para[16])));
      break;
   case 16:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14]), (TTable*) G__int(libp->para[15])));
      break;
   case 15:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])
, (TTable*) G__int(libp->para[14])));
      break;
   case 14:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12]), (TTable*) G__int(libp->para[13])));
      break;
   case 13:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])
, (TTable*) G__int(libp->para[12])));
      break;
   case 12:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10]), (TTable*) G__int(libp->para[11])));
      break;
   case 11:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])
, (TTable*) G__int(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8]), (TTable*) G__int(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])
, (TTable*) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6]), (TTable*) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule(
(TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])
, (TTable*) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule((TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4]), (TTable*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule((TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])
, (TTable*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule((TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2]), (TTable*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule((TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])
, (TTable*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule((TTable*) G__int(libp->para[0]), (TTable*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((St_Module*) G__getstructoffset())->InvokeModule((TTable*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((St_Module*) G__getstructoffset())->GetTitle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((St_Module*) G__getstructoffset())->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) St_Module::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St_Module::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) St_Module::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      St_Module::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const St_Module*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St_Module*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St_Module*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((St_Module*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St_Module::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St_Module::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) St_Module::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_241_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) St_Module::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_241_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   St_Module* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new St_Module(*(St_Module*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_St_Module));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef St_Module G__TSt_Module;
static int G__St_base_Cint_241_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (St_Module*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((St_Module*) (soff+(sizeof(St_Module)*i)))->~G__TSt_Module();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (St_Module*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((St_Module*) (soff))->~G__TSt_Module();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__St_base_Cint_241_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   St_Module* dest = (St_Module*) G__getstructoffset();
   *dest = *(St_Module*) libp->para[0].ref;
   const St_Module& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StUKey */
static int G__St_base_Cint_334_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUKey* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUKey(
(const char*) G__int(libp->para[0]), (UInt_t*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) StUKey(
(const char*) G__int(libp->para[0]), (UInt_t*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUKey((const char*) G__int(libp->para[0]), (UInt_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StUKey((const char*) G__int(libp->para[0]), (UInt_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUKey((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StUKey((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StUKey[n];
       } else {
         p = new((void*) gvp) StUKey[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StUKey;
       } else {
         p = new((void*) gvp) StUKey;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StUKey));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUKey* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StUKey((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) StUKey((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StUKey));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUKey* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUKey((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StUKey((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUKey((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StUKey((UInt_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StUKey));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StUKey& obj = ((StUKey*) G__getstructoffset())->operator=(*(StUKey*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StUKey& obj = ((StUKey*) G__getstructoffset())->operator=((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StUKey& obj = ((StUKey*) G__getstructoffset())->operator=((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StUKey& obj = ((StUKey*) G__getstructoffset())->operator=((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StUKey*) G__getstructoffset())->Update(*(StUKey*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StUKey*) G__getstructoffset())->Update(*(StUKey*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUKey*) G__getstructoffset())->SetName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const StUKey*) G__getstructoffset())->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const StUKey*) G__getstructoffset())->GetKey();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUKey*) G__getstructoffset())->GetNInt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((const StUKey*) G__getstructoffset())->GetUrr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUKey*) G__getstructoffset())->SetKey((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUKey*) G__getstructoffset())->SetUrr((const UInt_t*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUKey*) G__getstructoffset())->GetSum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUKey*) G__getstructoffset())->EOK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUKey*) G__getstructoffset())->IsNull());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUKey*) G__getstructoffset())->Compare(*(StUKey*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUKey*) G__getstructoffset())->GetRunId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_334_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUKey*) G__getstructoffset())->GetEventId());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_334_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StUKey* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StUKey(*(StUKey*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StUKey));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StUKey G__TStUKey;
static int G__St_base_Cint_334_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StUKey*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StUKey*) (soff+(sizeof(StUKey)*i)))->~G__TStUKey();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StUKey*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StUKey*) (soff))->~G__TStUKey();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StFileI */
static int G__St_base_Cint_335_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->SetDebug((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->SetDebug());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StFileI*) G__getstructoffset())->GetDebug());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->Init((int) G__int(libp->para[0]), (const char**) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->Init((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->AddFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->AddFile((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->AddFile((const char**) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->AddWild((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->GetNFiles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->GetNBundles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->GetBundleSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 67, (long) ((StFileI*) G__getstructoffset())->GetFileName((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 67, (long) ((StFileI*) G__getstructoffset())->GetFileName());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 67, (long) ((StFileI*) G__getstructoffset())->GetCompName((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 67, (long) ((StFileI*) G__getstructoffset())->GetCompName());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 67, (long) ((StFileI*) G__getstructoffset())->GetFormat((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 67, (long) ((StFileI*) G__getstructoffset())->GetFormat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->GetNextBundle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFileI*) G__getstructoffset())->GetNextEvent((UInt_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StUKey* pobj;
         StUKey xobj = ((StFileI*) G__getstructoffset())->GetNextEvent();
         pobj = new StUKey(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFileI*) G__getstructoffset())->Rewind();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StFileI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFileI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StFileI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFileI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFileI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFileI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFileI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFileI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_335_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFileI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StFileI G__TStFileI;
static int G__St_base_Cint_335_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StFileI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StFileI*) (soff+(sizeof(StFileI)*i)))->~G__TStFileI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StFileI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StFileI*) (soff))->~G__TStFileI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__St_base_Cint_335_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFileI* dest = (StFileI*) G__getstructoffset();
   *dest = *(StFileI*) libp->para[0].ref;
   const StFileI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StIO */
static int G__St_base_Cint_336_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StIO::Write((TFile*) G__int(libp->para[0]), *(StUKey*) libp->para[1].ref
, (TObject*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_336_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StIO::Read((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_336_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StIO::Read((TFile*) G__int(libp->para[0]), *(StUKey*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_336_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StIO::GetNextKey((TFile*) G__int(libp->para[0]), *(StUKey*) libp->para[1].ref
, *(ULong_t*) G__ULongref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_336_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StIO::ReadNext((TFile*) G__int(libp->para[0]), *(StUKey*) libp->para[1].ref
, *(ULong_t*) G__ULongref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_336_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = StIO::RFIOName((const char*) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_336_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) StIO::Open((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) StIO::Open((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) StIO::Open((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) StIO::Open((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_336_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StIO::IfExi((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_336_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      StIO::SetDebug((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      StIO::SetDebug();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__St_base_Cint_336_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StIO *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StIO[n];
     } else {
       p = new((void*) gvp) StIO[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StIO;
     } else {
       p = new((void*) gvp) StIO;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StIO));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_336_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StIO* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StIO(*(StIO*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StIO));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StIO G__TStIO;
static int G__St_base_Cint_336_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StIO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StIO*) (soff+(sizeof(StIO)*i)))->~G__TStIO();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StIO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StIO*) (soff))->~G__TStIO();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__St_base_Cint_336_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StIO* dest = (StIO*) G__getstructoffset();
   *dest = *(StIO*) libp->para[0].ref;
   const StIO& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StTree */
static int G__St_base_Cint_337_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StTree((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StTree((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StTree[n];
       } else {
         p = new((void*) gvp) StTree[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StTree;
       } else {
         p = new((void*) gvp) StTree;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StTree*) G__getstructoffset())->NextKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StTree*) G__getstructoffset())->Skip((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StTree*) G__getstructoffset())->SetBaseName((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StTree*) G__getstructoffset())->SetBaseName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((StTree*) G__getstructoffset())->GetBaseName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StTree::GetTree((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_337_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_337_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StTree(*(StTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StTree G__TStTree;
static int G__St_base_Cint_337_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StTree*) (soff+(sizeof(StTree)*i)))->~G__TStTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StTree*) (soff))->~G__TStTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StBranch */
static int G__St_base_Cint_338_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBranch(
(const char*) G__int(libp->para[0]), (StTree*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) StBranch(
(const char*) G__int(libp->para[0]), (StTree*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBranch((const char*) G__int(libp->para[0]), (StTree*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StBranch((const char*) G__int(libp->para[0]), (StTree*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBranch((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StBranch((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StBranch[n];
       } else {
         p = new((void*) gvp) StBranch[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StBranch;
       } else {
         p = new((void*) gvp) StBranch;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StBranch*) G__getstructoffset())->SetIOMode((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StBranch*) G__getstructoffset())->SetIOMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((StBranch*) G__getstructoffset())->GetIOMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBranch*) G__getstructoffset())->SetOption((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StBranch*) G__getstructoffset())->IsOption((Option_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->UpdateFile((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((StBranch*) G__getstructoffset())->GetFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->SetFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->SetFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->SetFile((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->SetTFile((TFile*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StBranch*) G__getstructoffset())->GetTFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBranch*) G__getstructoffset())->SetUKey((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StUKey* pobj;
         const StUKey xobj = ((const StBranch*) G__getstructoffset())->GetUKey();
         pobj = new StUKey(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBranch*) G__getstructoffset())->GetNEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->GetEvent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->ReadEvent(*(StUKey*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->NextEvent(*(StUKey*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->NextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->WriteEvent(*(StUKey*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StBranch*) G__getstructoffset())->Close((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StBranch*) G__getstructoffset())->Close();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->Open());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBranch*) G__getstructoffset())->GetDebug());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StBranch*) G__getstructoffset())->SetDebug((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StBranch*) G__getstructoffset())->SetDebug();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StBranch::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBranch::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StBranch::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBranch::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBranch*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBranch::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBranch::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBranch::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_338_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBranch::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_338_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StBranch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StBranch(*(StBranch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StBranch G__TStBranch;
static int G__St_base_Cint_338_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StBranch*) (soff+(sizeof(StBranch)*i)))->~G__TStBranch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StBranch*) (soff))->~G__TStBranch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StIOEvent */
static int G__St_base_Cint_339_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StIOEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StIOEvent[n];
     } else {
       p = new((void*) gvp) StIOEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StIOEvent;
     } else {
       p = new((void*) gvp) StIOEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StIOEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_339_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StIOEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_339_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StIOEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_339_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StIOEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_339_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StIOEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_339_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StIOEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_339_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StIOEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_339_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StIOEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_339_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StIOEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_339_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StIOEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_339_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StIOEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StIOEvent(*(StIOEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StIOEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StIOEvent G__TStIOEvent;
static int G__St_base_Cint_339_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StIOEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StIOEvent*) (soff+(sizeof(StIOEvent)*i)))->~G__TStIOEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StIOEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StIOEvent*) (soff))->~G__TStIOEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__St_base_Cint_339_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StIOEvent* dest = (StIOEvent*) G__getstructoffset();
   *dest = *(StIOEvent*) libp->para[0].ref;
   const StIOEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StFile */
static int G__St_base_Cint_340_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFile((const char**) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StFile((const char**) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StFile[n];
       } else {
         p = new((void*) gvp) StFile[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StFile;
       } else {
         p = new((void*) gvp) StFile;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StFile*) G__getstructoffset())->ls((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StFile*) G__getstructoffset())->ls();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((StFile*) G__getstructoffset())->AddWild((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((StFile*) G__getstructoffset())->AddWild((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((StFile*) G__getstructoffset())->AddEvent((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((StFile*) G__getstructoffset())->AddEvent((UInt_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_340_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_340_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StFile* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StFile(*(StFile*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StFile));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StFile G__TStFile;
static int G__St_base_Cint_340_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StFile*) (soff+(sizeof(StFile)*i)))->~G__TStFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StFile*) (soff))->~G__TStFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__St_base_Cint_340_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFile* dest = (StFile*) G__getstructoffset();
   *dest = *(StFile*) libp->para[0].ref;
   const StFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StXRefMain */
static int G__St_base_Cint_342_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StXRefMain*) G__getstructoffset())->Split();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_342_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StXRefMain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_342_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StXRefMain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_342_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StXRefMain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_342_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StXRefMain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_342_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StXRefMain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_342_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StXRefMain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_342_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StXRefMain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_342_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StXRefMain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_342_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StXRefMain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StXRefMain G__TStXRefMain;
static int G__St_base_Cint_342_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StXRefMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StXRefMain*) (soff+(sizeof(StXRefMain)*i)))->~G__TStXRefMain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StXRefMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StXRefMain*) (soff))->~G__TStXRefMain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StRefArray */
static int G__St_base_Cint_343_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRefArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRefArray((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StRefArray((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StRefArray[n];
       } else {
         p = new((void*) gvp) StRefArray[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StRefArray;
       } else {
         p = new((void*) gvp) StRefArray;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StRefArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_343_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRefArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StRefArray(*(StRefArray*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StRefArray(*(StRefArray*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StRefArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_343_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRefArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_343_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRefArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_343_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRefArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_343_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRefArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_343_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRefArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_343_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRefArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_343_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRefArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_343_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRefArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_343_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRefArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRefArray G__TStRefArray;
static int G__St_base_Cint_343_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRefArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRefArray*) (soff+(sizeof(StRefArray)*i)))->~G__TStRefArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRefArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRefArray*) (soff))->~G__TStRefArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__St_base_Cint_343_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRefArray* dest = (StRefArray*) G__getstructoffset();
   *dest = *(StRefArray*) libp->para[0].ref;
   const StRefArray& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StStrArray */
static int G__St_base_Cint_344_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StStrArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StStrArray((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StStrArray((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StStrArray[n];
       } else {
         p = new((void*) gvp) StStrArray[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StStrArray;
       } else {
         p = new((void*) gvp) StStrArray;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StStrArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StStrArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StStrArray(*(StStrArray*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StStrArray(*(StStrArray*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StStrArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StStrArray*) G__getstructoffset())->operator=(*(StStrArray*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StStrArray*) G__getstructoffset())->push_back((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StStrArray*) G__getstructoffset())->put_at((TObject*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StStrArray*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StStrArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StStrArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StStrArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StStrArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StStrArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StStrArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StStrArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StStrArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_344_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StStrArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StStrArray G__TStStrArray;
static int G__St_base_Cint_344_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StStrArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StStrArray*) (soff+(sizeof(StStrArray)*i)))->~G__TStStrArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StStrArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StStrArray*) (soff))->~G__TStStrArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StObject */
static int G__St_base_Cint_346_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StObject[n];
     } else {
       p = new((void*) gvp) StObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StObject;
     } else {
       p = new((void*) gvp) StObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StObject(*(StObject*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StObject(*(StObject*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StObject& obj = ((StObject*) G__getstructoffset())->operator=(*(StObject*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StObject*) G__getstructoffset())->clone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StObject*) G__getstructoffset())->isZombie());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StObject*) G__getstructoffset())->makeZombie((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StObject*) G__getstructoffset())->makeZombie();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((StObject*) G__getstructoffset())->Ztreamer(*(TBuffer*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_346_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StObject G__TStObject;
static int G__St_base_Cint_346_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StObject*) (soff+(sizeof(StObject)*i)))->~G__TStObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StObject*) (soff))->~G__TStObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StUUId */
static int G__St_base_Cint_347_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUUId* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUUId[n];
     } else {
       p = new((void*) gvp) StUUId[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUUId;
     } else {
       p = new((void*) gvp) StUUId;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StUUId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUUId*) G__getstructoffset())->Generate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StUUId& obj = ((StUUId*) G__getstructoffset())->operator=(*(StUUId*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StUUId& obj = ((StUUId*) G__getstructoffset())->operator=((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUUId*) G__getstructoffset())->IsNull());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUUId*) G__getstructoffset())->Compare(*(StUUId*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StUUId::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUUId::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StUUId::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StUUId::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUUId*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUUId*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUUId*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUUId*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUUId::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUUId::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUUId::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_347_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUUId::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_347_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StUUId* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StUUId(*(StUUId*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StUUId));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StUUId G__TStUUId;
static int G__St_base_Cint_347_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StUUId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StUUId*) (soff+(sizeof(StUUId)*i)))->~G__TStUUId();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StUUId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StUUId*) (soff))->~G__TStUUId();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StXRef */
static int G__St_base_Cint_348_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StXRef*) G__getstructoffset())->MakeMain());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StXRef*) G__getstructoffset())->Synchro((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StXRef*) G__getstructoffset())->GetMain());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StXRef*) G__getstructoffset())->IsMain());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StXRef*) G__getstructoffset())->SetMain((StXRefMain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StUUId& obj = ((const StXRef*) G__getstructoffset())->GetUUId();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StXRef*) G__getstructoffset())->SetUUId(*(StUUId*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StXRef*) G__getstructoffset())->GenUUId();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StXRef*) G__getstructoffset())->SetTally((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((StXRef*) G__getstructoffset())->GetTally());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StXRef::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StXRef::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StXRef::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StXRef::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StXRef*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StXRef::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StXRef::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StXRef::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_348_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StXRef::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StXRef G__TStXRef;
static int G__St_base_Cint_348_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StXRef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StXRef*) (soff+(sizeof(StXRef)*i)))->~G__TStXRef();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StXRef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StXRef*) (soff))->~G__TStXRef();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPageMap */
static int G__St_base_Cint_349_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPageMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPageMap[n];
     } else {
       p = new((void*) gvp) TPageMap[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPageMap;
     } else {
       p = new((void*) gvp) TPageMap;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_TPageMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_349_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 75, (long) ((TPageMap*) G__getstructoffset())->GET((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_349_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 75, (long) ((TPageMap*) G__getstructoffset())->Get((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_349_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPageMap*) G__getstructoffset())->GetMiMax(*(UInt_t*) G__UIntref(&libp->para[0]), *(UInt_t*) G__UIntref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_349_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPageMap::Test();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_349_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPageMap* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPageMap(*(TPageMap*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_TPageMap));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPageMap G__TTPageMap;
static int G__St_base_Cint_349_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPageMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPageMap*) (soff+(sizeof(TPageMap)*i)))->~G__TTPageMap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPageMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPageMap*) (soff))->~G__TTPageMap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__St_base_Cint_349_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPageMap* dest = (TPageMap*) G__getstructoffset();
   *dest = *(TPageMap*) libp->para[0].ref;
   const TPageMap& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StObjLink */
static int G__St_base_Cint_355_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StObjLink* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StObjLink((StObject*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StObjLink((StObject*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StObjLink[n];
       } else {
         p = new((void*) gvp) StObjLink[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StObjLink;
       } else {
         p = new((void*) gvp) StObjLink;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StObjLink));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StObjLink* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StObjLink(*(StObjLink*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StObjLink(*(StObjLink*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StObjLink));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StObjLink& obj = ((StObjLink*) G__getstructoffset())->operator=(*(StObjLink*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StObjLink& obj = ((StObjLink*) G__getstructoffset())->operator=((StObject*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StObject& obj = ((StObjLink*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StObjLink*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StObjLink*) G__getstructoffset())->get());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StObjLink::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StObjLink::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StObjLink::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StObjLink::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StObjLink*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StObjLink::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StObjLink::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StObjLink::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_355_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StObjLink::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StObjLink G__TStObjLink;
static int G__St_base_Cint_355_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StObjLink*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StObjLink*) (soff+(sizeof(StObjLink)*i)))->~G__TStObjLink();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StObjLink*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StObjLink*) (soff))->~G__TStObjLink();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StObjArray */
static int G__St_base_Cint_356_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StObjArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StObjArray((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StObjArray((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StObjArray[n];
       } else {
         p = new((void*) gvp) StObjArray[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StObjArray;
       } else {
         p = new((void*) gvp) StObjArray;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StObjArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StObjArray*) G__getstructoffset())->random_shuffle((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StObjArray*) G__getstructoffset())->random_shuffle((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StObjArray*) G__getstructoffset())->random_shuffle();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StObjArray*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StObjArray*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StObjArray*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StObjArray*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StObjArray*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StObjArray*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StObjArray*) G__getstructoffset())->reserve((size_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StObjArray*) G__getstructoffset())->resize((size_t) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StObjArray*) G__getstructoffset())->resize((size_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TObject*& obj = ((StObjArray*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StObjArray*) G__getstructoffset())->put_at((TObject*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TObject* const& obj = ((const StObjArray*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TObject*& obj = ((StObjArray*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TObject* const& obj = ((const StObjArray*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TObject*& obj = ((StObjArray*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StObjArray*) G__getstructoffset())->find((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TObject*& obj = ((StObjArray*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TObject* const& obj = ((const StObjArray*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StObjArray*) G__getstructoffset())->push_back((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StObjArray*) G__getstructoffset())->getEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StObjArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StObjArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StObjArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StObjArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StObjArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StObjArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StObjArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StObjArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_356_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StObjArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_356_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StObjArray* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StObjArray(*(StObjArray*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StObjArray));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StObjArray G__TStObjArray;
static int G__St_base_Cint_356_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StObjArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StObjArray*) (soff+(sizeof(StObjArray)*i)))->~G__TStObjArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StObjArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StObjArray*) (soff))->~G__TStObjArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__St_base_Cint_356_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StObjArray* dest = (StObjArray*) G__getstructoffset();
   *dest = *(StObjArray*) libp->para[0].ref;
   const StObjArray& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMem */
static int G__St_base_Cint_357_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) StMem::Used());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_357_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) StMem::ESize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_357_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      StMem::Print((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      StMem::Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_357_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StMem* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StMem(*(StMem*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StMem));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__St_base_Cint_357_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMem* dest = (StMem*) G__getstructoffset();
   *dest = *(StMem*) libp->para[0].ref;
   const StMem& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMessMgr */
static int G__St_base_Cint_361_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = ((StMessMgr*) G__getstructoffset())->OperatorShift(*(ostream*) libp->para[0].ref, (StMessage*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 4:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 3:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 2:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Message();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->PrintList((messVec*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->PrintAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindMessage((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (messVec*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindMessage((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindMessage((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindMessage((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindMessage((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindMessageList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (messVec*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindMessageList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindMessageList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindMessageList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindMessageList((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->RemoveMessage((StMessage*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->RemoveMessage((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->RemoveMessage((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->RemoveMessage((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->RemoveMessage((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((StMessMgr*) G__getstructoffset())->SetLimit((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((StMessMgr*) G__getstructoffset())->SetLimit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->GetLimit((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->ListLimits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->RemoveLimit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->SetLevel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StMessMgr*) G__getstructoffset())->GetLevel((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const StMessMgr*) G__getstructoffset())->GetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->SwitchOff((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->SwitchOn((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->FixOn((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->NoLimits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StMessMgr*) G__getstructoffset())->Summary((size_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StMessMgr*) G__getstructoffset())->Summary();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->MemorySummary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->MemoryOn();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->MemoryOff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->AddType((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->ListTypes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->Close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMessMgr*) G__getstructoffset())->isDebugEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMessMgr*) G__getstructoffset())->isWarnEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMessMgr*) G__getstructoffset())->isWarningEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMessMgr*) G__getstructoffset())->isErrorEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMessMgr*) G__getstructoffset())->isInfoEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMessMgr*) G__getstructoffset())->isFatalEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMessMgr*) G__getstructoffset())->isEnabledFor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMessMgr*) G__getstructoffset())->isQAInfoEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMessMgr*) G__getstructoffset())->isUCMInfoEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMessMgr::CurrentMessager());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMessMgr::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMessMgr::Instance((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) StMessMgr::SetCurrentMessager((StMessMgr*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) StMessMgr::SetCurrentMessager());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Info((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 3:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Info((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 2:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Info((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Info((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Info();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->PrintInfos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->GetInfos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindInfo((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindInfoList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindInfoList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindInfoList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindInfoList((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Warning((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 3:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Warning((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 2:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Warning((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Warning((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Warning();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->PrintWarnings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->GetWarnings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindWarning((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindWarning((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindWarning((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindWarning((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindWarningList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindWarningList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindWarningList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindWarningList((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Error((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 3:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Error((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 2:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Error((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Error((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Error();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->PrintErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->GetErrors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindError((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindError((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindError((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindError((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindErrorList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindErrorList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindErrorList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindErrorList((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Debug((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 3:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Debug((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 2:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Debug((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Debug((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Debug();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->PrintDebug());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->GetDebugs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindDebug((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindDebug((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindDebug((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindDebug((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindDebugList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindDebugList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindDebugList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindDebugList((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->QAInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 3:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->QAInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 2:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->QAInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->QAInfo((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->QAInfo();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->PrintQAInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->GetQAInfos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindQAInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindQAInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindQAInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindQAInfo((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindQAInfoList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindQAInfoList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindQAInfoList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindQAInfoList((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->UCMInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 3:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->UCMInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 2:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->UCMInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->UCMInfo((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->UCMInfo();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StMessMgr*) G__getstructoffset())->PrintUCMInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->GetUCMInfos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindUCMInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindUCMInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindUCMInfo((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindUCMInfo((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindUCMInfoList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindUCMInfoList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindUCMInfoList((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StMessMgr*) G__getstructoffset())->FindUCMInfoList((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->out((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->out();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->err((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->err();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->PrintInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Fatal((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 3:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Fatal((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 2:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Fatal((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Fatal((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const ostrstream& obj = ((StMessMgr*) G__getstructoffset())->Fatal();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMessMgr::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMessMgr::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMessMgr::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMessMgr::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMessMgr*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMessMgr*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMessMgr::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMessMgr::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMessMgr::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_361_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMessMgr::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMessMgr G__TStMessMgr;
static int G__St_base_Cint_361_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMessMgr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMessMgr*) (soff+(sizeof(StMessMgr)*i)))->~G__TStMessMgr();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMessMgr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMessMgr*) (soff))->~G__TStMessMgr();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StFileIter */
static int G__St_base_Cint_365_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFileIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFileIter(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) StFileIter(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFileIter(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) StFileIter(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFileIter(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) StFileIter(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFileIter((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StFileIter((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFileIter((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StFileIter((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StFileIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFileIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StFileIter((TFile*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StFileIter((TFile*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StFileIter[n];
       } else {
         p = new((void*) gvp) StFileIter[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StFileIter;
       } else {
         p = new((void*) gvp) StFileIter;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StFileIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFileIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StFileIter((TDirectory*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StFileIter((TDirectory*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StFileIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StFileIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StFileIter(*(StFileIter*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StFileIter(*(StFileIter*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StFileIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StFileIter*) G__getstructoffset())->CurrentCursorPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StFileIter*) G__getstructoffset())->GetTFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StFileIter*) G__getstructoffset())->GetTDirectory());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         TString* pobj;
         TString xobj = StFileIter::MapName((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TString* pobj;
         TString xobj = StFileIter::MapName((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TString* pobj;
         TString xobj = StFileIter::MapName((const char*) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFileIter::GetResourceName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFileIter::GetDefaultMapFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFileIter::GetLocalFileNameKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFileIter::GetForeignFileSystemKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFileIter::PurgeKeys((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StFileIter*) G__getstructoffset())->IsOpen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->NextEventGet((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->NextEventGet((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->NextEventGet((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->NextEventGet());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((StFileIter*) G__getstructoffset())->NextEventPut((TObject*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((StFileIter*) G__getstructoffset())->NextEventPut((TObject*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->NextEventKey((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->NextEventKey((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->NextEventKey((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->NextEventKey());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFileIter*) G__getstructoffset())->SetCursorPosition((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFileIter*) G__getstructoffset())->SetCursorPosition((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StFileIter*) G__getstructoffset())->GetObjlen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StFileIter*) G__getstructoffset())->TotalKeys());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->SkipObjects((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->SkipObjects());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StFileIter*) G__getstructoffset())->GetObject());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StFileIter*) G__getstructoffset())->GetDepth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StFileIter*) G__getstructoffset())->GetCurrentKey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const StFileIter*) G__getstructoffset())->GetKeyName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StFileIter& obj = ((StFileIter*) G__getstructoffset())->operator=((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StFileIter& obj = ((StFileIter*) G__getstructoffset())->operator=((const char*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StFileIter& obj = ((StFileIter*) G__getstructoffset())->operator+=((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StFileIter& obj = ((StFileIter*) G__getstructoffset())->operator-=((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StFileIter& obj = ((StFileIter*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StFileIter& obj = ((StFileIter*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const StFileIter*) G__getstructoffset())->operator const char*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StFileIter*) G__getstructoffset())->operator const ::TFile*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StFileIter*) G__getstructoffset())->operator const ::TDirectory*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StFileIter*) G__getstructoffset())->operator int());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StFileIter*) G__getstructoffset())->operator==((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StFileIter*) G__getstructoffset())->operator!=((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->Next((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFileIter*) G__getstructoffset())->Rewind();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->operator()((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StFileIter*) G__getstructoffset())->operator()());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StFileIter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFileIter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StFileIter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFileIter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFileIter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFileIter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFileIter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFileIter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_365_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFileIter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StFileIter G__TStFileIter;
static int G__St_base_Cint_365_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StFileIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StFileIter*) (soff+(sizeof(StFileIter)*i)))->~G__TStFileIter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StFileIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StFileIter*) (soff))->~G__TStFileIter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StVirtualEventFilter */
static int G__St_base_Cint_368_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StVirtualEventFilter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StVirtualEventFilter((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StVirtualEventFilter((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StVirtualEventFilter[n];
       } else {
         p = new((void*) gvp) StVirtualEventFilter[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StVirtualEventFilter;
       } else {
         p = new((void*) gvp) StVirtualEventFilter;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StVirtualEventFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->IsOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->IsOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->GetFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((StVirtualEventFilter*) G__getstructoffset())->GetOptions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->Turn((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->Turn());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->TurnOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->TurnOff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->Toggle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->Channel((StGlobalTrack*) G__int(libp->para[0]), *(Size_t*) G__Floatref(&libp->para[1])
, *(Style_t*) G__Shortref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->Channel((StObjArray*) G__int(libp->para[0]), *(Size_t*) G__Floatref(&libp->para[1])
, *(Style_t*) G__Shortref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->Channel((TTableSorter*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Size_t*) G__Floatref(&libp->para[2]), *(Style_t*) G__Shortref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->Channel((StVertex*) G__int(libp->para[0]), *(Size_t*) G__Floatref(&libp->para[1])
, *(Style_t*) G__Shortref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->Channel((TTable*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Size_t*) G__Floatref(&libp->para[2]), *(Style_t*) G__Shortref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->Reset((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((StVirtualEventFilter*) G__getstructoffset())->Reset());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((StVirtualEventFilter*) G__getstructoffset())->SetOptions((ULong_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StVirtualEventFilter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StVirtualEventFilter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StVirtualEventFilter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StVirtualEventFilter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StVirtualEventFilter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StVirtualEventFilter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StVirtualEventFilter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StVirtualEventFilter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint_368_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StVirtualEventFilter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__St_base_Cint_368_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StVirtualEventFilter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StVirtualEventFilter(*(StVirtualEventFilter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__St_base_CintLN_StVirtualEventFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StVirtualEventFilter G__TStVirtualEventFilter;
static int G__St_base_Cint_368_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StVirtualEventFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StVirtualEventFilter*) (soff+(sizeof(StVirtualEventFilter)*i)))->~G__TStVirtualEventFilter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StVirtualEventFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StVirtualEventFilter*) (soff))->~G__TStVirtualEventFilter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__St_base_Cint_368_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StVirtualEventFilter* dest = (StVirtualEventFilter*) G__getstructoffset();
   *dest = *(StVirtualEventFilter*) libp->para[0].ref;
   const StVirtualEventFilter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__St_base_Cint__0_2468(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator<<(*(ostream*) libp->para[0].ref, (StMessage*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint__0_2469(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator++(*(StMessMgr*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint__0_2470(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator-(*(StMessMgr*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint__0_2471(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator--(*(StMessMgr*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__St_base_Cint__0_2472(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator~(*(StMessMgr*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* table_head_st */

/* St_table_header */

/* St_Module */

/* StUKey */

/* StFileI */

/* StIO */

/* StTree */

/* StBranch */

/* StIOEvent */

/* StFile */

/* StXRefMain */

/* StRefArray */

/* StStrArray */

/* StObject */

/* StUUId */

/* StXRef */

/* TPageMap */

/* StObjLink */

/* StObjArray */

/* StMem */

/* StMessMgr */

/* StFileIter */

/* StVirtualEventFilter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSt_base_Cint {
 public:
  G__Sizep2memfuncSt_base_Cint(): p(&G__Sizep2memfuncSt_base_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSt_base_Cint::*p)();
};

size_t G__get_sizep2memfuncSt_base_Cint()
{
  G__Sizep2memfuncSt_base_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */
static long G__2vbo_StMessMgr_basic_ioslEcharcOchar_traitslEchargRsPgR_2(long pobject) {
  StMessMgr *G__Lderived=(StMessMgr*)pobject;
  basic_ios<char,char_traits<char> > *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}

static long G__2vbo_StMessMgr_ios_base_3(long pobject) {
  StMessMgr *G__Lderived=(StMessMgr*)pobject;
  ios_base *G__Lbase=G__Lderived;
  return((long)G__Lbase-(long)G__Lderived);
}


/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSt_base_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_St_table_header))) {
     St_table_header *G__Lderived;
     G__Lderived=(St_table_header*)0x1000;
     {
       TTable *G__Lpbase=(TTable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_St_table_header),G__get_linked_tagnum(&G__St_base_CintLN_TTable),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_St_table_header),G__get_linked_tagnum(&G__St_base_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_St_table_header),G__get_linked_tagnum(&G__St_base_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_St_table_header),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StFileI))) {
     StFileI *G__Lderived;
     G__Lderived=(StFileI*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFileI),G__get_linked_tagnum(&G__St_base_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFileI),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StTree))) {
     StTree *G__Lderived;
     G__Lderived=(StTree*)0x1000;
     {
       StBranch *G__Lpbase=(StBranch*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StTree),G__get_linked_tagnum(&G__St_base_CintLN_StBranch),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StTree),G__get_linked_tagnum(&G__St_base_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StTree),G__get_linked_tagnum(&G__St_base_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StTree),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StBranch))) {
     StBranch *G__Lderived;
     G__Lderived=(StBranch*)0x1000;
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StBranch),G__get_linked_tagnum(&G__St_base_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StBranch),G__get_linked_tagnum(&G__St_base_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StBranch),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StIOEvent))) {
     StIOEvent *G__Lderived;
     G__Lderived=(StIOEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StIOEvent),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StFile))) {
     StFile *G__Lderived;
     G__Lderived=(StFile*)0x1000;
     {
       StFileI *G__Lpbase=(StFileI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFile),G__get_linked_tagnum(&G__St_base_CintLN_StFileI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFile),G__get_linked_tagnum(&G__St_base_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFile),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StXRefMain))) {
     StXRefMain *G__Lderived;
     G__Lderived=(StXRefMain*)0x1000;
     {
       StXRef *G__Lpbase=(StXRef*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StXRefMain),G__get_linked_tagnum(&G__St_base_CintLN_StXRef),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StXRefMain),G__get_linked_tagnum(&G__St_base_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StXRefMain),G__get_linked_tagnum(&G__St_base_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StXRefMain),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StRefArray))) {
     StRefArray *G__Lderived;
     G__Lderived=(StRefArray*)0x1000;
     {
       StObjArray *G__Lpbase=(StObjArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StRefArray),G__get_linked_tagnum(&G__St_base_CintLN_StObjArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       StObject *G__Lpbase=(StObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StRefArray),G__get_linked_tagnum(&G__St_base_CintLN_StObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StRefArray),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StStrArray))) {
     StStrArray *G__Lderived;
     G__Lderived=(StStrArray*)0x1000;
     {
       StObjArray *G__Lpbase=(StObjArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StStrArray),G__get_linked_tagnum(&G__St_base_CintLN_StObjArray),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       StObject *G__Lpbase=(StObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StStrArray),G__get_linked_tagnum(&G__St_base_CintLN_StObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StStrArray),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StObject))) {
     StObject *G__Lderived;
     G__Lderived=(StObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StObject),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StXRef))) {
     StXRef *G__Lderived;
     G__Lderived=(StXRef*)0x1000;
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StXRef),G__get_linked_tagnum(&G__St_base_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StXRef),G__get_linked_tagnum(&G__St_base_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StXRef),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StObjLink))) {
     StObjLink *G__Lderived;
     G__Lderived=(StObjLink*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StObjLink),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StObjArray))) {
     StObjArray *G__Lderived;
     G__Lderived=(StObjArray*)0x1000;
     {
       StObject *G__Lpbase=(StObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StObjArray),G__get_linked_tagnum(&G__St_base_CintLN_StObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StObjArray),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr))) {
     StMessMgr *G__Lderived;
     G__Lderived=(StMessMgr*)0x1000;
     {
       basic_ostringstream<char,char_traits<char>,allocator<char> > *G__Lpbase=(basic_ostringstream<char,char_traits<char>,allocator<char> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr),G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       basic_ostream<char,char_traits<char> > *G__Lpbase=(basic_ostream<char,char_traits<char> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr),G__get_linked_tagnum(&G__St_base_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr),G__get_linked_tagnum(&G__St_base_CintLN_basic_ioslEcharcOchar_traitslEchargRsPgR),(long)G__2vbo_StMessMgr_basic_ioslEcharcOchar_traitslEchargRsPgR_2,1,2);
     }
     {
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr),G__get_linked_tagnum(&G__St_base_CintLN_ios_base),(long)G__2vbo_StMessMgr_ios_base_3,1,6);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StFileIter))) {
     StFileIter *G__Lderived;
     G__Lderived=(StFileIter*)0x1000;
     {
       TListIter *G__Lpbase=(TListIter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFileIter),G__get_linked_tagnum(&G__St_base_CintLN_TListIter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TIterator *G__Lpbase=(TIterator*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFileIter),G__get_linked_tagnum(&G__St_base_CintLN_TIterator),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&> *G__Lpbase=(iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFileIter),G__get_linked_tagnum(&G__St_base_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__St_base_CintLN_StVirtualEventFilter))) {
     StVirtualEventFilter *G__Lderived;
     G__Lderived=(StVirtualEventFilter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__St_base_CintLN_StVirtualEventFilter),G__get_linked_tagnum(&G__St_base_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSt_base_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Style_t",115,-1,0,-1);
   G__setnewtype(-1,"Style number (short)",0);
   G__search_typename2("Size_t",102,-1,0,-1);
   G__setnewtype(-1,"Attribute size (float)",0);
   G__search_typename2("ostrstream",117,G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__St_base_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__St_base_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__St_base_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__St_base_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__St_base_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__St_base_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__St_base_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__St_base_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__St_base_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__St_base_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__St_base_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__St_base_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__St_base_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__St_base_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__St_base_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Long_t>",117,G__get_linked_tagnum(&G__St_base_CintLN_vectorlElongcOallocatorlElonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator",85,G__get_linked_tagnum(&G__St_base_CintLN_table_head_st),0,G__get_linked_tagnum(&G__St_base_CintLN_St_table_header));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__St_base_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__St_base_CintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__St_base_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__St_base_CintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__St_base_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__St_base_CintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TObject*>",117,G__get_linked_tagnum(&G__St_base_CintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__St_base_CintLN_reverse_iteratorlEvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__St_base_CintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__St_base_CintLN_reverse_iteratorlEvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__St_base_CintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* table_head_st */
static void G__setup_memvartable_head_st(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_table_head_st));
   { table_head_st *p; p=(table_head_st*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->name)-(long)(p)),99,0,0,-1,-1,-1,1,"name[20]=",0,"*< table name ");
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),99,0,0,-1,-1,-1,1,"type[20]=",0,"*< table type ");
   G__memvar_setup((void*)((long)(&p->maxlen)-(long)(p)),105,0,0,-1,-1,-1,1,"maxlen=",0,"*< # rows allocated ");
   G__memvar_setup((void*)((long)(&p->nok)-(long)(p)),105,0,0,-1,-1,-1,1,"nok=",0,"*< # rows filled ");
   G__memvar_setup((void*)((long)(&p->rbytes)-(long)(p)),105,0,0,-1,-1,-1,1,"rbytes=",0,"*< number of bytes per row ");
   G__memvar_setup((void*)((long)(&p->dummy)-(long)(p)),105,0,0,-1,-1,-1,1,"dummy=",0,"*< dummy to align 64bit  pointer   ");
   G__memvar_setup((void*)((long)(&p->dsl_pointer)-(long)(p)),108,0,0,-1,-1,-1,1,"dsl_pointer=",0,"*< swizzled (DS_DATASET_T*) ");
   G__memvar_setup((void*)((long)(&p->data_pointer)-(long)(p)),108,0,0,-1,-1,-1,1,"data_pointer=",0,"*< swizzled (char*) ");
   }
   G__tag_memvar_reset();
}


   /* St_table_header */
static void G__setup_memvarSt_table_header(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_St_table_header));
   { St_table_header *p; p=(St_table_header*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TTableDescriptor),-1,-2,2,"fgColDescriptors=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* St_Module */
static void G__setup_memvarSt_Module(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_St_Module));
   { St_Module *p; p=(St_Module*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TObjArray),-1,-1,4,"fParams=",0,"Array of the input tables");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TObjArray),-1,-1,4,"fHeaders=",0,"Array of the headers of that tables");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"fName=",0,"Name of the module for the dynamic loading");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIndex=",0,"The index pof the current element");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StUKey */
static void G__setup_memvarStUKey(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StUKey));
   { StUKey *p; p=(StUKey*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TString),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNUrr=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fUrr[9]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StFileI */
static void G__setup_memvarStFileI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFileI));
   { StFileI *p; p=(StFileI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDebug=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StIO */
static void G__setup_memvarStIO(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StIO));
   { StIO *p; p=(StIO*)0x1000; if (p) { }
   G__memvar_setup((void*)(&StIO::fgDebug),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"fgDebug=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StTree */
static void G__setup_memvarStTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StTree));
   { StTree *p; p=(StTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TString),-1,-1,2,"fBaseName=",0,"base name to construct branch file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StBranch */
static void G__setup_memvarStBranch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StBranch));
   { StBranch *p; p=(StBranch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNEvents=",0,"Number of written events in file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__St_base_CintLN_StUKey),-1,-1,2,"fUKey=",0,"! Current RunEvent number ");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"fIOMode=",0,"! 1=ReadOnly; 2=WriteOnly; 1+2=Update;0=do nothing");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TString),-1,-1,2,"fFile=",0,"File name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TString),-1,-1,2,"fOption=",0,"Option string");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TFile),-1,-1,2,"fTFile=",0,"! Opened TFile");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fDebug=",0,"! debug level");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("ULong_t"),-1,2,"fHandle=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StIOEvent */
static void G__setup_memvarStIOEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StIOEvent));
   { StIOEvent *p; p=(StIOEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fObj)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TObject),-1,-1,1,"fObj=",0,"Pointer to full tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StFile */
static void G__setup_memvarStFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFile));
   { StFile *p; p=(StFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TDataSet),-1,-1,2,"fDS=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TDataSetIter),-1,-1,2,"fKeyIter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StXRefMain */
static void G__setup_memvarStXRefMain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StXRefMain));
   { StXRefMain *p; p=(StXRefMain*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StRefArray */
static void G__setup_memvarStRefArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StRefArray));
   { StRefArray *p; p=(StRefArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StStrArray */
static void G__setup_memvarStStrArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StStrArray));
   { StStrArray *p; p=(StStrArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StObject */
static void G__setup_memvarStObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StObject));
   { StObject *p; p=(StObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)(&StObject::fgTally),104,0,0,-1,G__defined_typename("UInt_t"),-2,1,"fgTally=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StUUId */
static void G__setup_memvarStUUId(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StUUId));
   { StUUId *p; p=(StUUId*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fID[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StXRef */
static void G__setup_memvarStXRef(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StXRef));
   { StXRef *p; p=(StXRef*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__St_base_CintLN_StUUId),-1,-1,4,"fUUId=",0,"!");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fTally=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_StXRefMain),-1,-1,4,"fMain=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPageMap */
static void G__setup_memvarTPageMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_TPageMap));
   { TPageMap *p; p=(TPageMap*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_TPageMapcLcLEPageMap),-1,-2,4,"kPAGE=2048LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_TPageMapcLcLEPageMap),-1,-2,4,"kBITS=11LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_TPageMapcLcLEPageMap),-1,-2,4,"kBITZ=22LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_TPageMapcLcLEPageMap),-1,-2,4,"kMASK=2047LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_TPageMapcLcLEPageMap),-1,-2,4,"kLAST=-2048LL",0,(char*)NULL);
   G__memvar_setup((void*)0,75,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fTopPage=",0,(char*)NULL);
   G__memvar_setup((void*)0,75,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fLstPage=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fLstUdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,75,0,0,-1,G__defined_typename("ULong_t"),-1,4,"fList=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMinUdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMaxUdx=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StObjLink */
static void G__setup_memvarStObjLink(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StObjLink));
   { StObjLink *p; p=(StObjLink*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fLink)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_StObject),-1,-1,1,"fLink=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StObjArray */
static void G__setup_memvarStObjArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StObjArray));
   { StObjArray *p; p=(StObjArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__St_base_CintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR),G__defined_typename("VecTObj"),-1,2,"fV=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMem */
static void G__setup_memvarStMem(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StMem));
   { StMem *p; p=(StMem*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,4,"fUsed=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMessMgr */
static void G__setup_memvarStMessMgr(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr));
   { StMessMgr *p; p=(StMessMgr*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_StMessMgrcLcLESTARMakerErrorLevels),-1,-2,1,G__FastAllocString(4096).Format("kAll=%lldLL",(long long)StMessMgr::kAll).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_StMessMgrcLcLESTARMakerErrorLevels),-1,-2,1,G__FastAllocString(4096).Format("kFatal=%lldLL",(long long)StMessMgr::kFatal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_StMessMgrcLcLESTARMakerErrorLevels),-1,-2,1,G__FastAllocString(4096).Format("kError=%lldLL",(long long)StMessMgr::kError).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_StMessMgrcLcLESTARMakerErrorLevels),-1,-2,1,G__FastAllocString(4096).Format("kWarning=%lldLL",(long long)StMessMgr::kWarning).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_StMessMgrcLcLESTARMakerErrorLevels),-1,-2,1,G__FastAllocString(4096).Format("kInfo=%lldLL",(long long)StMessMgr::kInfo).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_StMessMgrcLcLESTARMakerErrorLevels),-1,-2,1,G__FastAllocString(4096).Format("kDefault=%lldLL",(long long)StMessMgr::kDefault).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_StMessMgrcLcLESTARMakerErrorLevels),-1,-2,1,G__FastAllocString(4096).Format("kDebug=%lldLL",(long long)StMessMgr::kDebug).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_StMessMgrcLcLESTARMakerErrorLevels),-1,-2,1,G__FastAllocString(4096).Format("kDebug2=%lldLL",(long long)StMessMgr::kDebug2).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StFileIter */
static void G__setup_memvarStFileIter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFileIter));
   { StFileIter *p; p=(StFileIter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TFile),-1,-1,4,"fFileBackUp=",0,"! temporary data-members");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TDirectory),-1,-1,4,"fDirectoryBackUp=",0,"! to save/restore TFile/TDirectory global scope");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_StFileIter),-1,-1,4,"fNestedIterator=",0,"! The inner TFidrectory interator;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TDirectory),-1,-1,2,"fRootFile=",0,"TDirectory/TFile to be iterated over");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TString),-1,-1,2,"fEventName=",0,"current key name");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fRunNumber=",0,"current \"run number\"");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fEventNumber=",0,"current \"event number\"");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCursorPosition=",0,"the position of the current key in the sorted TKey list");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fOwnTFile=",0,"Bit whether this classs creates TFile on its own to delete");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StVirtualEventFilter */
static void G__setup_memvarStVirtualEventFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__St_base_CintLN_StVirtualEventFilter));
   { StVirtualEventFilter *p; p=(StVirtualEventFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"m_ActiveFlag=",0,"Flag whether this filter is on/off ");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("ULong_t"),-1,2,"mOptions=",0,"Bit masks fro the user defined options");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSt_base_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfunctable_head_st(void) {
   /* table_head_st */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_table_head_st));
   // automatic default constructor
   G__memfunc_setup("table_head_st", 1343, G__St_base_Cint_239_0_1, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_table_head_st), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("table_head_st", 1343, G__St_base_Cint_239_0_2, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_table_head_st), -1, 0, 1, 1, 1, 0, "u 'table_head_st' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~table_head_st", 1469, G__St_base_Cint_239_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__St_base_Cint_239_0_4, (int) ('u'), G__get_linked_tagnum(&G__St_base_CintLN_table_head_st), -1, 1, 1, 1, 1, 0, "u 'table_head_st' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSt_table_header(void) {
   /* St_table_header */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_St_table_header));
   G__memfunc_setup("St_table_header",1526,G__St_base_Cint_240_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_St_table_header), -1, 0, 1, 1, 1, 0, "U 'TTable' - 10 - table", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Object",599,G__St_base_Cint_240_0_2, 85, G__get_linked_tagnum(&G__St_base_CintLN_TTable), -1, 0, 2, 3, 1, 0, 
"U 'TTable' - 1 - table U 'table_head_st' - 10 - header", (char*)NULL, (void*) G__func2void( (TTable* (*)(TTable*&, const table_head_st*))(&St_table_header::Object) ), 0);
   G__memfunc_setup("TableDictionary",1534,G__St_base_Cint_240_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St_table_header::TableDictionary) ), 0);
   G__memfunc_setup("GetDescriptorPointer",2080,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__St_base_CintLN_TTableDescriptor), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDescriptorPointer",2092,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TTableDescriptor' - 0 - list", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("St_table_header",1526,G__St_base_Cint_240_0_6, 105, G__get_linked_tagnum(&G__St_base_CintLN_St_table_header), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("St_table_header",1526,G__St_base_Cint_240_0_7, 105, G__get_linked_tagnum(&G__St_base_CintLN_St_table_header), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("St_table_header",1526,G__St_base_Cint_240_0_8, 105, G__get_linked_tagnum(&G__St_base_CintLN_St_table_header), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("St_table_header",1526,G__St_base_Cint_240_0_9, 105, G__get_linked_tagnum(&G__St_base_CintLN_St_table_header), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTable",776,G__St_base_Cint_240_0_10, 85, G__get_linked_tagnum(&G__St_base_CintLN_table_head_st), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__St_base_Cint_240_0_11, 117, G__get_linked_tagnum(&G__St_base_CintLN_table_head_st), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__St_base_Cint_240_0_12, 117, G__get_linked_tagnum(&G__St_base_CintLN_table_head_st), -1, 1, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__St_base_Cint_240_0_13, 85, G__get_linked_tagnum(&G__St_base_CintLN_table_head_st), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__St_base_Cint_240_0_14, 85, G__get_linked_tagnum(&G__St_base_CintLN_table_head_st), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__St_base_Cint_240_0_15, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&St_table_header::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_240_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St_table_header::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_240_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&St_table_header::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_240_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&St_table_header::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_240_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_240_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St_table_header::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_240_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St_table_header::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_240_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St_table_header::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_240_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St_table_header::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("St_table_header", 1526, G__St_base_Cint_240_0_27, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_St_table_header), -1, 0, 1, 1, 1, 0, "u 'St_table_header' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~St_table_header", 1652, G__St_base_Cint_240_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSt_Module(void) {
   /* St_Module */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_St_Module));
   G__memfunc_setup("ClearParams",1099,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameter",1229,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TTable' - 0 - f", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAllParameters",1625,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 38, 1, 2, 0, 
"U 'TTable' - 0 - f1 U 'TTable' - 0 - f2 "
"U 'TTable' - 0 - f3 U 'TTable' - 0 - f4 "
"U 'TTable' - 0 - f5 U 'TTable' - 0 - f6 "
"U 'TTable' - 0 - f7 U 'TTable' - 0 - f8 "
"U 'TTable' - 0 - f9 U 'TTable' - 0 - f10 "
"U 'TTable' - 0 - f11 U 'TTable' - 0 - f12 "
"U 'TTable' - 0 - f13 U 'TTable' - 0 - f14 "
"U 'TTable' - 0 - f15 U 'TTable' - 0 - f16 "
"U 'TTable' - 0 - f17 U 'TTable' - 0 - f18 "
"U 'TTable' - 0 - f19 U 'TTable' - 0 - f20 "
"U 'TTable' - 0 - f21 U 'TTable' - 0 - f22 "
"U 'TTable' - 0 - f23 U 'TTable' - 0 - f24 "
"U 'TTable' - 0 - f25 U 'TTable' - 0 - f26 "
"U 'TTable' - 0 - f27 U 'TTable' - 0 - f28 "
"U 'TTable' - 0 - f29 U 'TTable' - 0 - f30 "
"U 'TTable' - 0 - f31 U 'TTable' - 0 - f32 "
"U 'TTable' - 0 - f33 U 'TTable' - 0 - f34 "
"U 'TTable' - 0 - f35 U 'TTable' - 0 - f36 "
"U 'TTable' - 0 - f37 U 'TTable' - 0 - f38", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("St_Module",908,G__St_base_Cint_241_0_4, 105, G__get_linked_tagnum(&G__St_base_CintLN_St_Module), -1, 0, 0, 1, 1, 0, "", "Default ctor;", (void*) NULL, 0);
   G__memfunc_setup("St_Module",908,G__St_base_Cint_241_0_5, 105, G__get_linked_tagnum(&G__St_base_CintLN_St_Module), -1, 0, 38, 1, 1, 0, 
"U 'TTable' - 0 - f1 U 'TTable' - 0 '0' f2 "
"U 'TTable' - 0 '0' f3 U 'TTable' - 0 '0' f4 "
"U 'TTable' - 0 '0' f5 U 'TTable' - 0 '0' f6 "
"U 'TTable' - 0 '0' f7 U 'TTable' - 0 '0' f8 "
"U 'TTable' - 0 '0' f9 U 'TTable' - 0 '0' f10 "
"U 'TTable' - 0 '0' f11 U 'TTable' - 0 '0' f12 "
"U 'TTable' - 0 '0' f13 U 'TTable' - 0 '0' f14 "
"U 'TTable' - 0 '0' f15 U 'TTable' - 0 '0' f16 "
"U 'TTable' - 0 '0' f17 U 'TTable' - 0 '0' f18 "
"U 'TTable' - 0 '0' f19 U 'TTable' - 0 '0' f20 "
"U 'TTable' - 0 '0' f21 U 'TTable' - 0 '0' f22 "
"U 'TTable' - 0 '0' f23 U 'TTable' - 0 '0' f24 "
"U 'TTable' - 0 '0' f25 U 'TTable' - 0 '0' f26 "
"U 'TTable' - 0 '0' f27 U 'TTable' - 0 '0' f28 "
"U 'TTable' - 0 '0' f29 U 'TTable' - 0 '0' f30 "
"U 'TTable' - 0 '0' f31 U 'TTable' - 0 '0' f32 "
"U 'TTable' - 0 '0' f33 U 'TTable' - 0 '0' f34 "
"U 'TTable' - 0 '0' f35 U 'TTable' - 0 '0' f36 "
"U 'TTable' - 0 '0' f37 U 'TTable' - 0 '0' f38", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("St_Module",908,G__St_base_Cint_241_0_6, 105, G__get_linked_tagnum(&G__St_base_CintLN_St_Module), -1, 0, 39, 1, 1, 0, 
"C - 'Char_t' 0 - name U 'TTable' - 0 '0' f1 "
"U 'TTable' - 0 '0' f2 U 'TTable' - 0 '0' f3 "
"U 'TTable' - 0 '0' f4 U 'TTable' - 0 '0' f5 "
"U 'TTable' - 0 '0' f6 U 'TTable' - 0 '0' f7 "
"U 'TTable' - 0 '0' f8 U 'TTable' - 0 '0' f9 "
"U 'TTable' - 0 '0' f10 U 'TTable' - 0 '0' f11 "
"U 'TTable' - 0 '0' f12 U 'TTable' - 0 '0' f13 "
"U 'TTable' - 0 '0' f14 U 'TTable' - 0 '0' f15 "
"U 'TTable' - 0 '0' f16 U 'TTable' - 0 '0' f17 "
"U 'TTable' - 0 '0' f18 U 'TTable' - 0 '0' f19 "
"U 'TTable' - 0 '0' f20 U 'TTable' - 0 '0' f21 "
"U 'TTable' - 0 '0' f22 U 'TTable' - 0 '0' f23 "
"U 'TTable' - 0 '0' f24 U 'TTable' - 0 '0' f25 "
"U 'TTable' - 0 '0' f26 U 'TTable' - 0 '0' f27 "
"U 'TTable' - 0 '0' f28 U 'TTable' - 0 '0' f29 "
"U 'TTable' - 0 '0' f30 U 'TTable' - 0 '0' f31 "
"U 'TTable' - 0 '0' f32 U 'TTable' - 0 '0' f33 "
"U 'TTable' - 0 '0' f34 U 'TTable' - 0 '0' f35 "
"U 'TTable' - 0 '0' f36 U 'TTable' - 0 '0' f37 "
"U 'TTable' - 0 '0' f38", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Call",380,G__St_base_Cint_241_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckParameters",1522,G__St_base_Cint_241_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 12 '0' names", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckResults",1232,G__St_base_Cint_241_0_9, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - res C - 'Char_t' 12 '0' names", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExecuteModule",1337,G__St_base_Cint_241_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHeader",873,G__St_base_Cint_241_0_11, 85, G__get_linked_tagnum(&G__St_base_CintLN_table_head_st), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTable",776,G__St_base_Cint_241_0_12, 85, G__get_linked_tagnum(&G__St_base_CintLN_TTable), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStruct",933,G__St_base_Cint_241_0_13, 89, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvokeModule",1234,G__St_base_Cint_241_0_14, 105, -1, G__defined_typename("Int_t"), 0, 38, 1, 1, 0, 
"U 'TTable' - 0 - f1 U 'TTable' - 0 '0' f2 "
"U 'TTable' - 0 '0' f3 U 'TTable' - 0 '0' f4 "
"U 'TTable' - 0 '0' f5 U 'TTable' - 0 '0' f6 "
"U 'TTable' - 0 '0' f7 U 'TTable' - 0 '0' f8 "
"U 'TTable' - 0 '0' f9 U 'TTable' - 0 '0' f10 "
"U 'TTable' - 0 '0' f11 U 'TTable' - 0 '0' f12 "
"U 'TTable' - 0 '0' f13 U 'TTable' - 0 '0' f14 "
"U 'TTable' - 0 '0' f15 U 'TTable' - 0 '0' f16 "
"U 'TTable' - 0 '0' f17 U 'TTable' - 0 '0' f18 "
"U 'TTable' - 0 '0' f19 U 'TTable' - 0 '0' f20 "
"U 'TTable' - 0 '0' f21 U 'TTable' - 0 '0' f22 "
"U 'TTable' - 0 '0' f23 U 'TTable' - 0 '0' f24 "
"U 'TTable' - 0 '0' f25 U 'TTable' - 0 '0' f26 "
"U 'TTable' - 0 '0' f27 U 'TTable' - 0 '0' f28 "
"U 'TTable' - 0 '0' f29 U 'TTable' - 0 '0' f30 "
"U 'TTable' - 0 '0' f31 U 'TTable' - 0 '0' f32 "
"U 'TTable' - 0 '0' f33 U 'TTable' - 0 '0' f34 "
"U 'TTable' - 0 '0' f35 U 'TTable' - 0 '0' f36 "
"U 'TTable' - 0 '0' f37 U 'TTable' - 0 '0' f38", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTitle",802,G__St_base_Cint_241_0_15, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,G__St_base_Cint_241_0_16, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__St_base_Cint_241_0_17, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&St_Module::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_241_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St_Module::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_241_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&St_Module::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_241_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&St_Module::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__St_base_Cint_241_0_21, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__St_base_Cint_241_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__St_base_Cint_241_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_241_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_241_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St_Module::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_241_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St_Module::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_241_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&St_Module::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_241_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&St_Module::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("St_Module", 908, G__St_base_Cint_241_0_29, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_St_Module), -1, 0, 1, 1, 1, 0, "u 'St_Module' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~St_Module", 1034, G__St_base_Cint_241_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__St_base_Cint_241_0_31, (int) ('u'), G__get_linked_tagnum(&G__St_base_CintLN_St_Module), -1, 1, 1, 1, 1, 0, "u 'St_Module' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStUKey(void) {
   /* StUKey */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StUKey));
   G__memfunc_setup("StUKey",581,G__St_base_Cint_334_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StUKey), -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' name H - 'UInt_t' 0 '0' uk "
"i - - 0 '1' nk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUKey",581,G__St_base_Cint_334_0_2, 105, G__get_linked_tagnum(&G__St_base_CintLN_StUKey), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name h - 'UInt_t' 0 - uk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUKey",581,G__St_base_Cint_334_0_3, 105, G__get_linked_tagnum(&G__St_base_CintLN_StUKey), -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - uRun h - 'UInt_t' 0 '0' uEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__St_base_Cint_334_0_4, 117, G__get_linked_tagnum(&G__St_base_CintLN_StUKey), -1, 1, 1, 1, 1, 0, "u 'StUKey' - 11 - from", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__St_base_Cint_334_0_5, 117, G__get_linked_tagnum(&G__St_base_CintLN_StUKey), -1, 1, 1, 1, 1, 0, "h - 'UInt_t' 0 - from", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__St_base_Cint_334_0_6, 117, G__get_linked_tagnum(&G__St_base_CintLN_StUKey), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - from", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__St_base_Cint_334_0_7, 117, G__get_linked_tagnum(&G__St_base_CintLN_StUKey), -1, 1, 1, 1, 1, 0, "C - - 10 - from", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Update",611,G__St_base_Cint_334_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'StUKey' - 11 - from C - - 10 '0' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetName",685,G__St_base_Cint_334_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetName",673,G__St_base_Cint_334_0_10, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetKey",585,G__St_base_Cint_334_0_11, 117, G__get_linked_tagnum(&G__St_base_CintLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNInt",665,G__St_base_Cint_334_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUrr",601,G__St_base_Cint_334_0_13, 72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetKey",597,G__St_base_Cint_334_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - key", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUrr",613,G__St_base_Cint_334_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"H - 'UInt_t' 10 - key i - - 0 - nk", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSum",597,G__St_base_Cint_334_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EOK",223,G__St_base_Cint_334_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsNull",599,G__St_base_Cint_334_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,G__St_base_Cint_334_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'StUKey' - 1 - uk2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunId",770,G__St_base_Cint_334_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventId",975,G__St_base_Cint_334_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("StUKey", 581, G__St_base_Cint_334_0_22, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_StUKey), -1, 0, 1, 1, 1, 0, "u 'StUKey' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StUKey", 707, G__St_base_Cint_334_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStFileI(void) {
   /* StFileI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFileI));
   G__memfunc_setup("SetDebug",787,G__St_base_Cint_335_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' dbl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDebug",775,G__St_base_Cint_335_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__St_base_Cint_335_0_4, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - - 0 - - C - - 12 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__St_base_Cint_335_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFile",649,G__St_base_Cint_335_0_7, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFile",649,G__St_base_Cint_335_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 12 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddWild",665,G__St_base_Cint_335_0_9, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNFiles",865,G__St_base_Cint_335_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNBundles",1083,G__St_base_Cint_335_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetBundleSize",1301,G__St_base_Cint_335_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetFileName",1057,G__St_base_Cint_335_0_13, 67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 '-1' idx", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetCompName",1072,G__St_base_Cint_335_0_14, 67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetFormat",905,G__St_base_Cint_335_0_15, 67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNextBundle",1305,G__St_base_Cint_335_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNextEvent",1217,G__St_base_Cint_335_0_17, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "H - 'UInt_t' 0 - NextEventNumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNextEvent",1217,G__St_base_Cint_335_0_18, 117, G__get_linked_tagnum(&G__St_base_CintLN_StUKey), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Rewind",617,G__St_base_Cint_335_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__St_base_Cint_335_0_20, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StFileI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_335_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFileI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_335_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StFileI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_335_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StFileI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_335_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_335_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFileI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_335_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFileI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_335_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFileI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_335_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFileI::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StFileI", 782, G__St_base_Cint_335_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__St_base_Cint_335_0_33, (int) ('u'), G__get_linked_tagnum(&G__St_base_CintLN_StFileI), -1, 1, 1, 1, 1, 0, "u 'StFileI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStIO(void) {
   /* StIO */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StIO));
   G__memfunc_setup("Write",523,G__St_base_Cint_336_0_1, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"U 'TFile' - 0 - file u 'StUKey' - 11 - ukey "
"U 'TObject' - 0 - obj", (char*)NULL, (void*) G__func2void( (Int_t (*)(TFile*, const StUKey&, TObject*))(&StIO::Write) ), 0);
   G__memfunc_setup("Read",380,G__St_base_Cint_336_0_2, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 2, 3, 1, 0, 
"U 'TFile' - 0 - file C - - 10 - name", (char*)NULL, (void*) G__func2void( (TObject* (*)(TFile*, const char*))(&StIO::Read) ), 0);
   G__memfunc_setup("Read",380,G__St_base_Cint_336_0_3, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 2, 3, 1, 0, 
"U 'TFile' - 0 - file u 'StUKey' - 11 - ukey", (char*)NULL, (void*) G__func2void( (TObject* (*)(TFile*, const StUKey&))(&StIO::Read) ), 0);
   G__memfunc_setup("GetNextKey",1000,G__St_base_Cint_336_0_4, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"U 'TFile' - 0 - file u 'StUKey' - 1 - ukey "
"k - 'ULong_t' 1 - handle", (char*)NULL, (void*) G__func2void( (Int_t (*)(TFile*, StUKey&, ULong_t&))(&StIO::GetNextKey) ), 0);
   G__memfunc_setup("ReadNext",795,G__St_base_Cint_336_0_5, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 3, 3, 1, 0, 
"U 'TFile' - 0 - file u 'StUKey' - 1 - ukey "
"k - 'ULong_t' 1 - handle", (char*)NULL, (void*) G__func2void( (TObject* (*)(TFile*, StUKey&, ULong_t&))(&StIO::ReadNext) ), 0);
   G__memfunc_setup("RFIOName",689,G__St_base_Cint_336_0_6, 117, G__get_linked_tagnum(&G__St_base_CintLN_TString), -1, 0, 1, 3, 1, 0, "C - - 10 - name", (char*)NULL, (void*) G__func2void( (TString (*)(const char*))(&StIO::RFIOName) ), 0);
   G__memfunc_setup("Open",402,G__St_base_Cint_336_0_7, 85, G__get_linked_tagnum(&G__St_base_CintLN_TFile), -1, 0, 4, 3, 1, 0, 
"C - - 10 - name C - 'Option_t' 10 '\"\"' option "
"C - - 10 '\"\"' title i - 'Int_t' 0 '1' compress", (char*)NULL, (void*) G__func2void( (TFile* (*)(const char*, Option_t*, const char*, Int_t))(&StIO::Open) ), 0);
   G__memfunc_setup("IfExi",469,G__St_base_Cint_336_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "C - - 10 - file", (char*)NULL, (void*) G__func2void( (Int_t (*)(const char*))(&StIO::IfExi) ), 0);
   G__memfunc_setup("SetDebug",787,G__St_base_Cint_336_0_9, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 '1' dblev", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&StIO::SetDebug) ), 0);
   // automatic default constructor
   G__memfunc_setup("StIO", 351, G__St_base_Cint_336_0_10, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_StIO), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StIO", 351, G__St_base_Cint_336_0_11, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_StIO), -1, 0, 1, 1, 1, 0, "u 'StIO' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StIO", 477, G__St_base_Cint_336_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__St_base_Cint_336_0_13, (int) ('u'), G__get_linked_tagnum(&G__St_base_CintLN_StIO), -1, 1, 1, 1, 1, 0, "u 'StIO' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStTree(void) {
   /* StTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StTree));
   G__memfunc_setup("StTree",599,G__St_base_Cint_337_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StTree), -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIOMode",841,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"0\"' iomode", "Set for all branches", (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'StUKey' - 11 - ukey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextEvent",929,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'StUKey' - 1 - ukey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextEvent",929,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextKey",712,G__St_base_Cint_337_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Skip",407,G__St_base_Cint_337_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - nskip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteEvent",1037,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'StUKey' - 11 - ukey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Open",402,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFile",684,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - file C - - 10 '0' iomode "
"i - - 0 '0' insist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBaseName",1064,G__St_base_Cint_337_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - basename C - - 10 '0' dirname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBaseName",1052,G__St_base_Cint_337_0_14, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTree",688,G__St_base_Cint_337_0_15, 85, G__get_linked_tagnum(&G__St_base_CintLN_StTree), -1, 0, 2, 3, 1, 0, 
"U 'TFile' - 0 - file C - - 10 - treeName", (char*)NULL, (void*) G__func2void( (StTree* (*)(TFile*, const char*))(&StTree::GetTree) ), 0);
   G__memfunc_setup("UpdateFile",995,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__St_base_Cint_337_0_17, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_337_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_337_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_337_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_337_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_337_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_337_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_337_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_337_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StTree", 599, G__St_base_Cint_337_0_29, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_StTree), -1, 0, 1, 1, 1, 0, "u 'StTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StTree", 725, G__St_base_Cint_337_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStBranch(void) {
   /* StBranch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StBranch));
   G__memfunc_setup("StBranch",789,G__St_base_Cint_338_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StBranch), -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"\"' name U 'StTree' - 0 '0' parent "
"C - 'Option_t' 10 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIOMode",841,G__St_base_Cint_338_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"0\"' iomode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIOMode",829,G__St_base_Cint_338_0_3, 67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOption",933,G__St_base_Cint_338_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOption",921,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Option_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOption",821,G__St_base_Cint_338_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFile",995,G__St_base_Cint_338_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFile",672,G__St_base_Cint_338_0_8, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFile",684,G__St_base_Cint_338_0_9, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 - file C - - 10 '0' iomode "
"i - - 0 '0' insist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTFile",768,G__St_base_Cint_338_0_10, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TFile' - 0 - tfile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTFile",756,G__St_base_Cint_338_0_11, 85, G__get_linked_tagnum(&G__St_base_CintLN_TFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetName",685,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUKey",682,G__St_base_Cint_338_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ukey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUKey",670,G__St_base_Cint_338_0_14, 117, G__get_linked_tagnum(&G__St_base_CintLN_StUKey), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNEvents",995,G__St_base_Cint_338_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEvent",802,G__St_base_Cint_338_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,G__St_base_Cint_338_0_17, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'StUKey' - 11 - ukey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextEvent",929,G__St_base_Cint_338_0_18, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'StUKey' - 1 - ukey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextEvent",929,G__St_base_Cint_338_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteEvent",1037,G__St_base_Cint_338_0_20, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'StUKey' - 11 - ukey", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,G__St_base_Cint_338_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Open",402,G__St_base_Cint_338_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDebug",775,G__St_base_Cint_338_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDebug",787,G__St_base_Cint_338_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' dbl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenTFile",870,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParAll",872,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"U 'TDataSet' - 0 - parNew U 'TDataSet' - 0 - parOld "
"U 'TList' - 0 - savList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParAll",872,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TList' - 0 - savList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__St_base_Cint_338_0_29, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StBranch::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_338_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBranch::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_338_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StBranch::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_338_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBranch::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_338_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_338_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBranch::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_338_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBranch::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_338_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBranch::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_338_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBranch::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StBranch", 789, G__St_base_Cint_338_0_41, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_StBranch), -1, 0, 1, 1, 1, 0, "u 'StBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StBranch", 915, G__St_base_Cint_338_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStIOEvent(void) {
   /* StIOEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StIOEvent));
   G__memfunc_setup("StIOEvent",865,G__St_base_Cint_339_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StIOEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__St_base_Cint_339_0_4, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StIOEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_339_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StIOEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_339_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StIOEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_339_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StIOEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_339_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_339_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StIOEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_339_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StIOEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_339_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StIOEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_339_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StIOEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StIOEvent", 865, G__St_base_Cint_339_0_16, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_StIOEvent), -1, 0, 1, 1, 1, 0, "u 'StIOEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StIOEvent", 991, G__St_base_Cint_339_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__St_base_Cint_339_0_18, (int) ('u'), G__get_linked_tagnum(&G__St_base_CintLN_StIOEvent), -1, 1, 1, 1, 1, 0, "u 'StIOEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStFile(void) {
   /* StFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFile));
   G__memfunc_setup("StFile",583,G__St_base_Cint_340_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StFile), -1, 0, 1, 1, 1, 0, "C - - 12 '0' fileList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ls",223,G__St_base_Cint_340_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFile",649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - file C - - 10 '0' opt", "opt=\"remove\" or \"exclude\" remove file from list", (void*) NULL, 1);
   G__memfunc_setup("AddFile",649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 12 - fileList", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddWild",665,G__St_base_Cint_340_0_6, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - file C - - 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddEvent",779,G__St_base_Cint_340_0_7, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - r h - 'UInt_t' 0 '0' e", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNBundles",1083,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNFiles",865,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBundleSize",1301,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNextEvent",1217,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__St_base_CintLN_StUKey), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNextEvent",1217,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "H - 'UInt_t' 0 - NextEventNumber", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileName",1057,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 '-1' idx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCompName",1072,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFormat",905,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 1, "i - 'Int_t' 0 '0' idx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNextBundle",1305,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Rewind",617,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("lsFull",626,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInfo",696,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TDataSet' - 0 - ds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAttr",699,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 2, 1, 2, 1, 
"U 'TDataSet' - 0 - ds C - - 10 - att", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileDS",823,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__St_base_CintLN_TDataSet), -1, 0, 1, 1, 2, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__St_base_Cint_340_0_22, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_340_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_340_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_340_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_340_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_340_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_340_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_340_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_340_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFile::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StFile", 583, G__St_base_Cint_340_0_34, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_StFile), -1, 0, 1, 1, 1, 0, "u 'StFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StFile", 709, G__St_base_Cint_340_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__St_base_Cint_340_0_36, (int) ('u'), G__get_linked_tagnum(&G__St_base_CintLN_StFile), -1, 1, 1, 1, 1, 0, "u 'StFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStXRefMain(void) {
   /* StXRefMain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StXRefMain));
   G__memfunc_setup("Split",524,G__St_base_Cint_342_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MakeMain",771,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_StXRefMain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Synchro",742,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - toMain", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__St_base_Cint_342_0_5, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StXRefMain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_342_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StXRefMain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_342_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StXRefMain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_342_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StXRefMain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_342_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_342_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StXRefMain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_342_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StXRefMain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_342_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StXRefMain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_342_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StXRefMain::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StXRefMain", 1087, G__St_base_Cint_342_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStRefArray(void) {
   /* StRefArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StRefArray));
   G__memfunc_setup("StRefArray",995,G__St_base_Cint_343_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StRefArray), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StRefArray",995,G__St_base_Cint_343_0_2, 105, G__get_linked_tagnum(&G__St_base_CintLN_StRefArray), -1, 0, 1, 1, 1, 0, "u 'StRefArray' - 11 - from", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__St_base_Cint_343_0_3, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRefArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_343_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRefArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_343_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRefArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_343_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRefArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_343_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_343_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRefArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_343_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRefArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_343_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRefArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_343_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRefArray::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StRefArray", 1121, G__St_base_Cint_343_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__St_base_Cint_343_0_16, (int) ('u'), G__get_linked_tagnum(&G__St_base_CintLN_StRefArray), -1, 1, 1, 1, 1, 0, "u 'StRefArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStStrArray(void) {
   /* StStrArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StStrArray));
   G__memfunc_setup("StStrArray",1023,G__St_base_Cint_344_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StStrArray), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StStrArray",1023,G__St_base_Cint_344_0_2, 105, G__get_linked_tagnum(&G__St_base_CintLN_StStrArray), -1, 0, 1, 1, 1, 0, "u 'StStrArray' - 11 - from", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__St_base_Cint_344_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StStrArray' - 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__St_base_Cint_344_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 10 - to", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("put_at",653,G__St_base_Cint_344_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - obj i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__St_base_Cint_344_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeZombie",1028,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - flg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__St_base_Cint_344_0_8, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StStrArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_344_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StStrArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_344_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StStrArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_344_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StStrArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_344_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_344_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StStrArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_344_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StStrArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_344_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StStrArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_344_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StStrArray::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StStrArray", 1149, G__St_base_Cint_344_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStObject(void) {
   /* StObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StObject));
   G__memfunc_setup("StObject",798,G__St_base_Cint_346_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StObject",798,G__St_base_Cint_346_0_2, 105, G__get_linked_tagnum(&G__St_base_CintLN_StObject), -1, 0, 1, 1, 1, 0, "u 'StObject' - 11 - sto", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__St_base_Cint_346_0_3, 117, G__get_linked_tagnum(&G__St_base_CintLN_StObject), -1, 1, 1, 1, 1, 0, "u 'StObject' - 11 - sto", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clone",529,G__St_base_Cint_346_0_6, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isZombie",834,G__St_base_Cint_346_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeZombie",1028,G__St_base_Cint_346_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' flg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Ztreamer",842,G__St_base_Cint_346_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - R__b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__St_base_Cint_346_0_10, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_346_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_346_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_346_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_346_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_346_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_346_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_346_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_346_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StObject", 924, G__St_base_Cint_346_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStUUId(void) {
   /* StUUId */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StUUId));
   G__memfunc_setup("StUUId",542,G__St_base_Cint_347_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StUUId), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Generate",811,G__St_base_Cint_347_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__St_base_Cint_347_0_3, 117, G__get_linked_tagnum(&G__St_base_CintLN_StUUId), -1, 1, 1, 1, 1, 0, "u 'StUUId' - 11 - from", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__St_base_Cint_347_0_4, 117, G__get_linked_tagnum(&G__St_base_CintLN_StUUId), -1, 1, 1, 1, 1, 0, "C - - 10 - from", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsNull",599,G__St_base_Cint_347_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,G__St_base_Cint_347_0_6, 105, -1, -1, 0, 1, 1, 1, 8, "u 'StUUId' - 11 - u2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__St_base_Cint_347_0_7, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StUUId::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_347_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUUId::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_347_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StUUId::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_347_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StUUId::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__St_base_Cint_347_0_11, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__St_base_Cint_347_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__St_base_Cint_347_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_347_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_347_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUUId::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_347_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUUId::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_347_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUUId::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_347_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUUId::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StUUId", 542, G__St_base_Cint_347_0_19, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_StUUId), -1, 0, 1, 1, 1, 0, "u 'StUUId' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StUUId", 668, G__St_base_Cint_347_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStXRef(void) {
   /* StXRef */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StXRef));
   G__memfunc_setup("MakeMain",771,G__St_base_Cint_348_0_2, 85, G__get_linked_tagnum(&G__St_base_CintLN_StXRefMain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Synchro",742,G__St_base_Cint_348_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetMain",677,G__St_base_Cint_348_0_4, 85, G__get_linked_tagnum(&G__St_base_CintLN_StXRefMain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsMain",577,G__St_base_Cint_348_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMain",689,G__St_base_Cint_348_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StXRefMain' - 0 - m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Add",265,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TDataSet' - 0 - ds", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUUId",631,G__St_base_Cint_348_0_8, 117, G__get_linked_tagnum(&G__St_base_CintLN_StUUId), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUUId",643,G__St_base_Cint_348_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StUUId' - 11 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenUUId",625,G__St_base_Cint_348_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTally",818,G__St_base_Cint_348_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - tally", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTally",806,G__St_base_Cint_348_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__St_base_Cint_348_0_13, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StXRef::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_348_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StXRef::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_348_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StXRef::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_348_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StXRef::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_348_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_348_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StXRef::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_348_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StXRef::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_348_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StXRef::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_348_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StXRef::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StXRef", 698, G__St_base_Cint_348_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPageMap(void) {
   /* TPageMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_TPageMap));
   G__memfunc_setup("TPageMap",751,G__St_base_Cint_349_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_TPageMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GET",224,G__St_base_Cint_349_0_2, 75, -1, G__defined_typename("ULong_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - udx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__St_base_Cint_349_0_3, 75, -1, G__defined_typename("ULong_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - udx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiMax",764,G__St_base_Cint_349_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 1 - udxMin h - 'UInt_t' 1 - udxMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Test",416,G__St_base_Cint_349_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPageMap::Test) ), 0);
   G__memfunc_setup("NewPage",679,(G__InterfaceMethod) NULL, 75, -1, G__defined_typename("ULong_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TPageMap", 751, G__St_base_Cint_349_0_7, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_TPageMap), -1, 0, 1, 1, 1, 0, "u 'TPageMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPageMap", 877, G__St_base_Cint_349_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__St_base_Cint_349_0_9, (int) ('u'), G__get_linked_tagnum(&G__St_base_CintLN_TPageMap), -1, 1, 1, 1, 1, 0, "u 'TPageMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStObjLink(void) {
   /* StObjLink */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StObjLink));
   G__memfunc_setup("StObjLink",880,G__St_base_Cint_355_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StObjLink), -1, 0, 1, 1, 1, 0, "U 'StObject' - 10 '0' p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StObjLink",880,G__St_base_Cint_355_0_2, 105, G__get_linked_tagnum(&G__St_base_CintLN_StObjLink), -1, 0, 1, 1, 1, 0, "u 'StObjLink' - 11 - from", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__St_base_Cint_355_0_3, 117, G__get_linked_tagnum(&G__St_base_CintLN_StObjLink), -1, 1, 1, 1, 1, 0, "u 'StObjLink' - 1 - from", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__St_base_Cint_355_0_4, 117, G__get_linked_tagnum(&G__St_base_CintLN_StObjLink), -1, 1, 1, 1, 1, 0, "U 'StObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__St_base_Cint_355_0_5, 117, G__get_linked_tagnum(&G__St_base_CintLN_StObject), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__St_base_Cint_355_0_6, 85, G__get_linked_tagnum(&G__St_base_CintLN_StObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__St_base_Cint_355_0_7, 85, G__get_linked_tagnum(&G__St_base_CintLN_StObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__St_base_Cint_355_0_10, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StObjLink::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_355_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StObjLink::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_355_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StObjLink::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_355_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StObjLink::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_355_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_355_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StObjLink::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_355_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StObjLink::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_355_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StObjLink::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_355_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StObjLink::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StObjLink", 1006, G__St_base_Cint_355_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStObjArray(void) {
   /* StObjArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StObjArray));
   G__memfunc_setup("StObjArray",993,G__St_base_Cint_356_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StObjArray), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("random_shuffle",1485,G__St_base_Cint_356_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' start i - - 0 '0x7fffffff' end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__St_base_Cint_356_0_4, 104, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__St_base_Cint_356_0_5, 104, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__St_base_Cint_356_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__St_base_Cint_356_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__St_base_Cint_356_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__St_base_Cint_356_0_9, 104, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__St_base_Cint_356_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'size_t' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__St_base_Cint_356_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'size_t' 0 - sz U 'TObject' - 0 '0' v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("at",213,G__St_base_Cint_356_0_13, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("put_at",653,G__St_base_Cint_356_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - obj i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__St_base_Cint_356_0_15, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 1, 0, 1, 1, 12, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__St_base_Cint_356_0_16, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__St_base_Cint_356_0_17, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 1, 0, 1, 1, 12, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__St_base_Cint_356_0_18, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__St_base_Cint_356_0_19, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__St_base_Cint_356_0_20, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__St_base_Cint_356_0_21, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 1, 1, 1, 1, 12, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__St_base_Cint_356_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 50 - to", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEntries",1050,G__St_base_Cint_356_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - - 10 '\"\"' tit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - - 10 '\"\"' tit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__St_base_Cint_356_0_26, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StObjArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_356_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StObjArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_356_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StObjArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_356_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StObjArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_356_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_356_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StObjArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_356_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StObjArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_356_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StObjArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_356_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StObjArray::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StObjArray", 993, G__St_base_Cint_356_0_38, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_StObjArray), -1, 0, 1, 1, 1, 0, "u 'StObjArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StObjArray", 1119, G__St_base_Cint_356_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__St_base_Cint_356_0_40, (int) ('u'), G__get_linked_tagnum(&G__St_base_CintLN_StObjArray), -1, 1, 1, 1, 1, 0, "u 'StObjArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMem(void) {
   /* StMem */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StMem));
   G__memfunc_setup("Used",401,G__St_base_Cint_357_0_1, 100, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (double (*)())(&StMem::Used) ), 0);
   G__memfunc_setup("ESize",480,G__St_base_Cint_357_0_2, 100, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (double (*)())(&StMem::ESize) ), 0);
   G__memfunc_setup("Print",525,G__St_base_Cint_357_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 10 '\"\"' tit", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&StMem::Print) ), 0);
   G__memfunc_setup("StMem",486,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__St_base_CintLN_StMem), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StMem", 486, G__St_base_Cint_357_0_5, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_StMem), -1, 0, 1, 1, 1, 0, "u 'StMem' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__St_base_Cint_357_0_6, (int) ('u'), G__get_linked_tagnum(&G__St_base_CintLN_StMem), -1, 1, 1, 1, 1, 0, "u 'StMem' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMessMgr(void) {
   /* StMessMgr */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr));
   G__memfunc_setup("IgnoreRepeats",1336,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AllowRepeats",1235,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr), -1, 1, 1, 1, 2, 0, "u 'StMessMgr' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OperatorShift",1354,G__St_base_Cint_361_0_6, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os U 'StMessage' - 0 - stm", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Message",709,G__St_base_Cint_361_0_7, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR), G__defined_typename("ostrstream"), 1, 5, 1, 1, 0, 
"C - - 10 '\"\"' mess C - - 10 '\"\"' type "
"C - - 10 '0' opt C - - 10 '0' sourceFileName "
"i - - 0 '-1' lineNumber", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Print",525,G__St_base_Cint_361_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintList",937,G__St_base_Cint_361_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "U 'messVec' - 0 - list", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintAll",806,G__St_base_Cint_361_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindMessage",1094,G__St_base_Cint_361_0_11, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessage), -1, 0, 5, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4 "
"U 'messVec' - 0 '0' list", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindMessageList",1506,G__St_base_Cint_361_0_12, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 5, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4 "
"U 'messVec' - 0 '0' list", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("RemoveMessage",1331,G__St_base_Cint_361_0_13, 105, -1, -1, 0, 1, 1, 1, 0, "U 'StMessage' - 0 - mess", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("RemoveMessage",1331,G__St_base_Cint_361_0_14, 105, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetLimit",811,G__St_base_Cint_361_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - str i - - 0 '0' n", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetLimit",799,G__St_base_Cint_361_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ListLimits",1038,G__St_base_Cint_361_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("RemoveLimit",1133,G__St_base_Cint_361_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetLevel",804,G__St_base_Cint_361_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - logLevel", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetLevel",792,G__St_base_Cint_361_0_20, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - logLevel", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetName",673,G__St_base_Cint_361_0_21, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SwitchOff",909,G__St_base_Cint_361_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SwitchOn",815,G__St_base_Cint_361_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FixOn",484,G__St_base_Cint_361_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - str", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("NoLimits",815,G__St_base_Cint_361_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Summary",750,G__St_base_Cint_361_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'size_t' 0 '1' nTerms", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MemorySummary",1383,G__St_base_Cint_361_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MemoryOn",822,G__St_base_Cint_361_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MemoryOff",916,G__St_base_Cint_361_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("AddType",683,G__St_base_Cint_361_0_30, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - type C - - 10 - text", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ListTypes",945,G__St_base_Cint_361_0_31, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Close",502,G__St_base_Cint_361_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", "Close the messenger streams", (void*) NULL, 1);
   G__memfunc_setup("isDebugEnabled",1390,G__St_base_Cint_361_0_33, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isWarnEnabled",1311,G__St_base_Cint_361_0_34, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isWarningEnabled",1629,G__St_base_Cint_361_0_35, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isErrorEnabled",1425,G__St_base_Cint_361_0_36, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isInfoEnabled",1299,G__St_base_Cint_361_0_37, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isFatalEnabled",1391,G__St_base_Cint_361_0_38, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isEnabledFor",1198,G__St_base_Cint_361_0_39, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isQAInfoEnabled",1445,G__St_base_Cint_361_0_40, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isUCMInfoEnabled",1528,G__St_base_Cint_361_0_41, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CurrentMessager",1562,G__St_base_Cint_361_0_42, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (StMessMgr* (*)())(&StMessMgr::CurrentMessager) ), 0);
   G__memfunc_setup("Instance",821,G__St_base_Cint_361_0_43, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (StMessMgr* (*)())(&StMessMgr::Instance) ), 0);
   G__memfunc_setup("Instance",821,G__St_base_Cint_361_0_44, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr), -1, 0, 1, 3, 1, 0, "C - - 10 - -", (char*)NULL, (void*) G__func2void( (StMessMgr* (*)(const char*))(&StMessMgr::Instance) ), 0);
   G__memfunc_setup("SetCurrentMessager",1862,G__St_base_Cint_361_0_45, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr), -1, 0, 1, 3, 1, 0, "U 'StMessMgr' - 0 '0' mgr", (char*)NULL, (void*) G__func2void( (StMessMgr* (*)(StMessMgr*))(&StMessMgr::SetCurrentMessager) ), 0);
   G__memfunc_setup("Instantiate",1156,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Instantiate",1156,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr), -1, 0, 1, 1, 2, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Info",396,G__St_base_Cint_361_0_48, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR), G__defined_typename("ostrstream"), 1, 4, 1, 1, 0, 
"C - - 10 '\"\"' mess C - - 10 '\"O\"' opt "
"C - - 10 '0' sourceFileName i - - 0 '-1' lineNumber", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintInfos",1036,G__St_base_Cint_361_0_49, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetInfos",799,G__St_base_Cint_361_0_50, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindInfo",781,G__St_base_Cint_361_0_51, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessage), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindInfoList",1193,G__St_base_Cint_361_0_52, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Warning",726,G__St_base_Cint_361_0_53, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR), G__defined_typename("ostrstream"), 1, 4, 1, 1, 0, 
"C - - 10 '\"\"' mess C - - 10 '\"E\"' opt "
"C - - 10 '0' sourceFileName i - - 0 '-1' lineNumber", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintWarnings",1366,G__St_base_Cint_361_0_54, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetWarnings",1129,G__St_base_Cint_361_0_55, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindWarning",1111,G__St_base_Cint_361_0_56, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessage), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindWarningList",1523,G__St_base_Cint_361_0_57, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Error",522,G__St_base_Cint_361_0_58, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR), G__defined_typename("ostrstream"), 1, 4, 1, 1, 0, 
"C - - 10 '\"\"' mess C - - 10 '\"E\"' opt "
"C - - 10 '0' sourceFileName i - - 0 '-1' lineNumber", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintErrors",1162,G__St_base_Cint_361_0_59, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetErrors",925,G__St_base_Cint_361_0_60, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindError",907,G__St_base_Cint_361_0_61, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessage), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindErrorList",1319,G__St_base_Cint_361_0_62, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Debug",487,G__St_base_Cint_361_0_63, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR), G__defined_typename("ostrstream"), 1, 4, 1, 1, 0, 
"C - - 10 '\"\"' mess C - - 10 '\"OT\"' opt "
"C - - 10 '0' sourceFileName i - - 0 '-1' lineNumber", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintDebug",1012,G__St_base_Cint_361_0_64, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetDebugs",890,G__St_base_Cint_361_0_65, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindDebug",872,G__St_base_Cint_361_0_66, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessage), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindDebugList",1284,G__St_base_Cint_361_0_67, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("QAInfo",542,G__St_base_Cint_361_0_68, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR), G__defined_typename("ostrstream"), 1, 4, 1, 1, 0, 
"C - - 10 '\"\"' mess C - - 10 '\"OS\"' opt "
"C - - 10 '0' sourceFileName i - - 0 '-1' lineNumber", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintQAInfo",1067,G__St_base_Cint_361_0_69, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetQAInfos",945,G__St_base_Cint_361_0_70, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindQAInfo",927,G__St_base_Cint_361_0_71, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessage), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindQAInfoList",1339,G__St_base_Cint_361_0_72, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("UCMInfo",625,G__St_base_Cint_361_0_73, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR), G__defined_typename("ostrstream"), 1, 4, 1, 1, 0, 
"C - - 10 '\"\"' mess C - - 10 '\"OS\"' opt "
"C - - 10 '0' sourceFileName i - - 0 '-1' lineNumber", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintUCMInfo",1150,G__St_base_Cint_361_0_74, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetUCMInfos",1028,G__St_base_Cint_361_0_75, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindUCMInfo",1010,G__St_base_Cint_361_0_76, 85, G__get_linked_tagnum(&G__St_base_CintLN_StMessage), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("FindUCMInfoList",1422,G__St_base_Cint_361_0_77, 85, G__get_linked_tagnum(&G__St_base_CintLN_messVec), -1, 0, 4, 1, 1, 0, 
"C - - 10 - s1 C - - 10 '\"\"' s2 "
"C - - 10 '\"\"' s3 C - - 10 '\"\"' s4", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("out",344,G__St_base_Cint_361_0_78, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR), G__defined_typename("ostrstream"), 1, 1, 1, 1, 0, "C - - 10 '\"\"' mess", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("err",329,G__St_base_Cint_361_0_79, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR), G__defined_typename("ostrstream"), 1, 1, 1, 1, 0, "C - - 10 '\"\"' mess", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("PrintInfo",921,G__St_base_Cint_361_0_80, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Fatal",488,G__St_base_Cint_361_0_81, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR), G__defined_typename("ostrstream"), 1, 4, 1, 1, 0, 
"C - - 10 '\"\"' mess C - - 10 '\"OT\"' opt "
"C - - 10 '0' sourceFileName i - - 0 '-1' lineNumber", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__St_base_Cint_361_0_82, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMessMgr::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_361_0_83, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMessMgr::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_361_0_84, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMessMgr::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_361_0_85, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMessMgr::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__St_base_Cint_361_0_86, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__St_base_Cint_361_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__St_base_Cint_361_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_361_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_361_0_90, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMessMgr::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_361_0_91, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMessMgr::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_361_0_92, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMessMgr::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_361_0_93, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMessMgr::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StMessMgr", 1027, G__St_base_Cint_361_0_94, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStFileIter(void) {
   /* StFileIter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StFileIter));
   G__memfunc_setup("operator!=",970,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 8, "u 'TIterator' - 11 - -", "silence the hidden warning ", (void*) NULL, 1);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__St_base_CintLN_TIterator), -1, 1, 1, 1, 4, 0, "u 'TIterator' - 11 - -", "silence the hidden warning ", (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadObj",663,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 1, 1, 2, 8, "U 'TKey' - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RestoreFileScope",1630,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveFileScope",1289,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StFileIter",987,G__St_base_Cint_365_0_7, 105, G__get_linked_tagnum(&G__St_base_CintLN_StFileIter), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - 'Option_t' 10 '\"\"' option "
"C - - 10 '\"\"' ftitle i - 'Int_t' 0 '1' compress "
"i - 'Int_t' 0 '0' netopt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StFileIter",987,G__St_base_Cint_365_0_8, 105, G__get_linked_tagnum(&G__St_base_CintLN_StFileIter), -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 '0' file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StFileIter",987,G__St_base_Cint_365_0_9, 105, G__get_linked_tagnum(&G__St_base_CintLN_StFileIter), -1, 0, 1, 1, 1, 0, "U 'TDirectory' - 0 - directory", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StFileIter",987,G__St_base_Cint_365_0_10, 105, G__get_linked_tagnum(&G__St_base_CintLN_StFileIter), -1, 0, 1, 1, 1, 0, "u 'StFileIter' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CurrentCursorPosition",2230,G__St_base_Cint_365_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTFile",756,G__St_base_Cint_365_0_12, 85, G__get_linked_tagnum(&G__St_base_CintLN_TFile), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDirectory",1321,G__St_base_Cint_365_0_13, 85, G__get_linked_tagnum(&G__St_base_CintLN_TDirectory), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MapName",671,G__St_base_Cint_365_0_14, 117, G__get_linked_tagnum(&G__St_base_CintLN_TString), -1, 0, 3, 3, 1, 0, 
"C - - 10 - name C - - 10 '0' localSystemKey "
"C - - 10 '0' mountedFileSystemKey", (char*)NULL, (void*) G__func2void( (TString (*)(const char*, const char*, const char*))(&StFileIter::MapName) ), 0);
   G__memfunc_setup("GetResourceName",1513,G__St_base_Cint_365_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFileIter::GetResourceName) ), 0);
   G__memfunc_setup("GetDefaultMapFileName",2052,G__St_base_Cint_365_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFileIter::GetDefaultMapFileName) ), 0);
   G__memfunc_setup("GetLocalFileNameKey",1845,G__St_base_Cint_365_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFileIter::GetLocalFileNameKey) ), 0);
   G__memfunc_setup("GetForeignFileSystemKey",2328,G__St_base_Cint_365_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFileIter::GetForeignFileSystemKey) ), 0);
   G__memfunc_setup("PurgeKeys",927,G__St_base_Cint_365_0_19, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TList' - 0 - listOfKeys", (char*)NULL, (void*) G__func2void( (void (*)(TList*))(&StFileIter::PurgeKeys) ), 0);
   G__memfunc_setup("IsOpen",590,G__St_base_Cint_365_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextEventGet",1217,G__St_base_Cint_365_0_21, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 'UInt_t(-1)' eventNumber h - 'UInt_t' 0 'UInt_t(-1)' runNumber "
"C - - 10 '\"*\"' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextEventPut",1242,G__St_base_Cint_365_0_22, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"U 'TObject' - 0 - obj h - 'UInt_t' 0 - eventNum "
"h - 'UInt_t' 0 - runNumber C - - 10 '0' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NextEventKey",1226,G__St_base_Cint_365_0_23, 85, G__get_linked_tagnum(&G__St_base_CintLN_TKey), -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 'UInt_t(-1)' eventNumber h - 'UInt_t' 0 'UInt_t(-1)' runNumber "
"C - - 10 '\"*\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCursorPosition",1791,G__St_base_Cint_365_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - cursorPosition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCursorPosition",1791,G__St_base_Cint_365_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - keyNameToFind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjlen",890,G__St_base_Cint_365_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TotalKeys",928,G__St_base_Cint_365_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SkipObjects",1121,G__St_base_Cint_365_0_28, 85, G__get_linked_tagnum(&G__St_base_CintLN_TKey), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' nSkip", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetObject",887,G__St_base_Cint_365_0_29, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDepth",789,G__St_base_Cint_365_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCurrentKey",1324,G__St_base_Cint_365_0_31, 85, G__get_linked_tagnum(&G__St_base_CintLN_TKey), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKeyName",970,G__St_base_Cint_365_0_32, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__St_base_Cint_365_0_33, 117, G__get_linked_tagnum(&G__St_base_CintLN_StFileIter), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - cursorPosition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__St_base_Cint_365_0_34, 117, G__get_linked_tagnum(&G__St_base_CintLN_StFileIter), -1, 1, 1, 1, 1, 0, "C - - 10 - keyNameToFind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__St_base_Cint_365_0_35, 117, G__get_linked_tagnum(&G__St_base_CintLN_StFileIter), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - shift", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__St_base_Cint_365_0_36, 117, G__get_linked_tagnum(&G__St_base_CintLN_StFileIter), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - shift", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__St_base_Cint_365_0_37, 117, G__get_linked_tagnum(&G__St_base_CintLN_StFileIter), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__St_base_Cint_365_0_38, 117, G__get_linked_tagnum(&G__St_base_CintLN_StFileIter), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator const char*",1947,G__St_base_Cint_365_0_40, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator const TFile*",2001,G__St_base_Cint_365_0_41, 85, G__get_linked_tagnum(&G__St_base_CintLN_TFile), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator const TDirectory*",2566,G__St_base_Cint_365_0_42, 85, G__get_linked_tagnum(&G__St_base_CintLN_TDirectory), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator int",1239,G__St_base_Cint_365_0_43, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__St_base_Cint_365_0_44, 105, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__St_base_Cint_365_0_45, 105, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Next",415,G__St_base_Cint_365_0_47, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nSkip", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Rewind",617,G__St_base_Cint_365_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator()",957,G__St_base_Cint_365_0_50, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nSkip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__St_base_Cint_365_0_51, 85, G__get_linked_tagnum(&G__St_base_CintLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__St_base_Cint_365_0_52, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StFileIter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_365_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFileIter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_365_0_54, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StFileIter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_365_0_55, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StFileIter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_365_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_365_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFileIter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_365_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFileIter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_365_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFileIter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_365_0_63, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFileIter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StFileIter", 1113, G__St_base_Cint_365_0_64, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStVirtualEventFilter(void) {
   /* StVirtualEventFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__St_base_CintLN_StVirtualEventFilter));
   G__memfunc_setup("StVirtualEventFilter",2070,G__St_base_Cint_368_0_1, 105, G__get_linked_tagnum(&G__St_base_CintLN_StVirtualEventFilter), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOn",377,G__St_base_Cint_368_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOff",471,G__St_base_Cint_368_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlag",666,G__St_base_Cint_368_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOptions",1036,G__St_base_Cint_368_0_5, 107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Turn",425,G__St_base_Cint_368_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TurnOn",614,G__St_base_Cint_368_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TurnOff",708,G__St_base_Cint_368_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Toggle",610,G__St_base_Cint_368_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Channel",697,G__St_base_Cint_368_0_10, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'StGlobalTrack' - 0 - globTrack f - 'Size_t' 1 - size "
"s - 'Style_t' 1 - style", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Channel",697,G__St_base_Cint_368_0_11, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'StObjArray' - 10 - hitCollection f - 'Size_t' 1 - size "
"s - 'Style_t' 1 - style", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Channel",697,G__St_base_Cint_368_0_12, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"U 'TTableSorter' - 10 - tableObject i - 'Int_t' 0 - index "
"f - 'Size_t' 1 - size s - 'Style_t' 1 - style", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Channel",697,G__St_base_Cint_368_0_13, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'StVertex' - 10 - vertexObject f - 'Size_t' 1 - size "
"s - 'Style_t' 1 - style", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Channel",697,G__St_base_Cint_368_0_14, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"U 'TTable' - 10 - tableObject i - 'Int_t' 0 - rowNumber "
"f - 'Size_t' 1 - size s - 'Style_t' 1 - style", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__St_base_Cint_368_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' reset", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetOptions",1048,G__St_base_Cint_368_0_16, 107, -1, G__defined_typename("ULong_t"), 0, 1, 1, 1, 0, "k - 'ULong_t' 0 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__St_base_Cint_368_0_17, 85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StVirtualEventFilter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__St_base_Cint_368_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StVirtualEventFilter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__St_base_Cint_368_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StVirtualEventFilter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__St_base_Cint_368_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StVirtualEventFilter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__St_base_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__St_base_Cint_368_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__St_base_Cint_368_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StVirtualEventFilter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__St_base_Cint_368_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StVirtualEventFilter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__St_base_Cint_368_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StVirtualEventFilter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__St_base_Cint_368_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StVirtualEventFilter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StVirtualEventFilter", 2070, G__St_base_Cint_368_0_29, (int) ('i'), G__get_linked_tagnum(&G__St_base_CintLN_StVirtualEventFilter), -1, 0, 1, 1, 1, 0, "u 'StVirtualEventFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StVirtualEventFilter", 2196, G__St_base_Cint_368_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__St_base_Cint_368_0_31, (int) ('u'), G__get_linked_tagnum(&G__St_base_CintLN_StVirtualEventFilter), -1, 1, 1, 1, 1, 0, "u 'StVirtualEventFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSt_base_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStOK=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStOk=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStWarn=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStEOF=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStErr=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStERR=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStFatal=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStFATAL=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStSKIP=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStSkip=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStSTOP=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__St_base_CintLN_EReturnCodes),-1,-1,1,"kStStop=12",0,(char*)NULL);
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
   G__memvar_setup((void*)(&gMessMgr),85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_StMessMgr),-1,-1,1,"gMessMgr=",0,(char*)NULL);
   G__memvar_setup((void*)(&gMessage),85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_StMessage),-1,-1,1,"gMessage=",0,(char*)NULL);
   G__memvar_setup((void*)(&endm),85,0,0,G__get_linked_tagnum(&G__St_base_CintLN_StMessage),-1,-1,1,"endm=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSt_base_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
   G__memfunc_setup("operator<<", 996, G__St_base_Cint__0_2468, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os U 'StMessage' - 0 - stm", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator++", 962, G__St_base_Cint__0_2469, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 0, "u 'StMessMgr' - 1 - -", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__St_base_Cint__0_2470, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 0, "u 'StMessMgr' - 1 - -", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator--", 966, G__St_base_Cint__0_2471, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 0, "u 'StMessMgr' - 1 - -", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator~", 1002, G__St_base_Cint__0_2472, 117, G__get_linked_tagnum(&G__St_base_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 1, 1, 1, 0, "u 'StMessMgr' - 1 - -", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSt_base_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__St_base_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_ios_base = { "ios_base" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_basic_ioslEcharcOchar_traitslEchargRsPgR = { "basic_ios<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR = { "basic_ostringstream<char,char_traits<char>,allocator<char> >" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TTable = { "TTable" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TDataSet = { "TDataSet" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TDataSetIter = { "TDataSetIter" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TTableSorter = { "TTableSorter" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TTableDescriptor = { "TTableDescriptor" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_EReturnCodes = { "EReturnCodes" , 101 , -1 };
G__linked_taginfo G__St_base_CintLN_TIterator = { "TIterator" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TListIter = { "TListIter" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__St_base_CintLN_table_head_st = { "table_head_st" , 115 , -1 };
G__linked_taginfo G__St_base_CintLN_St_table_header = { "St_table_header" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_St_Module = { "St_Module" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TKey = { "TKey" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StUKey = { "StUKey" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StFileI = { "StFileI" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StIO = { "StIO" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StTree = { "StTree" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StBranch = { "StBranch" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StIOEvent = { "StIOEvent" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StFile = { "StFile" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StXRefMain = { "StXRefMain" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StRefArray = { "StRefArray" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StStrArray = { "StStrArray" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StObject = { "StObject" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StUUId = { "StUUId" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StXRef = { "StXRef" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TPageMap = { "TPageMap" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_TPageMapcLcLEPageMap = { "TPageMap::EPageMap" , 101 , -1 };
G__linked_taginfo G__St_base_CintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR = { "vector<TObject*,allocator<TObject*> >" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_reverse_iteratorlEvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TObject*,allocator<TObject*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StObjLink = { "StObjLink" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StObjArray = { "StObjArray" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StMem = { "StMem" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StMessage = { "StMessage" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_messVec = { "messVec" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StMessMgr = { "StMessMgr" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StMessMgrcLcLESTARMakerErrorLevels = { "StMessMgr::ESTARMakerErrorLevels" , 101 , -1 };
G__linked_taginfo G__St_base_CintLN_StFileIter = { "StFileIter" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StGlobalTrack = { "StGlobalTrack" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StVertex = { "StVertex" , 99 , -1 };
G__linked_taginfo G__St_base_CintLN_StVirtualEventFilter = { "StVirtualEventFilter" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSt_base_Cint() {
  G__St_base_CintLN_TClass.tagnum = -1 ;
  G__St_base_CintLN_TBuffer.tagnum = -1 ;
  G__St_base_CintLN_TDirectory.tagnum = -1 ;
  G__St_base_CintLN_TMemberInspector.tagnum = -1 ;
  G__St_base_CintLN_TObject.tagnum = -1 ;
  G__St_base_CintLN_TNamed.tagnum = -1 ;
  G__St_base_CintLN_TString.tagnum = -1 ;
  G__St_base_CintLN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__St_base_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__St_base_CintLN_ios_base.tagnum = -1 ;
  G__St_base_CintLN_basic_ioslEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__St_base_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR.tagnum = -1 ;
  G__St_base_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__St_base_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__St_base_CintLN_TList.tagnum = -1 ;
  G__St_base_CintLN_TBrowser.tagnum = -1 ;
  G__St_base_CintLN_TObjArray.tagnum = -1 ;
  G__St_base_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__St_base_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__St_base_CintLN_TTable.tagnum = -1 ;
  G__St_base_CintLN_TDataSet.tagnum = -1 ;
  G__St_base_CintLN_TDataSetIter.tagnum = -1 ;
  G__St_base_CintLN_TTableSorter.tagnum = -1 ;
  G__St_base_CintLN_TTableDescriptor.tagnum = -1 ;
  G__St_base_CintLN_EReturnCodes.tagnum = -1 ;
  G__St_base_CintLN_TIterator.tagnum = -1 ;
  G__St_base_CintLN_TListIter.tagnum = -1 ;
  G__St_base_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__St_base_CintLN_table_head_st.tagnum = -1 ;
  G__St_base_CintLN_St_table_header.tagnum = -1 ;
  G__St_base_CintLN_St_Module.tagnum = -1 ;
  G__St_base_CintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__St_base_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__St_base_CintLN_TFile.tagnum = -1 ;
  G__St_base_CintLN_TKey.tagnum = -1 ;
  G__St_base_CintLN_StUKey.tagnum = -1 ;
  G__St_base_CintLN_StFileI.tagnum = -1 ;
  G__St_base_CintLN_StIO.tagnum = -1 ;
  G__St_base_CintLN_StTree.tagnum = -1 ;
  G__St_base_CintLN_StBranch.tagnum = -1 ;
  G__St_base_CintLN_StIOEvent.tagnum = -1 ;
  G__St_base_CintLN_StFile.tagnum = -1 ;
  G__St_base_CintLN_StXRefMain.tagnum = -1 ;
  G__St_base_CintLN_StRefArray.tagnum = -1 ;
  G__St_base_CintLN_StStrArray.tagnum = -1 ;
  G__St_base_CintLN_StObject.tagnum = -1 ;
  G__St_base_CintLN_StUUId.tagnum = -1 ;
  G__St_base_CintLN_StXRef.tagnum = -1 ;
  G__St_base_CintLN_TPageMap.tagnum = -1 ;
  G__St_base_CintLN_TPageMapcLcLEPageMap.tagnum = -1 ;
  G__St_base_CintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR.tagnum = -1 ;
  G__St_base_CintLN_reverse_iteratorlEvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__St_base_CintLN_StObjLink.tagnum = -1 ;
  G__St_base_CintLN_StObjArray.tagnum = -1 ;
  G__St_base_CintLN_StMem.tagnum = -1 ;
  G__St_base_CintLN_StMessage.tagnum = -1 ;
  G__St_base_CintLN_messVec.tagnum = -1 ;
  G__St_base_CintLN_StMessMgr.tagnum = -1 ;
  G__St_base_CintLN_StMessMgrcLcLESTARMakerErrorLevels.tagnum = -1 ;
  G__St_base_CintLN_StFileIter.tagnum = -1 ;
  G__St_base_CintLN_StGlobalTrack.tagnum = -1 ;
  G__St_base_CintLN_StVertex.tagnum = -1 ;
  G__St_base_CintLN_StVirtualEventFilter.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSt_base_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TString);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_vectorlElongcOallocatorlElonggRsPgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_ios_base);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_basic_ioslEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_basic_ostringstreamlEcharcOchar_traitslEchargRcOallocatorlEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TList);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TBrowser);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TTable);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TDataSet);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TDataSetIter);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TTableSorter);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TTableDescriptor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_EReturnCodes),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TIterator);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TListIter);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_table_head_st),sizeof(table_head_st),-1,65536,(char*)NULL,G__setup_memvartable_head_st,G__setup_memfunctable_head_st);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_St_table_header),sizeof(St_table_header),-1,323840,"C++ wrapper for <table_header> ",G__setup_memvarSt_table_header,G__setup_memfuncSt_table_header);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_St_Module),sizeof(St_Module),-1,99584,(char*)NULL,G__setup_memvarSt_Module,G__setup_memfuncSt_Module);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TFile);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TKey);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StUKey),sizeof(StUKey),-1,36096,(char*)NULL,G__setup_memvarStUKey,G__setup_memfuncStUKey);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StFileI),sizeof(StFileI),-1,62727,(char*)NULL,G__setup_memvarStFileI,G__setup_memfuncStFileI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StIO),sizeof(StIO),-1,65536,(char*)NULL,G__setup_memvarStIO,G__setup_memfuncStIO);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StTree),sizeof(StTree),-1,62720,(char*)NULL,G__setup_memvarStTree,G__setup_memfuncStTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StBranch),sizeof(StBranch),-1,62720,(char*)NULL,G__setup_memvarStBranch,G__setup_memfuncStBranch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StIOEvent),sizeof(StIOEvent),-1,95488,(char*)NULL,G__setup_memvarStIOEvent,G__setup_memfuncStIOEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StFile),sizeof(StFile),-1,62720,(char*)NULL,G__setup_memvarStFile,G__setup_memfuncStFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StXRefMain),sizeof(StXRefMain),-1,128257,(char*)NULL,G__setup_memvarStXRefMain,G__setup_memfuncStXRefMain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StRefArray),sizeof(StRefArray),-1,96000,(char*)NULL,G__setup_memvarStRefArray,G__setup_memfuncStRefArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StStrArray),sizeof(StStrArray),-1,98048,(char*)NULL,G__setup_memvarStStrArray,G__setup_memfuncStStrArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StObject),sizeof(StObject),-1,98048,"Base class for StEvent",G__setup_memvarStObject,G__setup_memfuncStObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StUUId),sizeof(StUUId),-1,68864,(char*)NULL,G__setup_memvarStUUId,G__setup_memfuncStUUId);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StXRef),sizeof(StXRef),-1,128258,(char*)NULL,G__setup_memvarStXRef,G__setup_memfuncStXRef);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_TPageMap),sizeof(TPageMap),-1,66816,(char*)NULL,G__setup_memvarTPageMap,G__setup_memfuncTPageMap);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_TPageMapcLcLEPageMap);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_vectorlETObjectmUcOallocatorlETObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_reverse_iteratorlEvectorlETObjectmUcOallocatorlETObjectmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StObjLink),sizeof(StObjLink),-1,98048,(char*)NULL,G__setup_memvarStObjLink,G__setup_memfuncStObjLink);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StObjArray),sizeof(StObjArray),-1,95488,(char*)NULL,G__setup_memvarStObjArray,G__setup_memfuncStObjArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StMem),sizeof(StMem),-1,66816,(char*)NULL,G__setup_memvarStMem,G__setup_memfuncStMem);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_StMessage);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_messVec);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StMessMgr),sizeof(StMessMgr),-1,36670,(char*)NULL,G__setup_memvarStMessMgr,G__setup_memfuncStMessMgr);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_StMessMgrcLcLESTARMakerErrorLevels);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StFileIter),sizeof(StFileIter),-1,298752,"TFile class iterator",G__setup_memvarStFileIter,G__setup_memfuncStFileIter);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_StGlobalTrack);
   G__get_linked_tagnum_fwd(&G__St_base_CintLN_StVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__St_base_CintLN_StVirtualEventFilter),sizeof(StVirtualEventFilter),-1,292096,"virtual base class for the custom \"event\" filters (useful for 3D visualization)",G__setup_memvarStVirtualEventFilter,G__setup_memfuncStVirtualEventFilter);
}
extern "C" void G__cpp_setupSt_base_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupSt_base_Cint()");
  G__set_cpp_environmentSt_base_Cint();
  G__cpp_setup_tagtableSt_base_Cint();

  G__cpp_setup_inheritanceSt_base_Cint();

  G__cpp_setup_typetableSt_base_Cint();

  G__cpp_setup_memvarSt_base_Cint();

  G__cpp_setup_memfuncSt_base_Cint();
  G__cpp_setup_globalSt_base_Cint();
  G__cpp_setup_funcSt_base_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSt_base_Cint();
  return;
}
class G__cpp_setup_initSt_base_Cint {
  public:
    G__cpp_setup_initSt_base_Cint() { G__add_setup_func("St_base_Cint",(G__incsetup)(&G__cpp_setupSt_base_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSt_base_Cint() { G__remove_setup_func("St_base_Cint"); }
};
G__cpp_setup_initSt_base_Cint G__cpp_setup_initializerSt_base_Cint;

