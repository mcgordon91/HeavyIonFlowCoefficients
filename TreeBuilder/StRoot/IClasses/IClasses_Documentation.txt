Documentation for IClasses

	IEventPlane

		Class for saving various particle properties

		IEventPlane()
		Default constructor

		IEventPlane(float in_phi, float in_weight)
		Constructor which sets phi and weight for the particle
		
		~IEventPlane()
		Default deconstructor

		void SetPhi()
		Set the particle phi using the particle's saved momentum vector

		void SetPhi(float in_phi)
		
		void SetEta()
		Set the particle pseudorapidity using the particle's saved momentum vector

		void SetEta(float in_eta)	
		
		void SetWeight(float in_weight)
		
		void SetMomentum(TVector3 in_momentum)

		void SetMomentumXYZ(float in_X, float in_Y, float in_Z)

		void SetMomentumX(float in_X)

		void SetMomentumY(float in_Y)

		void SetMomentumZ(float in_Z)
		
		void SetCharge(int in_Charge)

		void SetHitsFit(float in_Fit)

		void SetHitsPoss(float in_Poss)

		void SetParticleID(int in_PID)

		void SetToFBeta(float in_ToF)

		void SetTileID(int in_TileID)

		void SetnMIP(float in_mip)

		void SetdEdx(float in_dedx)

		Float_t GetPhi()

		Float_t GetWeight()
		
		Int_t GetCharge()
	
		Float_t GetEta()
	
		Int_t GetHitsFit()

		Int_t GetHitsPoss()
		
		TVector3 GetMomentum()

		Int_t GetParticleID()
				
		Float_t GetToFBeta()

		IEventPlane::GetRapidity()
		Returns the particle rapidity using the particle's saved ID and momentum vector

		Float_t GetdEdx()
		
		Int_t GetEPDtileID()

		Int_t GetEPDew()
		Returns the side of the EPD of the hit using the particle's saved tile ID

		Int_t GetEPDtt()
		Returns the EPD tile number within its supersector of the hit using the particle's saved tile ID

		Int_t GetEPDpp()
		Returns the EPD supersector of the hit using the particle's saved tile ID

		Int_t GetRingNumber()
		Returns the EPD ring number using the particle's saved tile ID
		
		Float_t	GetnMIP()

		Float_t QxTerm(int harmonic)
		Returns the particle's Qx = weight*cos(harmonic * ϕ)

		Float_t QyTerm(int harmonic)
		Returns the particle's Qy = weight*sin(harmonic * ϕ)
		
	IEvent

		IEvent()

		~IEvent()

		void ClearEvent()

		void Init()

		std::vector<float> GetPsi(int harmonic)
		Returns a vector containing psis for the event. Index 0 is the psi for the whole event. All other indices are auto-correlation corrected psis corresponding to each particle in the event.

		std::vector<float> GetPsi(int harmonic, char option, float param1, float param2 = 0.0)
		Returns a vector containing psis for a specified subset of an event. See the documentation of GetSubEvent() for further details on usage. Index 0 is the psi for the whole event. All other indices are auto-correlation corrected psis corresponding to each particle in the event
  
		Float_t GetQx(int)

		Float_t GetQy(int)
  
		Float_t GetEventPsi(int harmonic)
		Returns the psi for the event.

		Float_t GetEventPsi(int harmonic, char option, float param1, float param2 = 0.0)
		Returns the psi for a specified subset of an event. See the documentation of GetSubEvent() for further details on usage.
  
		Float_t GetAutoCorrelationPsi(int harmonic)
		Returns a vector containing autocorrelation corrrected psis corresponding to each particle in the event.

		Float_t GetAutoCorrelationPsi(int harmonic, char option, float param1, float param2 = 0.0)
		Returns a vector containing autocorrelation corrrected psis corresponding to each particle in a specified subset of an event. See the documentation of GetSubEvent() for further details on usage.

		std::vector<IEventPlane> GetEPParticles()
  
		void AddEPParticle(IEventPlane n)
		Add a particle to the event

		void AddEPParticle(std::vector<IEventPlane> n)
		Add a vector of particles to the event
  
		void RemoveEPParticle(int n) //Remove a particle at index n

		void SetEPParticles( const std::vector<IEventPlane> & n)
		Set the particles for the event

		void SetQCenter(float nqx, float nqy)
		Set the center for the Q vector - for recentering
  
		Float_t GetEPDnMip(int ew, int pp, int tt)

		IEvent GetSubEvent(char option, float param1, float param2 = 0.0)
		Creates a copy of the event with a particle listing containing a subset of the event's current particles. The options are as follows:

		'e' - pseudorapidity; param1 is eta_min, and param2 is eta_max
		'p' - transverse momentum pT; param1 is pT_min, and param2 is pT_max
		'i' - particle ID; param1 is the ID of the particle, and param2 is unused
		'c' - charge; param1 is the charge, and param2 is unused
		't' - ToF beta; param1 is beta_min, and param2 is beta_max
		'r' - EPD ring number; param1 is ring_min, and param2 is ring_max

		void setEPDnMip(int ew, int pp, int tt, float nMip)

		void setEPDnMip(int tileID, float nMip)

		std::vector<IEventPlane> EPDVector(TVector3 primaryVertex, float etaCorrection = 0.0, float mThresh = 0.3, mMax = 3.0)
		Converts the saved EPD array into an IEventPlane vector. Saved eta values will be in the lab frame; use etaCorrection if i.e. center-of-mass rapidity correction is desired. Saved weights are based off the nMip for each hit. If any other customization to the underlying hits needs to be done, it may be better to forego the array altogether and construct EPD tracks as in other detectors.
  
		void AddEPDtoTracks(TVector3, float);
		Converts the saved EPD array into an IEventPlane vector and adds the vector to the list of particles
		WARNING: Only call this once per event and only after the EPD array has been completely filled.
