//
// File generated by rootcint at Sat Apr  8 12:00:56 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStarClassLibrarydIStarClassLibrary_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StarClassLibrary_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::StThreeVector< double > StThreeVectorlEdoublegR;
      #else
      class StThreeVectorlEdoublegR  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~StThreeVectorlEdoublegR() throw() {};
         double mX1; //
         double mX2; //
         double mX3; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::StThreeVector< float > StThreeVectorlEfloatgR;
      #else
      class StThreeVectorlEfloatgR  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~StThreeVectorlEfloatgR() throw() {};
         float mX1; //
         float mX2; //
         float mX3; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::StLorentzVector< float > StLorentzVectorlEfloatgR;
      #else
      class StLorentzVectorlEfloatgR  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~StLorentzVectorlEfloatgR() throw() {};
         ::StThreeVector< float > mThreeVector; //
         float mX4; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::StLorentzVector< double > StLorentzVectorlEdoublegR;
      #else
      class StLorentzVectorlEdoublegR  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~StLorentzVectorlEdoublegR() throw() {};
         ::StThreeVector< double > mThreeVector; //
         double mX4; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::StMatrix< double > StMatrixlEdoublegR;
      #else
      class StMatrixlEdoublegR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::StMatrix< double >::StMatrixRow StMatrixRow;
         #else
         class StMatrixRow  {
            public:
            //friend XX;
            ::StMatrix< double >* _a; //
            unsigned int _r; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::StMatrix< double >::StMatrixRowConst StMatrixRowConst;
         #else
         class StMatrixRowConst  {
            public:
            //friend XX;
            :: StMatrix< double >* _a; //
            unsigned int _r; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~StMatrixlEdoublegR() throw() {};
         double* mElement; //
         unsigned int mRow; //
         unsigned int mCol; //
         unsigned int mSize; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::StMatrix< float > StMatrixlEfloatgR;
      #else
      class StMatrixlEfloatgR  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::StMatrix< float >::StMatrixRow StMatrixRow;
         #else
         class StMatrixRow  {
            public:
            //friend XX;
            ::StMatrix< float >* _a; //
            unsigned int _r; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::StMatrix< float >::StMatrixRowConst StMatrixRowConst;
         #else
         class StMatrixRowConst  {
            public:
            //friend XX;
            :: StMatrix< float >* _a; //
            unsigned int _r; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~StMatrixlEfloatgR() throw() {};
         float* mElement; //
         unsigned int mRow; //
         unsigned int mCol; //
         unsigned int mSize; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StThreeVectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void StThreeVectorlEdoublegR_Dictionary();
   static void *new_StThreeVectorlEdoublegR(void *p = 0);
   static void delete_StThreeVectorlEdoublegR(void *p);
   static void deleteArray_StThreeVectorlEdoublegR(void *p);
   static void destruct_StThreeVectorlEdoublegR(void *p);
   static void streamer_StThreeVectorlEdoublegR(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StThreeVector<double>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::StThreeVector<double>) == sizeof( ::ROOTShadow::Shadow::StThreeVectorlEdoublegR));
      ::StThreeVector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StThreeVector<double> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StThreeVector<double>", ::StThreeVector<double>::Class_Version(), ".sl73_gcc485/obj/StRoot/StarClassLibrary/StThreeVector.hh", 115,
                  typeid(::StThreeVector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  &StThreeVectorlEdoublegR_Dictionary, isa_proxy, 1,
                  sizeof(::StThreeVector<double>) );
      instance.SetNew(&new_StThreeVectorlEdoublegR);
      instance.SetDelete(&delete_StThreeVectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_StThreeVectorlEdoublegR);
      instance.SetDestructor(&destruct_StThreeVectorlEdoublegR);
      instance.SetStreamerFunc(&streamer_StThreeVectorlEdoublegR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StThreeVector<double>*)
   {
      return GenerateInitInstanceLocal((::StThreeVector<double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StThreeVector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void StThreeVectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StThreeVectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void StThreeVectorlEfloatgR_Dictionary();
   static void *new_StThreeVectorlEfloatgR(void *p = 0);
   static void delete_StThreeVectorlEfloatgR(void *p);
   static void deleteArray_StThreeVectorlEfloatgR(void *p);
   static void destruct_StThreeVectorlEfloatgR(void *p);
   static void streamer_StThreeVectorlEfloatgR(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StThreeVector<float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::StThreeVector<float>) == sizeof( ::ROOTShadow::Shadow::StThreeVectorlEfloatgR));
      ::StThreeVector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StThreeVector<float> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StThreeVector<float>", ::StThreeVector<float>::Class_Version(), ".sl73_gcc485/obj/StRoot/StarClassLibrary/StThreeVector.hh", 115,
                  typeid(::StThreeVector<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  &StThreeVectorlEfloatgR_Dictionary, isa_proxy, 1,
                  sizeof(::StThreeVector<float>) );
      instance.SetNew(&new_StThreeVectorlEfloatgR);
      instance.SetDelete(&delete_StThreeVectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_StThreeVectorlEfloatgR);
      instance.SetDestructor(&destruct_StThreeVectorlEfloatgR);
      instance.SetStreamerFunc(&streamer_StThreeVectorlEfloatgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StThreeVector<float>*)
   {
      return GenerateInitInstanceLocal((::StThreeVector<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StThreeVector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void StThreeVectorlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StLorentzVectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void StLorentzVectorlEfloatgR_Dictionary();
   static void *new_StLorentzVectorlEfloatgR(void *p = 0);
   static void *newArray_StLorentzVectorlEfloatgR(Long_t size, void *p);
   static void delete_StLorentzVectorlEfloatgR(void *p);
   static void deleteArray_StLorentzVectorlEfloatgR(void *p);
   static void destruct_StLorentzVectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StLorentzVector<float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::StLorentzVector<float>) == sizeof( ::ROOTShadow::Shadow::StLorentzVectorlEfloatgR));
      ::StLorentzVector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StLorentzVector<float> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StLorentzVector<float>", ::StLorentzVector<float>::Class_Version(), ".sl73_gcc485/obj/StRoot/StarClassLibrary/StLorentzVector.hh", 74,
                  typeid(::StLorentzVector<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  &StLorentzVectorlEfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(::StLorentzVector<float>) );
      instance.SetNew(&new_StLorentzVectorlEfloatgR);
      instance.SetNewArray(&newArray_StLorentzVectorlEfloatgR);
      instance.SetDelete(&delete_StLorentzVectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_StLorentzVectorlEfloatgR);
      instance.SetDestructor(&destruct_StLorentzVectorlEfloatgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StLorentzVector<float>*)
   {
      return GenerateInitInstanceLocal((::StLorentzVector<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StLorentzVector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void StLorentzVectorlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StLorentzVectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void StLorentzVectorlEdoublegR_Dictionary();
   static void *new_StLorentzVectorlEdoublegR(void *p = 0);
   static void *newArray_StLorentzVectorlEdoublegR(Long_t size, void *p);
   static void delete_StLorentzVectorlEdoublegR(void *p);
   static void deleteArray_StLorentzVectorlEdoublegR(void *p);
   static void destruct_StLorentzVectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StLorentzVector<double>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::StLorentzVector<double>) == sizeof( ::ROOTShadow::Shadow::StLorentzVectorlEdoublegR));
      ::StLorentzVector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StLorentzVector<double> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StLorentzVector<double>", ::StLorentzVector<double>::Class_Version(), ".sl73_gcc485/obj/StRoot/StarClassLibrary/StLorentzVector.hh", 74,
                  typeid(::StLorentzVector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  &StLorentzVectorlEdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(::StLorentzVector<double>) );
      instance.SetNew(&new_StLorentzVectorlEdoublegR);
      instance.SetNewArray(&newArray_StLorentzVectorlEdoublegR);
      instance.SetDelete(&delete_StLorentzVectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_StLorentzVectorlEdoublegR);
      instance.SetDestructor(&destruct_StLorentzVectorlEdoublegR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StLorentzVector<double>*)
   {
      return GenerateInitInstanceLocal((::StLorentzVector<double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StLorentzVector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void StLorentzVectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StMatrixlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void StMatrixlEdoublegR_Dictionary();
   static void *new_StMatrixlEdoublegR(void *p = 0);
   static void *newArray_StMatrixlEdoublegR(Long_t size, void *p);
   static void delete_StMatrixlEdoublegR(void *p);
   static void deleteArray_StMatrixlEdoublegR(void *p);
   static void destruct_StMatrixlEdoublegR(void *p);
   static void streamer_StMatrixlEdoublegR(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMatrix<double>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::StMatrix<double>) == sizeof( ::ROOTShadow::Shadow::StMatrixlEdoublegR));
      ::StMatrix<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMatrix<double> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMatrix<double>", ::StMatrix<double>::Class_Version(), ".sl73_gcc485/obj/StRoot/StarClassLibrary/StMatrix.hh", 265,
                  typeid(::StMatrix<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  &StMatrixlEdoublegR_Dictionary, isa_proxy, 1,
                  sizeof(::StMatrix<double>) );
      instance.SetNew(&new_StMatrixlEdoublegR);
      instance.SetNewArray(&newArray_StMatrixlEdoublegR);
      instance.SetDelete(&delete_StMatrixlEdoublegR);
      instance.SetDeleteArray(&deleteArray_StMatrixlEdoublegR);
      instance.SetDestructor(&destruct_StMatrixlEdoublegR);
      instance.SetStreamerFunc(&streamer_StMatrixlEdoublegR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMatrix<double>*)
   {
      return GenerateInitInstanceLocal((::StMatrix<double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMatrix<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void StMatrixlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StMatrixlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void StMatrixlEfloatgR_Dictionary();
   static void *new_StMatrixlEfloatgR(void *p = 0);
   static void *newArray_StMatrixlEfloatgR(Long_t size, void *p);
   static void delete_StMatrixlEfloatgR(void *p);
   static void deleteArray_StMatrixlEfloatgR(void *p);
   static void destruct_StMatrixlEfloatgR(void *p);
   static void streamer_StMatrixlEfloatgR(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StMatrix<float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::StMatrix<float>) == sizeof( ::ROOTShadow::Shadow::StMatrixlEfloatgR));
      ::StMatrix<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StMatrix<float> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StMatrix<float>", ::StMatrix<float>::Class_Version(), ".sl73_gcc485/obj/StRoot/StarClassLibrary/StMatrix.hh", 265,
                  typeid(::StMatrix<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  &StMatrixlEfloatgR_Dictionary, isa_proxy, 1,
                  sizeof(::StMatrix<float>) );
      instance.SetNew(&new_StMatrixlEfloatgR);
      instance.SetNewArray(&newArray_StMatrixlEfloatgR);
      instance.SetDelete(&delete_StMatrixlEfloatgR);
      instance.SetDeleteArray(&deleteArray_StMatrixlEfloatgR);
      instance.SetDestructor(&destruct_StMatrixlEfloatgR);
      instance.SetStreamerFunc(&streamer_StMatrixlEfloatgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StMatrix<float>*)
   {
      return GenerateInitInstanceLocal((::StMatrix<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StMatrix<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void StMatrixlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StHelix_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StHelix(void *p);
   static void deleteArray_StHelix(void *p);
   static void destruct_StHelix(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StHelix*)
   {
      ::StHelix *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StHelix >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StHelix", ::StHelix::Class_Version(), ".sl73_gcc485/obj/StRoot/StarClassLibrary/StHelix.hh", 65,
                  typeid(::StHelix), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StHelix::Dictionary, isa_proxy, 4,
                  sizeof(::StHelix) );
      instance.SetDelete(&delete_StHelix);
      instance.SetDeleteArray(&deleteArray_StHelix);
      instance.SetDestructor(&destruct_StHelix);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StHelix*)
   {
      return GenerateInitInstanceLocal((::StHelix*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StHelix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StPhysicalHelix_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StPhysicalHelix(void *p = 0);
   static void *newArray_StPhysicalHelix(Long_t size, void *p);
   static void delete_StPhysicalHelix(void *p);
   static void deleteArray_StPhysicalHelix(void *p);
   static void destruct_StPhysicalHelix(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StPhysicalHelix*)
   {
      ::StPhysicalHelix *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StPhysicalHelix >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StPhysicalHelix", ::StPhysicalHelix::Class_Version(), ".sl73_gcc485/obj/StRoot/StarClassLibrary/StPhysicalHelix.hh", 36,
                  typeid(::StPhysicalHelix), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StPhysicalHelix::Dictionary, isa_proxy, 4,
                  sizeof(::StPhysicalHelix) );
      instance.SetNew(&new_StPhysicalHelix);
      instance.SetNewArray(&newArray_StPhysicalHelix);
      instance.SetDelete(&delete_StPhysicalHelix);
      instance.SetDeleteArray(&deleteArray_StPhysicalHelix);
      instance.SetDestructor(&destruct_StPhysicalHelix);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StPhysicalHelix*)
   {
      return GenerateInitInstanceLocal((::StPhysicalHelix*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StPhysicalHelix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BetheBloch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BetheBloch_Dictionary();
   static void *new_BetheBloch(void *p = 0);
   static void *newArray_BetheBloch(Long_t size, void *p);
   static void delete_BetheBloch(void *p);
   static void deleteArray_BetheBloch(void *p);
   static void destruct_BetheBloch(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BetheBloch*)
   {
      ::BetheBloch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BetheBloch),0);
      static ::ROOT::TGenericClassInfo 
         instance("BetheBloch", ".sl73_gcc485/obj/StRoot/StarClassLibrary/BetheBloch.h", 39,
                  typeid(::BetheBloch), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &BetheBloch_Dictionary, isa_proxy, 0,
                  sizeof(::BetheBloch) );
      instance.SetNew(&new_BetheBloch);
      instance.SetNewArray(&newArray_BetheBloch);
      instance.SetDelete(&delete_BetheBloch);
      instance.SetDeleteArray(&deleteArray_BetheBloch);
      instance.SetDestructor(&destruct_BetheBloch);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BetheBloch*)
   {
      return GenerateInitInstanceLocal((::BetheBloch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BetheBloch*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BetheBloch_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::BetheBloch*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StHelixHelper_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StHelixHelper(void *p);
   static void deleteArray_StHelixHelper(void *p);
   static void destruct_StHelixHelper(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StHelixHelper*)
   {
      ::StHelixHelper *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StHelixHelper >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StHelixHelper", ::StHelixHelper::Class_Version(), ".sl73_gcc485/obj/StRoot/StarClassLibrary/StHelixHelper.h", 26,
                  typeid(::StHelixHelper), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StHelixHelper::Dictionary, isa_proxy, 4,
                  sizeof(::StHelixHelper) );
      instance.SetDelete(&delete_StHelixHelper);
      instance.SetDeleteArray(&deleteArray_StHelixHelper);
      instance.SetDestructor(&destruct_StHelixHelper);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StHelixHelper*)
   {
      return GenerateInitInstanceLocal((::StHelixHelper*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StHelixHelper*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StParticleTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StParticleTable(void *p);
   static void deleteArray_StParticleTable(void *p);
   static void destruct_StParticleTable(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StParticleTable*)
   {
      ::StParticleTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StParticleTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StParticleTable", ::StParticleTable::Class_Version(), ".sl73_gcc485/obj/StRoot/StarClassLibrary/StParticleTable.hh", 57,
                  typeid(::StParticleTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StParticleTable::Dictionary, isa_proxy, 4,
                  sizeof(::StParticleTable) );
      instance.SetDelete(&delete_StParticleTable);
      instance.SetDeleteArray(&deleteArray_StParticleTable);
      instance.SetDestructor(&destruct_StParticleTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StParticleTable*)
   {
      return GenerateInitInstanceLocal((::StParticleTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StParticleTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StParticleDefinition_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_StParticleDefinition(void *p);
   static void deleteArray_StParticleDefinition(void *p);
   static void destruct_StParticleDefinition(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StParticleDefinition*)
   {
      ::StParticleDefinition *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StParticleDefinition >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StParticleDefinition", ::StParticleDefinition::Class_Version(), ".sl73_gcc485/obj/StRoot/StarClassLibrary/StParticleDefinition.hh", 48,
                  typeid(::StParticleDefinition), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StParticleDefinition::Dictionary, isa_proxy, 4,
                  sizeof(::StParticleDefinition) );
      instance.SetDelete(&delete_StParticleDefinition);
      instance.SetDeleteArray(&deleteArray_StParticleDefinition);
      instance.SetDestructor(&destruct_StParticleDefinition);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StParticleDefinition*)
   {
      return GenerateInitInstanceLocal((::StParticleDefinition*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StParticleDefinition*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
template <> atomic_TClass_ptr StThreeVector<double>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *StThreeVector<double>::Class_Name()
{
   return "StThreeVector<double>";
}

//______________________________________________________________________________
template <> const char *StThreeVector<double>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<double>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int StThreeVector<double>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<double>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void StThreeVector<double>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<double>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *StThreeVector<double>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<double>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr StThreeVector<float>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *StThreeVector<float>::Class_Name()
{
   return "StThreeVector<float>";
}

//______________________________________________________________________________
template <> const char *StThreeVector<float>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<float>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int StThreeVector<float>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<float>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void StThreeVector<float>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<float>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *StThreeVector<float>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<float>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr StLorentzVector<float>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *StLorentzVector<float>::Class_Name()
{
   return "StLorentzVector<float>";
}

//______________________________________________________________________________
template <> const char *StLorentzVector<float>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<float>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int StLorentzVector<float>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<float>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void StLorentzVector<float>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<float>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *StLorentzVector<float>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<float>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr StLorentzVector<double>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *StLorentzVector<double>::Class_Name()
{
   return "StLorentzVector<double>";
}

//______________________________________________________________________________
template <> const char *StLorentzVector<double>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<double>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int StLorentzVector<double>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<double>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void StLorentzVector<double>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<double>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *StLorentzVector<double>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<double>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr StMatrix<double>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *StMatrix<double>::Class_Name()
{
   return "StMatrix<double>";
}

//______________________________________________________________________________
template <> const char *StMatrix<double>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<double>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int StMatrix<double>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<double>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void StMatrix<double>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<double>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *StMatrix<double>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<double>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr StMatrix<float>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *StMatrix<float>::Class_Name()
{
   return "StMatrix<float>";
}

//______________________________________________________________________________
template <> const char *StMatrix<float>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<float>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int StMatrix<float>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<float>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void StMatrix<float>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<float>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *StMatrix<float>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<float>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StHelix::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StHelix::Class_Name()
{
   return "StHelix";
}

//______________________________________________________________________________
const char *StHelix::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StHelix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StHelix::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StHelix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StHelix::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StHelix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StHelix::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StHelix*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StPhysicalHelix::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StPhysicalHelix::Class_Name()
{
   return "StPhysicalHelix";
}

//______________________________________________________________________________
const char *StPhysicalHelix::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StPhysicalHelix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StPhysicalHelix::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StPhysicalHelix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StPhysicalHelix::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StPhysicalHelix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StPhysicalHelix::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StPhysicalHelix*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StHelixHelper::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StHelixHelper::Class_Name()
{
   return "StHelixHelper";
}

//______________________________________________________________________________
const char *StHelixHelper::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StHelixHelper*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StHelixHelper::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StHelixHelper*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StHelixHelper::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StHelixHelper*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StHelixHelper::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StHelixHelper*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StParticleTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StParticleTable::Class_Name()
{
   return "StParticleTable";
}

//______________________________________________________________________________
const char *StParticleTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StParticleTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StParticleTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StParticleTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StParticleTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StParticleTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StParticleTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StParticleTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StParticleDefinition::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StParticleDefinition::Class_Name()
{
   return "StParticleDefinition";
}

//______________________________________________________________________________
const char *StParticleDefinition::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StParticleDefinition*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StParticleDefinition::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StParticleDefinition*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StParticleDefinition::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StParticleDefinition*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StParticleDefinition::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StParticleDefinition*)0x0)->GetClass();} }
   return fgIsA;
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BetheBloch(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BetheBloch : new ::BetheBloch;
   }
   static void *newArray_BetheBloch(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BetheBloch[nElements] : new ::BetheBloch[nElements];
   }
   // Wrapper around operator delete
   static void delete_BetheBloch(void *p) {
      delete ((::BetheBloch*)p);
   }
   static void deleteArray_BetheBloch(void *p) {
      delete [] ((::BetheBloch*)p);
   }
   static void destruct_BetheBloch(void *p) {
      typedef ::BetheBloch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BetheBloch

//______________________________________________________________________________
namespace ROOTDict {
   void StThreeVectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class StThreeVector<float>.
      typedef ::ROOTShadow::Shadow::StThreeVectorlEfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<float>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX1", &sobj->mX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX2", &sobj->mX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX3", &sobj->mX3);
   }

}

template <> void StThreeVector<float>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::StThreeVectorlEfloatgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StThreeVectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StThreeVector<float>( (TRootIOCtor*)0 ) : new ::StThreeVector<float>( (TRootIOCtor*)0 );
   }
   // Wrapper around operator delete
   static void delete_StThreeVectorlEfloatgR(void *p) {
      delete ((::StThreeVector<float>*)p);
   }
   static void deleteArray_StThreeVectorlEfloatgR(void *p) {
      delete [] ((::StThreeVector<float>*)p);
   }
   static void destruct_StThreeVectorlEfloatgR(void *p) {
      typedef ::StThreeVector<float> current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StThreeVectorlEfloatgR(TBuffer &buf, void *obj) {
      ((::StThreeVector<float>*)obj)->::StThreeVector<float>::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StThreeVector<float>

//______________________________________________________________________________
namespace ROOTDict {
   void StThreeVectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class StThreeVector<double>.
      typedef ::ROOTShadow::Shadow::StThreeVectorlEdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::StThreeVector<double>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX1", &sobj->mX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX2", &sobj->mX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX3", &sobj->mX3);
   }

}

template <> void StThreeVector<double>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::StThreeVectorlEdoublegR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StThreeVectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StThreeVector<double>( (TRootIOCtor*)0 ) : new ::StThreeVector<double>( (TRootIOCtor*)0 );
   }
   // Wrapper around operator delete
   static void delete_StThreeVectorlEdoublegR(void *p) {
      delete ((::StThreeVector<double>*)p);
   }
   static void deleteArray_StThreeVectorlEdoublegR(void *p) {
      delete [] ((::StThreeVector<double>*)p);
   }
   static void destruct_StThreeVectorlEdoublegR(void *p) {
      typedef ::StThreeVector<double> current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StThreeVectorlEdoublegR(TBuffer &buf, void *obj) {
      ((::StThreeVector<double>*)obj)->::StThreeVector<double>::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StThreeVector<double>

//______________________________________________________________________________
template <> void StLorentzVector<float>::Streamer(TBuffer &R__b)
{
   // Stream an object of class StLorentzVector<float>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StLorentzVector<float>::Class(),this);
   } else {
      R__b.WriteClassBuffer(StLorentzVector<float>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void StLorentzVectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class StLorentzVector<float>.
      typedef ::ROOTShadow::Shadow::StLorentzVectorlEfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<float>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mThreeVector", &sobj->mThreeVector);
      R__insp.InspectMember(sobj->mThreeVector, "mThreeVector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX4", &sobj->mX4);
   }

}

template <> void StLorentzVector<float>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::StLorentzVectorlEfloatgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StLorentzVectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StLorentzVector<float> : new ::StLorentzVector<float>;
   }
   static void *newArray_StLorentzVectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StLorentzVector<float>[nElements] : new ::StLorentzVector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_StLorentzVectorlEfloatgR(void *p) {
      delete ((::StLorentzVector<float>*)p);
   }
   static void deleteArray_StLorentzVectorlEfloatgR(void *p) {
      delete [] ((::StLorentzVector<float>*)p);
   }
   static void destruct_StLorentzVectorlEfloatgR(void *p) {
      typedef ::StLorentzVector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StLorentzVector<float>

//______________________________________________________________________________
template <> void StLorentzVector<double>::Streamer(TBuffer &R__b)
{
   // Stream an object of class StLorentzVector<double>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StLorentzVector<double>::Class(),this);
   } else {
      R__b.WriteClassBuffer(StLorentzVector<double>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void StLorentzVectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class StLorentzVector<double>.
      typedef ::ROOTShadow::Shadow::StLorentzVectorlEdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::StLorentzVector<double>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mThreeVector", &sobj->mThreeVector);
      R__insp.InspectMember(sobj->mThreeVector, "mThreeVector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX4", &sobj->mX4);
   }

}

template <> void StLorentzVector<double>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::StLorentzVectorlEdoublegR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StLorentzVectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StLorentzVector<double> : new ::StLorentzVector<double>;
   }
   static void *newArray_StLorentzVectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StLorentzVector<double>[nElements] : new ::StLorentzVector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_StLorentzVectorlEdoublegR(void *p) {
      delete ((::StLorentzVector<double>*)p);
   }
   static void deleteArray_StLorentzVectorlEdoublegR(void *p) {
      delete [] ((::StLorentzVector<double>*)p);
   }
   static void destruct_StLorentzVectorlEdoublegR(void *p) {
      typedef ::StLorentzVector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StLorentzVector<double>

//______________________________________________________________________________
namespace ROOTDict {
   void StMatrixlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class StMatrix<float>.
      typedef ::ROOTShadow::Shadow::StMatrixlEfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<float>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mElement", &sobj->mElement);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRow", &sobj->mRow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCol", &sobj->mCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSize", &sobj->mSize);
   }

}

template <> void StMatrix<float>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::StMatrixlEfloatgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StMatrixlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StMatrix<float> : new ::StMatrix<float>;
   }
   static void *newArray_StMatrixlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StMatrix<float>[nElements] : new ::StMatrix<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_StMatrixlEfloatgR(void *p) {
      delete ((::StMatrix<float>*)p);
   }
   static void deleteArray_StMatrixlEfloatgR(void *p) {
      delete [] ((::StMatrix<float>*)p);
   }
   static void destruct_StMatrixlEfloatgR(void *p) {
      typedef ::StMatrix<float> current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StMatrixlEfloatgR(TBuffer &buf, void *obj) {
      ((::StMatrix<float>*)obj)->::StMatrix<float>::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StMatrix<float>

//______________________________________________________________________________
namespace ROOTDict {
   void StMatrixlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class StMatrix<double>.
      typedef ::ROOTShadow::Shadow::StMatrixlEdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::StMatrix<double>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mElement", &sobj->mElement);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRow", &sobj->mRow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCol", &sobj->mCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSize", &sobj->mSize);
   }

}

template <> void StMatrix<double>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::StMatrixlEdoublegR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StMatrixlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StMatrix<double> : new ::StMatrix<double>;
   }
   static void *newArray_StMatrixlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StMatrix<double>[nElements] : new ::StMatrix<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_StMatrixlEdoublegR(void *p) {
      delete ((::StMatrix<double>*)p);
   }
   static void deleteArray_StMatrixlEdoublegR(void *p) {
      delete [] ((::StMatrix<double>*)p);
   }
   static void destruct_StMatrixlEdoublegR(void *p) {
      typedef ::StMatrix<double> current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StMatrixlEdoublegR(TBuffer &buf, void *obj) {
      ((::StMatrix<double>*)obj)->::StMatrix<double>::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StMatrix<double>

//______________________________________________________________________________
void StHelix::Streamer(TBuffer &R__b)
{
   // Stream an object of class StHelix.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StHelix::Class(),this);
   } else {
      R__b.WriteClassBuffer(StHelix::Class(),this);
   }
}

//______________________________________________________________________________
void StHelix::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StHelix.
      TClass *R__cl = ::StHelix::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSingularity", &mSingularity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOrigin", &mOrigin);
      R__insp.InspectMember(mOrigin, "mOrigin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDipAngle", &mDipAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCurvature", &mCurvature);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhase", &mPhase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mH", &mH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCosDipAngle", &mCosDipAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSinDipAngle", &mSinDipAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCosPhase", &mCosPhase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSinPhase", &mSinPhase);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StHelix(void *p) {
      delete ((::StHelix*)p);
   }
   static void deleteArray_StHelix(void *p) {
      delete [] ((::StHelix*)p);
   }
   static void destruct_StHelix(void *p) {
      typedef ::StHelix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StHelix

//______________________________________________________________________________
void StPhysicalHelix::Streamer(TBuffer &R__b)
{
   // Stream an object of class StPhysicalHelix.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StPhysicalHelix::Class(),this);
   } else {
      R__b.WriteClassBuffer(StPhysicalHelix::Class(),this);
   }
}

//______________________________________________________________________________
void StPhysicalHelix::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StPhysicalHelix.
      TClass *R__cl = ::StPhysicalHelix::IsA();
      if (R__cl || R__insp.IsA()) { }
      StHelix::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StPhysicalHelix(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StPhysicalHelix : new ::StPhysicalHelix;
   }
   static void *newArray_StPhysicalHelix(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StPhysicalHelix[nElements] : new ::StPhysicalHelix[nElements];
   }
   // Wrapper around operator delete
   static void delete_StPhysicalHelix(void *p) {
      delete ((::StPhysicalHelix*)p);
   }
   static void deleteArray_StPhysicalHelix(void *p) {
      delete [] ((::StPhysicalHelix*)p);
   }
   static void destruct_StPhysicalHelix(void *p) {
      typedef ::StPhysicalHelix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StPhysicalHelix

//______________________________________________________________________________
void StHelixHelper::Streamer(TBuffer &R__b)
{
   // Stream an object of class StHelixHelper.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StHelixHelper::Class(),this);
   } else {
      R__b.WriteClassBuffer(StHelixHelper::Class(),this);
   }
}

//______________________________________________________________________________
void StHelixHelper::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StHelixHelper.
      TClass *R__cl = ::StHelixHelper::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHelx[2]", &fHelx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTHlx[2]", &fTHlx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StHelixHelper(void *p) {
      delete ((::StHelixHelper*)p);
   }
   static void deleteArray_StHelixHelper(void *p) {
      delete [] ((::StHelixHelper*)p);
   }
   static void destruct_StHelixHelper(void *p) {
      typedef ::StHelixHelper current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StHelixHelper

//______________________________________________________________________________
void StParticleDefinition::Streamer(TBuffer &R__b)
{
   // Stream an object of class StParticleDefinition.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StParticleDefinition::Class(),this);
   } else {
      R__b.WriteClassBuffer(StParticleDefinition::Class(),this);
   }
}

//______________________________________________________________________________
void StParticleDefinition::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StParticleDefinition.
      TClass *R__cl = ::StParticleDefinition::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mParticleName", (void*)&mParticleName);
      R__insp.InspectMember("string", (void*)&mParticleName, "mParticleName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGMass", &mPDGMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGWidth", &mPDGWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGCharge", &mPDGCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGiSpin", &mPDGiSpin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGSpin", &mPDGSpin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGiParity", &mPDGiParity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGiConjugation", &mPDGiConjugation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGiIsospin", &mPDGiIsospin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGiIsospin3", &mPDGiIsospin3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGIsospin", &mPDGIsospin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGIsospin3", &mPDGIsospin3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGiGParity", &mPDGiGParity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLeptonNumber", &mLeptonNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBaryonNumber", &mBaryonNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mParticleType", (void*)&mParticleType);
      R__insp.InspectMember("string", (void*)&mParticleType, "mParticleType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGEncoding", &mPDGEncoding);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAntiPDGEncoding", &mAntiPDGEncoding);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGStable", &mPDGStable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPDGLifeTime", &mPDGLifeTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mParticleTable", &mParticleTable);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StParticleDefinition(void *p) {
      delete ((::StParticleDefinition*)p);
   }
   static void deleteArray_StParticleDefinition(void *p) {
      delete [] ((::StParticleDefinition*)p);
   }
   static void destruct_StParticleDefinition(void *p) {
      typedef ::StParticleDefinition current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StParticleDefinition

//______________________________________________________________________________
void StParticleTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class StParticleTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StParticleTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(StParticleTable::Class(),this);
   }
}

//______________________________________________________________________________
void StParticleTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StParticleTable.
      TClass *R__cl = ::StParticleTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGeantPdgMap", (void*)&mGeantPdgMap);
      R__insp.InspectMember("StParticleTable::mGeantPdgMapType", (void*)&mGeantPdgMap, "mGeantPdgMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPdgMap", (void*)&mPdgMap);
      R__insp.InspectMember("StParticleTable::mPdgMapType", (void*)&mPdgMap, "mPdgMap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNameMap", (void*)&mNameMap);
      R__insp.InspectMember("StParticleTable::mNameMapType", (void*)&mNameMap, "mNameMap.", false);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_StParticleTable(void *p) {
      delete ((::StParticleTable*)p);
   }
   static void deleteArray_StParticleTable(void *p) {
      delete [] ((::StParticleTable*)p);
   }
   static void destruct_StParticleTable(void *p) {
      typedef ::StParticleTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StParticleTable

namespace ROOTDict {
   void maplEintcOStParticleDefinitionmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOStParticleDefinitionmUgR_Dictionary();
   static void *new_maplEintcOStParticleDefinitionmUgR(void *p = 0);
   static void *newArray_maplEintcOStParticleDefinitionmUgR(Long_t size, void *p);
   static void delete_maplEintcOStParticleDefinitionmUgR(void *p);
   static void deleteArray_maplEintcOStParticleDefinitionmUgR(void *p);
   static void destruct_maplEintcOStParticleDefinitionmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,StParticleDefinition*>*)
   {
      map<int,StParticleDefinition*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,StParticleDefinition*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,StParticleDefinition*>", -2, "prec_stl/map", 63,
                  typeid(map<int,StParticleDefinition*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOStParticleDefinitionmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,StParticleDefinition*>) );
      instance.SetNew(&new_maplEintcOStParticleDefinitionmUgR);
      instance.SetNewArray(&newArray_maplEintcOStParticleDefinitionmUgR);
      instance.SetDelete(&delete_maplEintcOStParticleDefinitionmUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOStParticleDefinitionmUgR);
      instance.SetDestructor(&destruct_maplEintcOStParticleDefinitionmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,StParticleDefinition*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,StParticleDefinition*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOStParticleDefinitionmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,StParticleDefinition*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOStParticleDefinitionmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,StParticleDefinition*> : new map<int,StParticleDefinition*>;
   }
   static void *newArray_maplEintcOStParticleDefinitionmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,StParticleDefinition*>[nElements] : new map<int,StParticleDefinition*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOStParticleDefinitionmUgR(void *p) {
      delete ((map<int,StParticleDefinition*>*)p);
   }
   static void deleteArray_maplEintcOStParticleDefinitionmUgR(void *p) {
      delete [] ((map<int,StParticleDefinition*>*)p);
   }
   static void destruct_maplEintcOStParticleDefinitionmUgR(void *p) {
      typedef map<int,StParticleDefinition*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,StParticleDefinition*>

namespace ROOTDict {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,int>

namespace ROOTDict {
   void maplEstringcOStParticleDefinitionmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOStParticleDefinitionmUgR_Dictionary();
   static void *new_maplEstringcOStParticleDefinitionmUgR(void *p = 0);
   static void *newArray_maplEstringcOStParticleDefinitionmUgR(Long_t size, void *p);
   static void delete_maplEstringcOStParticleDefinitionmUgR(void *p);
   static void deleteArray_maplEstringcOStParticleDefinitionmUgR(void *p);
   static void destruct_maplEstringcOStParticleDefinitionmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,StParticleDefinition*>*)
   {
      map<string,StParticleDefinition*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,StParticleDefinition*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,StParticleDefinition*>", -2, "prec_stl/map", 63,
                  typeid(map<string,StParticleDefinition*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOStParticleDefinitionmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,StParticleDefinition*>) );
      instance.SetNew(&new_maplEstringcOStParticleDefinitionmUgR);
      instance.SetNewArray(&newArray_maplEstringcOStParticleDefinitionmUgR);
      instance.SetDelete(&delete_maplEstringcOStParticleDefinitionmUgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOStParticleDefinitionmUgR);
      instance.SetDestructor(&destruct_maplEstringcOStParticleDefinitionmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,StParticleDefinition*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,StParticleDefinition*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOStParticleDefinitionmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,StParticleDefinition*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOStParticleDefinitionmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,StParticleDefinition*> : new map<string,StParticleDefinition*>;
   }
   static void *newArray_maplEstringcOStParticleDefinitionmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,StParticleDefinition*>[nElements] : new map<string,StParticleDefinition*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOStParticleDefinitionmUgR(void *p) {
      delete ((map<string,StParticleDefinition*>*)p);
   }
   static void deleteArray_maplEstringcOStParticleDefinitionmUgR(void *p) {
      delete [] ((map<string,StParticleDefinition*>*)p);
   }
   static void destruct_maplEstringcOStParticleDefinitionmUgR(void *p) {
      typedef map<string,StParticleDefinition*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,StParticleDefinition*>

/********************************************************
* .sl73_gcc485/obj/StRoot/StarClassLibrary/StarClassLibrary_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStarClassLibrary_Cint();

extern "C" void G__set_cpp_environmentStarClassLibrary_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StThreeVector.hh");
  G__add_compiledheader("StThreeVectorF.hh");
  G__add_compiledheader("StThreeVectorD.hh");
  G__add_compiledheader("StLorentzVector.hh");
  G__add_compiledheader("StLorentzVectorF.hh");
  G__add_compiledheader("StLorentzVectorD.hh");
  G__add_compiledheader("StMatrix.hh");
  G__add_compiledheader("StMatrixF.hh");
  G__add_compiledheader("StMatrixD.hh");
  G__add_compiledheader("StHelix.hh");
  G__add_compiledheader("StHelixD.hh");
  G__add_compiledheader("StPhysicalHelix.hh");
  G__add_compiledheader("StPhysicalHelixD.hh");
  G__add_compiledheader("BetheBloch.h");
  G__add_compiledheader("StHelixHelper.h");
  G__add_compiledheader("StParticleDefinition.hh");
  G__add_compiledheader("StParticleTable.hh");
  G__cpp_reset_tagtableStarClassLibrary_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStarClassLibrary_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StThreeVector<double> */
static int G__StarClassLibrary_Cint_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StThreeVector<double>[n];
     } else {
       p = new((void*) gvp) StThreeVector<double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StThreeVector<double>;
     } else {
       p = new((void*) gvp) StThreeVector<double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<double>(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) StThreeVector<double>(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<double>((TRootIOCtor*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StThreeVector<double>((TRootIOCtor*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<double>(*(StThreeVector<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StThreeVector<double>(*(StThreeVector<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<double>(*(StThreeVector<double>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StThreeVector<double>(*(StThreeVector<double>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<double>((float*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StThreeVector<double>((float*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<double>((double*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StThreeVector<double>((double*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>& obj = ((StThreeVector<double>*) G__getstructoffset())->operator=(*(StThreeVector<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>& obj = ((StThreeVector<double>*) G__getstructoffset())->operator=(*(StThreeVector<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->setX((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->setY((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->setZ((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->set((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->setPhi((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->setTheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->setMag((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->setMagnitude((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const StThreeVector<double>*) G__getstructoffset())->x();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const StThreeVector<double>*) G__getstructoffset())->y();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const StThreeVector<double>*) G__getstructoffset())->z();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const StThreeVector<double>*) G__getstructoffset())->xyz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((StThreeVector<double>*) G__getstructoffset())->xyz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->cosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->perp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->magnitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->mag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->pseudoRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((StThreeVector<double>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((StThreeVector<double>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->massHypothesis((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>* pobj;
         const StThreeVector<double> xobj = ((const StThreeVector<double>*) G__getstructoffset())->unit();
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>* pobj;
         const StThreeVector<double> xobj = ((const StThreeVector<double>*) G__getstructoffset())->orthogonal();
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->rotateX((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->rotateY((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->rotateZ((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = ((StThreeVector<double>*) G__getstructoffset())->operator-();
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = ((StThreeVector<double>*) G__getstructoffset())->operator+();
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>& obj = ((StThreeVector<double>*) G__getstructoffset())->operator*=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>& obj = ((StThreeVector<double>*) G__getstructoffset())->operator/=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>* pobj;
         const StThreeVector<double> xobj = ((const StThreeVector<double>*) G__getstructoffset())->pseudoProduct((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->angle(*(StThreeVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>* pobj;
         const StThreeVector<double> xobj = ((const StThreeVector<double>*) G__getstructoffset())->cross(*(StThreeVector<float>*) libp->para[0].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->dot(*(StThreeVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>* pobj;
         const StThreeVector<double> xobj = ((const StThreeVector<double>*) G__getstructoffset())->pseudoProduct(*(StThreeVector<float>*) libp->para[0].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->angle(*(StThreeVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StThreeVector<double>*) G__getstructoffset())->dot(*(StThreeVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>* pobj;
         const StThreeVector<double> xobj = ((const StThreeVector<double>*) G__getstructoffset())->cross(*(StThreeVector<double>*) libp->para[0].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>* pobj;
         const StThreeVector<double> xobj = ((const StThreeVector<double>*) G__getstructoffset())->pseudoProduct(*(StThreeVector<double>*) libp->para[0].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StThreeVector<double>*) G__getstructoffset())->operator==(*(StThreeVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StThreeVector<double>*) G__getstructoffset())->operator!=(*(StThreeVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>& obj = ((StThreeVector<double>*) G__getstructoffset())->operator+=(*(StThreeVector<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>& obj = ((StThreeVector<double>*) G__getstructoffset())->operator-=(*(StThreeVector<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StThreeVector<double>*) G__getstructoffset())->operator==(*(StThreeVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StThreeVector<double>*) G__getstructoffset())->operator!=(*(StThreeVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>& obj = ((StThreeVector<double>*) G__getstructoffset())->operator+=(*(StThreeVector<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>& obj = ((StThreeVector<double>*) G__getstructoffset())->operator-=(*(StThreeVector<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const StThreeVector<double>*) G__getstructoffset())->valid((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const StThreeVector<double>*) G__getstructoffset())->valid());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const StThreeVector<double>*) G__getstructoffset())->bad((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const StThreeVector<double>*) G__getstructoffset())->bad());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StThreeVector<double>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StThreeVector<double>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StThreeVector<double>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StThreeVector<double>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StThreeVector<double>*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<double>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StThreeVector<double>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StThreeVector<double>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StThreeVector<double>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_168_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StThreeVector<double>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StThreeVector<double> G__TStThreeVectorlEdoublegR;
static int G__StarClassLibrary_Cint_168_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StThreeVector<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StThreeVector<double>*) (soff+(sizeof(StThreeVector<double>)*i)))->~G__TStThreeVectorlEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StThreeVector<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StThreeVector<double>*) (soff))->~G__TStThreeVectorlEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StThreeVector<float> */
static int G__StarClassLibrary_Cint_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StThreeVector<float>[n];
     } else {
       p = new((void*) gvp) StThreeVector<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StThreeVector<float>;
     } else {
       p = new((void*) gvp) StThreeVector<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<float>(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) StThreeVector<float>(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<float>((TRootIOCtor*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StThreeVector<float>((TRootIOCtor*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<float>(*(StThreeVector<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StThreeVector<float>(*(StThreeVector<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<float>(*(StThreeVector<double>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StThreeVector<float>(*(StThreeVector<double>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<float>((float*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StThreeVector<float>((float*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StThreeVector<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StThreeVector<float>((double*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StThreeVector<float>((double*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>& obj = ((StThreeVector<float>*) G__getstructoffset())->operator=(*(StThreeVector<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>& obj = ((StThreeVector<float>*) G__getstructoffset())->operator=(*(StThreeVector<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->setX((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->setY((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->setZ((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->set((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->setPhi((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->setTheta((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->setMag((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->setMagnitude((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const StThreeVector<float>*) G__getstructoffset())->x();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const StThreeVector<float>*) G__getstructoffset())->y();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const StThreeVector<float>*) G__getstructoffset())->z();
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const StThreeVector<float>*) G__getstructoffset())->xyz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((StThreeVector<float>*) G__getstructoffset())->xyz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->cosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->perp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->magnitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->mag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->mag2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->pseudoRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((StThreeVector<float>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((StThreeVector<float>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->massHypothesis((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>* pobj;
         const StThreeVector<float> xobj = ((const StThreeVector<float>*) G__getstructoffset())->unit();
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>* pobj;
         const StThreeVector<float> xobj = ((const StThreeVector<float>*) G__getstructoffset())->orthogonal();
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->rotateX((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->rotateY((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->rotateZ((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = ((StThreeVector<float>*) G__getstructoffset())->operator-();
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = ((StThreeVector<float>*) G__getstructoffset())->operator+();
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>& obj = ((StThreeVector<float>*) G__getstructoffset())->operator*=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>& obj = ((StThreeVector<float>*) G__getstructoffset())->operator/=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>* pobj;
         const StThreeVector<float> xobj = ((const StThreeVector<float>*) G__getstructoffset())->pseudoProduct((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->angle(*(StThreeVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>* pobj;
         const StThreeVector<float> xobj = ((const StThreeVector<float>*) G__getstructoffset())->cross(*(StThreeVector<float>*) libp->para[0].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->dot(*(StThreeVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>* pobj;
         const StThreeVector<float> xobj = ((const StThreeVector<float>*) G__getstructoffset())->pseudoProduct(*(StThreeVector<float>*) libp->para[0].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->angle(*(StThreeVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StThreeVector<float>*) G__getstructoffset())->dot(*(StThreeVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>* pobj;
         const StThreeVector<float> xobj = ((const StThreeVector<float>*) G__getstructoffset())->cross(*(StThreeVector<double>*) libp->para[0].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>* pobj;
         const StThreeVector<float> xobj = ((const StThreeVector<float>*) G__getstructoffset())->pseudoProduct(*(StThreeVector<double>*) libp->para[0].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StThreeVector<float>*) G__getstructoffset())->operator==(*(StThreeVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StThreeVector<float>*) G__getstructoffset())->operator!=(*(StThreeVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>& obj = ((StThreeVector<float>*) G__getstructoffset())->operator+=(*(StThreeVector<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>& obj = ((StThreeVector<float>*) G__getstructoffset())->operator-=(*(StThreeVector<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StThreeVector<float>*) G__getstructoffset())->operator==(*(StThreeVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StThreeVector<float>*) G__getstructoffset())->operator!=(*(StThreeVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>& obj = ((StThreeVector<float>*) G__getstructoffset())->operator+=(*(StThreeVector<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>& obj = ((StThreeVector<float>*) G__getstructoffset())->operator-=(*(StThreeVector<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const StThreeVector<float>*) G__getstructoffset())->valid((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const StThreeVector<float>*) G__getstructoffset())->valid());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const StThreeVector<float>*) G__getstructoffset())->bad((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const StThreeVector<float>*) G__getstructoffset())->bad());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StThreeVector<float>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StThreeVector<float>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StThreeVector<float>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StThreeVector<float>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StThreeVector<float>*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StThreeVector<float>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StThreeVector<float>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StThreeVector<float>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StThreeVector<float>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_169_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StThreeVector<float>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StThreeVector<float> G__TStThreeVectorlEfloatgR;
static int G__StarClassLibrary_Cint_169_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StThreeVector<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StThreeVector<float>*) (soff+(sizeof(StThreeVector<float>)*i)))->~G__TStThreeVectorlEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StThreeVector<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StThreeVector<float>*) (soff))->~G__TStThreeVectorlEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StLorentzVector<float> */
static int G__StarClassLibrary_Cint_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StLorentzVector<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StLorentzVector<float>(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) StLorentzVector<float>(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StLorentzVector<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StLorentzVector<float>[n];
     } else {
       p = new((void*) gvp) StLorentzVector<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StLorentzVector<float>;
     } else {
       p = new((void*) gvp) StLorentzVector<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->e());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((StLorentzVector<float>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((StLorentzVector<float>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<float>& obj = ((const StLorentzVector<float>*) G__getstructoffset())->vect();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->setX((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->setY((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->setZ((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->setPx((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->setPy((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->setPz((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->setE((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->setT((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->setVect(*(StThreeVector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->setVect(*(StThreeVector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->perp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->pseudoRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->cosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->plus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->minus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->m2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->mt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->mt2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StLorentzVector<float>*) G__getstructoffset())->rapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<float>* pobj;
         const StLorentzVector<float> xobj = ((const StLorentzVector<float>*) G__getstructoffset())->boost(*(StLorentzVector<float>*) libp->para[0].ref);
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<float>* pobj;
         const StLorentzVector<float> xobj = ((const StLorentzVector<float>*) G__getstructoffset())->boost(*(StLorentzVector<double>*) libp->para[0].ref);
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<float>* pobj;
         StLorentzVector<float> xobj = ((StLorentzVector<float>*) G__getstructoffset())->operator-();
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<float>* pobj;
         StLorentzVector<float> xobj = ((StLorentzVector<float>*) G__getstructoffset())->operator+();
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<float>& obj = ((StLorentzVector<float>*) G__getstructoffset())->operator*=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<float>& obj = ((StLorentzVector<float>*) G__getstructoffset())->operator/=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StLorentzVector<float>*) G__getstructoffset())->operator==(*(StLorentzVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StLorentzVector<float>*) G__getstructoffset())->operator!=(*(StLorentzVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StLorentzVector<float>*) G__getstructoffset())->operator==(*(StLorentzVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StLorentzVector<float>*) G__getstructoffset())->operator!=(*(StLorentzVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<float>& obj = ((StLorentzVector<float>*) G__getstructoffset())->operator+=(*(StLorentzVector<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<float>& obj = ((StLorentzVector<float>*) G__getstructoffset())->operator-=(*(StLorentzVector<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<float>& obj = ((StLorentzVector<float>*) G__getstructoffset())->operator+=(*(StLorentzVector<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<float>& obj = ((StLorentzVector<float>*) G__getstructoffset())->operator-=(*(StLorentzVector<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StLorentzVector<float>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StLorentzVector<float>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StLorentzVector<float>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StLorentzVector<float>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StLorentzVector<float>*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<float>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StLorentzVector<float>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StLorentzVector<float>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StLorentzVector<float>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StLorentzVector<float>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_170_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StLorentzVector<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StLorentzVector<float>(*(StLorentzVector<double>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StLorentzVector<float>(*(StLorentzVector<double>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StarClassLibrary_Cint_170_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StLorentzVector<float>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StLorentzVector<float>(*(StLorentzVector<float>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StLorentzVector<float> G__TStLorentzVectorlEfloatgR;
static int G__StarClassLibrary_Cint_170_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StLorentzVector<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StLorentzVector<float>*) (soff+(sizeof(StLorentzVector<float>)*i)))->~G__TStLorentzVectorlEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StLorentzVector<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StLorentzVector<float>*) (soff))->~G__TStLorentzVectorlEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StarClassLibrary_Cint_170_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StLorentzVector<float>* dest = (StLorentzVector<float>*) G__getstructoffset();
   *dest = *(StLorentzVector<float>*) libp->para[0].ref;
   const StLorentzVector<float>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StLorentzVector<double> */
static int G__StarClassLibrary_Cint_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StLorentzVector<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StLorentzVector<double>(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) StLorentzVector<double>(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StLorentzVector<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StLorentzVector<double>[n];
     } else {
       p = new((void*) gvp) StLorentzVector<double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StLorentzVector<double>;
     } else {
       p = new((void*) gvp) StLorentzVector<double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->t());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->e());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((StLorentzVector<double>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((StLorentzVector<double>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>& obj = ((const StLorentzVector<double>*) G__getstructoffset())->vect();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->setX((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->setY((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->setZ((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->setPx((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->setPy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->setPz((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->setE((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->setT((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->setVect(*(StThreeVector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->setVect(*(StThreeVector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->perp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->perp2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->pseudoRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->cosTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->plus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->minus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->m2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->mt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->mt2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StLorentzVector<double>*) G__getstructoffset())->rapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<double>* pobj;
         const StLorentzVector<double> xobj = ((const StLorentzVector<double>*) G__getstructoffset())->boost(*(StLorentzVector<float>*) libp->para[0].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<double>* pobj;
         const StLorentzVector<double> xobj = ((const StLorentzVector<double>*) G__getstructoffset())->boost(*(StLorentzVector<double>*) libp->para[0].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = ((StLorentzVector<double>*) G__getstructoffset())->operator-();
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = ((StLorentzVector<double>*) G__getstructoffset())->operator+();
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<double>& obj = ((StLorentzVector<double>*) G__getstructoffset())->operator*=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<double>& obj = ((StLorentzVector<double>*) G__getstructoffset())->operator/=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StLorentzVector<double>*) G__getstructoffset())->operator==(*(StLorentzVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StLorentzVector<double>*) G__getstructoffset())->operator!=(*(StLorentzVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StLorentzVector<double>*) G__getstructoffset())->operator==(*(StLorentzVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StLorentzVector<double>*) G__getstructoffset())->operator!=(*(StLorentzVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<double>& obj = ((StLorentzVector<double>*) G__getstructoffset())->operator+=(*(StLorentzVector<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<double>& obj = ((StLorentzVector<double>*) G__getstructoffset())->operator-=(*(StLorentzVector<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<double>& obj = ((StLorentzVector<double>*) G__getstructoffset())->operator+=(*(StLorentzVector<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StLorentzVector<double>& obj = ((StLorentzVector<double>*) G__getstructoffset())->operator-=(*(StLorentzVector<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StLorentzVector<double>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StLorentzVector<double>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StLorentzVector<double>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StLorentzVector<double>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StLorentzVector<double>*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StLorentzVector<double>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StLorentzVector<double>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StLorentzVector<double>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StLorentzVector<double>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StLorentzVector<double>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_171_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StLorentzVector<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StLorentzVector<double>(*(StLorentzVector<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StLorentzVector<double>(*(StLorentzVector<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StarClassLibrary_Cint_171_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StLorentzVector<double>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StLorentzVector<double>(*(StLorentzVector<double>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StLorentzVector<double> G__TStLorentzVectorlEdoublegR;
static int G__StarClassLibrary_Cint_171_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StLorentzVector<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StLorentzVector<double>*) (soff+(sizeof(StLorentzVector<double>)*i)))->~G__TStLorentzVectorlEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StLorentzVector<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StLorentzVector<double>*) (soff))->~G__TStLorentzVectorlEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StarClassLibrary_Cint_171_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StLorentzVector<double>* dest = (StLorentzVector<double>*) G__getstructoffset();
   *dest = *(StLorentzVector<double>*) libp->para[0].ref;
   const StLorentzVector<double>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMatrix<double> */
static int G__StarClassLibrary_Cint_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMatrix<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMatrix<double>[n];
     } else {
       p = new((void*) gvp) StMatrix<double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMatrix<double>;
     } else {
       p = new((void*) gvp) StMatrix<double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMatrix<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMatrix<double>(
(size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) StMatrix<double>(
(size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMatrix<double>((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StMatrix<double>((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMatrix<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMatrix<double>(*(StMatrix<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StMatrix<double>(*(StMatrix<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMatrix<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMatrix<double>(*(StMatrix<double>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StMatrix<double>(*(StMatrix<double>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>& obj = ((StMatrix<double>*) G__getstructoffset())->operator=(*(StMatrix<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>& obj = ((StMatrix<double>*) G__getstructoffset())->operator=(*(StMatrix<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<double>*) G__getstructoffset())->numRow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<double>*) G__getstructoffset())->numCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<double>*) G__getstructoffset())->numSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<double>*) G__getstructoffset())->num_row());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<double>*) G__getstructoffset())->num_col());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<double>*) G__getstructoffset())->num_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const StMatrix<double>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((StMatrix<double>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>::StMatrixRow* pobj;
         StMatrix<double>::StMatrixRow xobj = ((StMatrix<double>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0]));
         pobj = new StMatrix<double>::StMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>::StMatrixRowConst* pobj;
         const StMatrix<double>::StMatrixRowConst xobj = ((const StMatrix<double>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0]));
         pobj = new StMatrix<double>::StMatrixRowConst(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>& obj = ((StMatrix<double>*) G__getstructoffset())->operator*=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>& obj = ((StMatrix<double>*) G__getstructoffset())->operator/=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>& obj = ((StMatrix<double>*) G__getstructoffset())->operator+=(*(StMatrix<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>& obj = ((StMatrix<double>*) G__getstructoffset())->operator+=(*(StMatrix<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>& obj = ((StMatrix<double>*) G__getstructoffset())->operator-=(*(StMatrix<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>& obj = ((StMatrix<double>*) G__getstructoffset())->operator-=(*(StMatrix<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>* pobj;
         StMatrix<double> xobj = ((StMatrix<double>*) G__getstructoffset())->dot(*(StMatrix<float>*) libp->para[0].ref);
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>* pobj;
         StMatrix<double> xobj = ((StMatrix<double>*) G__getstructoffset())->dot(*(StMatrix<double>*) libp->para[0].ref);
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>* pobj;
         const StMatrix<double> xobj = ((const StMatrix<double>*) G__getstructoffset())->operator+();
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>* pobj;
         const StMatrix<double> xobj = ((const StMatrix<double>*) G__getstructoffset())->operator-();
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMatrix<double>*) G__getstructoffset())->operator==(*(StMatrix<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMatrix<double>*) G__getstructoffset())->operator!=(*(StMatrix<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>* pobj;
         const StMatrix<double> xobj = ((const StMatrix<double>*) G__getstructoffset())->apply((double (*)(double, size_t, size_t)) G__int(libp->para[0]));
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>* pobj;
         const StMatrix<double> xobj = ((const StMatrix<double>*) G__getstructoffset())->T();
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>* pobj;
         const StMatrix<double> xobj = ((const StMatrix<double>*) G__getstructoffset())->transpose();
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>* pobj;
         const StMatrix<double> xobj = ((const StMatrix<double>*) G__getstructoffset())->sub((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (size_t) G__int(libp->para[3]));
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMatrix<double>*) G__getstructoffset())->sub((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, *(StMatrix<double>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<double>* pobj;
         const StMatrix<double> xobj = ((const StMatrix<double>*) G__getstructoffset())->inverse(*(size_t*) G__UIntref(&libp->para[0]));
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMatrix<double>*) G__getstructoffset())->invert(*(size_t*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StMatrix<double>*) G__getstructoffset())->determinant());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMatrix<double>::swap(*(unsigned int*) G__UIntref(&libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMatrix<double>::swap(libp->para[0].ref ? *(double**) libp->para[0].ref : *(double**) (void*) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(double**) libp->para[1].ref : *(double**) (void*) (&G__Mlong(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMatrix<double>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMatrix<double>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMatrix<double>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMatrix<double>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMatrix<double>*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMatrix<double>*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMatrix<double>*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMatrix<double>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMatrix<double>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMatrix<double>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMatrix<double>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_185_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMatrix<double>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMatrix<double> G__TStMatrixlEdoublegR;
static int G__StarClassLibrary_Cint_185_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMatrix<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMatrix<double>*) (soff+(sizeof(StMatrix<double>)*i)))->~G__TStMatrixlEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMatrix<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMatrix<double>*) (soff))->~G__TStMatrixlEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StMatrix<float> */
static int G__StarClassLibrary_Cint_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMatrix<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMatrix<float>[n];
     } else {
       p = new((void*) gvp) StMatrix<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMatrix<float>;
     } else {
       p = new((void*) gvp) StMatrix<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMatrix<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMatrix<float>(
(size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) StMatrix<float>(
(size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StMatrix<float>((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StMatrix<float>((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMatrix<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMatrix<float>(*(StMatrix<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StMatrix<float>(*(StMatrix<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StMatrix<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StMatrix<float>(*(StMatrix<double>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StMatrix<float>(*(StMatrix<double>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>& obj = ((StMatrix<float>*) G__getstructoffset())->operator=(*(StMatrix<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>& obj = ((StMatrix<float>*) G__getstructoffset())->operator=(*(StMatrix<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<float>*) G__getstructoffset())->numRow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<float>*) G__getstructoffset())->numCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<float>*) G__getstructoffset())->numSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<float>*) G__getstructoffset())->num_row());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<float>*) G__getstructoffset())->num_col());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StMatrix<float>*) G__getstructoffset())->num_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const StMatrix<float>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((StMatrix<float>*) G__getstructoffset())->operator()((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<float>::StMatrixRow* pobj;
         StMatrix<float>::StMatrixRow xobj = ((StMatrix<float>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0]));
         pobj = new StMatrix<float>::StMatrixRow(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>::StMatrixRowConst* pobj;
         const StMatrix<float>::StMatrixRowConst xobj = ((const StMatrix<float>*) G__getstructoffset())->operator[]((size_t) G__int(libp->para[0]));
         pobj = new StMatrix<float>::StMatrixRowConst(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>& obj = ((StMatrix<float>*) G__getstructoffset())->operator*=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>& obj = ((StMatrix<float>*) G__getstructoffset())->operator/=((double) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>& obj = ((StMatrix<float>*) G__getstructoffset())->operator+=(*(StMatrix<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>& obj = ((StMatrix<float>*) G__getstructoffset())->operator+=(*(StMatrix<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>& obj = ((StMatrix<float>*) G__getstructoffset())->operator-=(*(StMatrix<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>& obj = ((StMatrix<float>*) G__getstructoffset())->operator-=(*(StMatrix<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<float>* pobj;
         StMatrix<float> xobj = ((StMatrix<float>*) G__getstructoffset())->dot(*(StMatrix<float>*) libp->para[0].ref);
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<float>* pobj;
         StMatrix<float> xobj = ((StMatrix<float>*) G__getstructoffset())->dot(*(StMatrix<double>*) libp->para[0].ref);
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>* pobj;
         const StMatrix<float> xobj = ((const StMatrix<float>*) G__getstructoffset())->operator+();
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>* pobj;
         const StMatrix<float> xobj = ((const StMatrix<float>*) G__getstructoffset())->operator-();
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMatrix<float>*) G__getstructoffset())->operator==(*(StMatrix<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StMatrix<float>*) G__getstructoffset())->operator!=(*(StMatrix<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>* pobj;
         const StMatrix<float> xobj = ((const StMatrix<float>*) G__getstructoffset())->apply((float (*)(float, size_t, size_t)) G__int(libp->para[0]));
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>* pobj;
         const StMatrix<float> xobj = ((const StMatrix<float>*) G__getstructoffset())->T();
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>* pobj;
         const StMatrix<float> xobj = ((const StMatrix<float>*) G__getstructoffset())->transpose();
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>* pobj;
         const StMatrix<float> xobj = ((const StMatrix<float>*) G__getstructoffset())->sub((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (size_t) G__int(libp->para[3]));
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMatrix<float>*) G__getstructoffset())->sub((size_t) G__int(libp->para[0]), (size_t) G__int(libp->para[1])
, *(StMatrix<float>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StMatrix<float>* pobj;
         const StMatrix<float> xobj = ((const StMatrix<float>*) G__getstructoffset())->inverse(*(size_t*) G__UIntref(&libp->para[0]));
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMatrix<float>*) G__getstructoffset())->invert(*(size_t*) G__UIntref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StMatrix<float>*) G__getstructoffset())->determinant());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMatrix<float>::swap(*(unsigned int*) G__UIntref(&libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMatrix<float>::swap(libp->para[0].ref ? *(float**) libp->para[0].ref : *(float**) (void*) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(float**) libp->para[1].ref : *(float**) (void*) (&G__Mlong(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StMatrix<float>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMatrix<float>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StMatrix<float>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StMatrix<float>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StMatrix<float>*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMatrix<float>*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMatrix<float>*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StMatrix<float>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMatrix<float>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMatrix<float>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StMatrix<float>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_186_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StMatrix<float>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StMatrix<float> G__TStMatrixlEfloatgR;
static int G__StarClassLibrary_Cint_186_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StMatrix<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StMatrix<float>*) (soff+(sizeof(StMatrix<float>)*i)))->~G__TStMatrixlEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StMatrix<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StMatrix<float>*) (soff))->~G__TStMatrixlEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StHelix */
static int G__StarClassLibrary_Cint_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StHelix* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StHelix(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(StThreeVector<double>*) libp->para[3].ref
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) StHelix(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(StThreeVector<double>*) libp->para[3].ref
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StHelix(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(StThreeVector<double>*) libp->para[3].ref);
     } else {
       p = new((void*) gvp) StHelix(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(StThreeVector<double>*) libp->para[3].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->dipAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->curvature());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->phase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->xcenter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->ycenter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StHelix*) G__getstructoffset())->h());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>& obj = ((const StHelix*) G__getstructoffset())->origin();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StHelix*) G__getstructoffset())->setParameters((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(StThreeVector<double>*) libp->para[3].ref
, (int) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->x((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->y((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->z((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>* pobj;
         const StThreeVector<double> xobj = ((const StHelix*) G__getstructoffset())->at((double) G__double(libp->para[0]));
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->cx((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->cy((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->cz((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->cz());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>* pobj;
         const StThreeVector<double> xobj = ((const StHelix*) G__getstructoffset())->cat((double) G__double(libp->para[0]));
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->period());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const StHelix*) G__getstructoffset())->pathLength((double) G__double(libp->para[0]));
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<double,double>* pobj;
         pair<double,double> xobj = ((StHelix*) G__getstructoffset())->pathLength((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->pathLength(*(StThreeVector<double>*) libp->para[0].ref, (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->pathLength(*(StThreeVector<double>*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->pathLength(*(StThreeVector<double>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->pathLength((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const StHelix*) G__getstructoffset())->pathLengths(*(StHelix*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const StHelix*) G__getstructoffset())->pathLengths(*(StHelix*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const StHelix*) G__getstructoffset())->pathLengths(*(StHelix*) libp->para[0].ref);
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->distance(*(StThreeVector<double>*) libp->para[0].ref, (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const StHelix*) G__getstructoffset())->distance(*(StThreeVector<double>*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((const StHelix*) G__getstructoffset())->valid((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((const StHelix*) G__getstructoffset())->valid());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const StHelix*) G__getstructoffset())->bad((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const StHelix*) G__getstructoffset())->bad());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StHelix*) G__getstructoffset())->moveOrigin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StHelix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StHelix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StHelix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StHelix::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StHelix*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StHelix*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StHelix*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StHelix*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StHelix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StHelix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StHelix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_192_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StHelix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StarClassLibrary_Cint_192_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StHelix* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StHelix(*(StHelix*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StHelix G__TStHelix;
static int G__StarClassLibrary_Cint_192_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StHelix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StHelix*) (soff+(sizeof(StHelix)*i)))->~G__TStHelix();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StHelix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StHelix*) (soff))->~G__TStHelix();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StarClassLibrary_Cint_192_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StHelix* dest = (StHelix*) G__getstructoffset();
   *dest = *(StHelix*) libp->para[0].ref;
   const StHelix& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StPhysicalHelix */
static int G__StarClassLibrary_Cint_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPhysicalHelix* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StPhysicalHelix(
*(StThreeVector<double>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) StPhysicalHelix(
*(StThreeVector<double>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPhysicalHelix* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPhysicalHelix(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(StThreeVector<double>*) libp->para[3].ref
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) StPhysicalHelix(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(StThreeVector<double>*) libp->para[3].ref
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPhysicalHelix(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(StThreeVector<double>*) libp->para[3].ref);
     } else {
       p = new((void*) gvp) StPhysicalHelix(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(StThreeVector<double>*) libp->para[3].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPhysicalHelix* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPhysicalHelix[n];
     } else {
       p = new((void*) gvp) StPhysicalHelix[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPhysicalHelix;
     } else {
       p = new((void*) gvp) StPhysicalHelix;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>* pobj;
         const StThreeVector<double> xobj = ((const StPhysicalHelix*) G__getstructoffset())->momentum((double) G__double(libp->para[0]));
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVector<double>* pobj;
         const StThreeVector<double> xobj = ((const StPhysicalHelix*) G__getstructoffset())->momentumAt((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StPhysicalHelix*) G__getstructoffset())->charge((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StPhysicalHelix*) G__getstructoffset())->curvatureSignedDistance((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StPhysicalHelix*) G__getstructoffset())->geometricSignedDistance((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StPhysicalHelix*) G__getstructoffset())->curvatureSignedDistance(*(StThreeVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StPhysicalHelix*) G__getstructoffset())->geometricSignedDistance(*(StThreeVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StPhysicalHelix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPhysicalHelix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StPhysicalHelix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StPhysicalHelix::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPhysicalHelix*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPhysicalHelix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StPhysicalHelix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPhysicalHelix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_194_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StPhysicalHelix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StarClassLibrary_Cint_194_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StPhysicalHelix* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StPhysicalHelix(*(StPhysicalHelix*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StPhysicalHelix G__TStPhysicalHelix;
static int G__StarClassLibrary_Cint_194_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StPhysicalHelix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StPhysicalHelix*) (soff+(sizeof(StPhysicalHelix)*i)))->~G__TStPhysicalHelix();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StPhysicalHelix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StPhysicalHelix*) (soff))->~G__TStPhysicalHelix();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StarClassLibrary_Cint_194_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPhysicalHelix* dest = (StPhysicalHelix*) G__getstructoffset();
   *dest = *(StPhysicalHelix*) libp->para[0].ref;
   const StPhysicalHelix& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BetheBloch */
static int G__StarClassLibrary_Cint_429_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BetheBloch* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BetheBloch[n];
     } else {
       p = new((void*) gvp) BetheBloch[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BetheBloch;
     } else {
       p = new((void*) gvp) BetheBloch;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_BetheBloch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_429_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BetheBloch*) G__getstructoffset())->operator()((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_429_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) BetheBloch::Sirrf((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) BetheBloch::Sirrf((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) BetheBloch::Sirrf((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_429_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) BetheBloch::Girrf((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) BetheBloch::Girrf((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) BetheBloch::Girrf((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StarClassLibrary_Cint_429_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BetheBloch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BetheBloch(*(BetheBloch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_BetheBloch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BetheBloch G__TBetheBloch;
static int G__StarClassLibrary_Cint_429_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BetheBloch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BetheBloch*) (soff+(sizeof(BetheBloch)*i)))->~G__TBetheBloch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BetheBloch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BetheBloch*) (soff))->~G__TBetheBloch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StarClassLibrary_Cint_429_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BetheBloch* dest = (BetheBloch*) G__getstructoffset();
   *dest = *(BetheBloch*) libp->para[0].ref;
   const BetheBloch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StHelixHelper */
static int G__StarClassLibrary_Cint_431_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StHelixHelper::MyHelix((THelixTrack*) G__int(libp->para[0]), (StHelixD*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StHelixHelper* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StHelixHelper(
*(StPhysicalHelix*) libp->para[0].ref, *(StPhysicalHelix*) libp->para[1].ref
, (double) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) StHelixHelper(
*(StPhysicalHelix*) libp->para[0].ref, *(StPhysicalHelix*) libp->para[1].ref
, (double) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelper));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StHelixHelper* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StHelixHelper(*(StHelixHelper*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StHelixHelper(*(StHelixHelper*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelper));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StHelixHelper*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const StHelixHelper*) G__getstructoffset())->GetHelix((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const StHelixHelper*) G__getstructoffset())->GetHelix());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const StHelixHelper*) G__getstructoffset())->GetTHelix((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const StHelixHelper*) G__getstructoffset())->GetTHelix());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const StHelixHelper*) G__getstructoffset())->GetPoints(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StHelixHelper::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StHelixHelper::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StHelixHelper::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StHelixHelper::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StHelixHelper*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StHelixHelper::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StHelixHelper::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StHelixHelper::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_431_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StHelixHelper::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StHelixHelper G__TStHelixHelper;
static int G__StarClassLibrary_Cint_431_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StHelixHelper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StHelixHelper*) (soff+(sizeof(StHelixHelper)*i)))->~G__TStHelixHelper();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StHelixHelper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StHelixHelper*) (soff))->~G__TStHelixHelper();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StarClassLibrary_Cint_431_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StHelixHelper* dest = (StHelixHelper*) G__getstructoffset();
   *dest = *(StHelixHelper*) libp->para[0].ref;
   const StHelixHelper& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StParticleTable */
static int G__StarClassLibrary_Cint_433_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StParticleTable::particleTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StParticleTable::instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StParticleTable*) G__getstructoffset())->entries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StParticleTable*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StParticleTable*) G__getstructoffset())->contains(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StParticleTable*) G__getstructoffset())->contains((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StParticleTable*) G__getstructoffset())->containsGeantId((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StParticleTable*) G__getstructoffset())->findParticle(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StParticleTable*) G__getstructoffset())->findParticle((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StParticleTable*) G__getstructoffset())->findParticleByGeantId((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StParticleTable*) G__getstructoffset())->insert((StParticleDefinition*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StParticleTable*) G__getstructoffset())->erase((StParticleDefinition*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StParticleTable*) G__getstructoffset())->dump(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((StParticleTable*) G__getstructoffset())->dump();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StVecPtrParticleDefinition* pobj;
         const StVecPtrParticleDefinition xobj = ((const StParticleTable*) G__getstructoffset())->allParticles();
         pobj = new StVecPtrParticleDefinition(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StParticleTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StParticleTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StParticleTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StParticleTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StParticleTable*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StParticleTable*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StParticleTable*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StParticleTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StParticleTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StParticleTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StParticleTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_433_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StParticleTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StParticleTable G__TStParticleTable;
static int G__StarClassLibrary_Cint_433_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StParticleTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StParticleTable*) (soff+(sizeof(StParticleTable)*i)))->~G__TStParticleTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StParticleTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StParticleTable*) (soff))->~G__TStParticleTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StarClassLibrary_Cint_433_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StParticleTable* dest = (StParticleTable*) G__getstructoffset();
   *dest = *(StParticleTable*) libp->para[0].ref;
   const StParticleTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StParticleDefinition */
static int G__StarClassLibrary_Cint_434_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StParticleDefinition* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 16
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StParticleDefinition(
*(string*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, *(string*) libp->para[10].ref, (int) G__int(libp->para[11])
, (int) G__int(libp->para[12]), (int) G__int(libp->para[13])
, (bool) G__int(libp->para[14]), (double) G__double(libp->para[15]));
   } else {
     p = new((void*) gvp) StParticleDefinition(
*(string*) libp->para[0].ref, (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (int) G__int(libp->para[8]), (int) G__int(libp->para[9])
, *(string*) libp->para[10].ref, (int) G__int(libp->para[11])
, (int) G__int(libp->para[12]), (int) G__int(libp->para[13])
, (bool) G__int(libp->para[14]), (double) G__double(libp->para[15]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleDefinition));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->operator==(*(StParticleDefinition*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->operator!=(*(StParticleDefinition*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const StParticleDefinition*) G__getstructoffset())->name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StParticleDefinition*) G__getstructoffset())->mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StParticleDefinition*) G__getstructoffset())->width());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StParticleDefinition*) G__getstructoffset())->charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StParticleDefinition*) G__getstructoffset())->spin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->iSpin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->iParity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->iConjugation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StParticleDefinition*) G__getstructoffset())->isospin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StParticleDefinition*) G__getstructoffset())->isospin3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->iIsospin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->iIsospin3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->iGParity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const StParticleDefinition*) G__getstructoffset())->type();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->leptonNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->baryonNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->pdgEncoding());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StParticleDefinition*) G__getstructoffset())->antiPdgEncoding());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StParticleDefinition*) G__getstructoffset())->stable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StParticleDefinition*) G__getstructoffset())->lifeTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StParticleDefinition*) G__getstructoffset())->particleTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StParticleDefinition::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StParticleDefinition::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StParticleDefinition::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StParticleDefinition::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StParticleDefinition*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StParticleDefinition*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StParticleDefinition*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StParticleDefinition*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StParticleDefinition::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StParticleDefinition::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StParticleDefinition::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint_434_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StParticleDefinition::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StParticleDefinition G__TStParticleDefinition;
static int G__StarClassLibrary_Cint_434_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StParticleDefinition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StParticleDefinition*) (soff+(sizeof(StParticleDefinition)*i)))->~G__TStParticleDefinition();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StParticleDefinition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StParticleDefinition*) (soff))->~G__TStParticleDefinition();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__StarClassLibrary_Cint__0_2180(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) abs(*(StThreeVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2181(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) abs(*(StThreeVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2182(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) operator*(*(StThreeVector<double>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2183(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) operator*(*(StThreeVector<double>*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2184(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) operator*(*(StThreeVector<float>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2185(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) operator*(*(StThreeVector<float>*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2186(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator<<(*(ostream*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2187(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator<<(*(ostream*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2193(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>* pobj;
         StMatrix<double> xobj = operator*(*(StMatrix<double>*) libp->para[0].ref, *(StMatrix<double>*) libp->para[1].ref);
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2194(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>* pobj;
         StMatrix<double> xobj = operator*(*(StMatrix<double>*) libp->para[0].ref, *(StMatrix<float>*) libp->para[1].ref);
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2195(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>* pobj;
         StMatrix<double> xobj = operator*(*(StMatrix<float>*) libp->para[0].ref, *(StMatrix<double>*) libp->para[1].ref);
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2196(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<float>* pobj;
         StMatrix<float> xobj = operator*(*(StMatrix<float>*) libp->para[0].ref, *(StMatrix<float>*) libp->para[1].ref);
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2205(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator*(*(StMatrix<double>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2206(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator*(*(StThreeVector<double>*) libp->para[0].ref, *(StMatrix<double>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2207(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator*(*(StMatrix<double>*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2208(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator*(*(StThreeVector<float>*) libp->para[0].ref, *(StMatrix<double>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2209(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator*(*(StMatrix<float>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2210(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator*(*(StThreeVector<double>*) libp->para[0].ref, *(StMatrix<float>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2211(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = operator*(*(StMatrix<float>*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2212(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = operator*(*(StThreeVector<float>*) libp->para[0].ref, *(StMatrix<float>*) libp->para[1].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2213(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator*(*(StMatrix<double>*) libp->para[0].ref, *(StLorentzVector<double>*) libp->para[1].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2214(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator*(*(StLorentzVector<double>*) libp->para[0].ref, *(StMatrix<double>*) libp->para[1].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2215(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator*(*(StMatrix<double>*) libp->para[0].ref, *(StLorentzVector<float>*) libp->para[1].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2216(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator*(*(StLorentzVector<float>*) libp->para[0].ref, *(StMatrix<double>*) libp->para[1].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2217(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator*(*(StMatrix<float>*) libp->para[0].ref, *(StLorentzVector<double>*) libp->para[1].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2218(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator*(*(StLorentzVector<double>*) libp->para[0].ref, *(StMatrix<float>*) libp->para[1].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2219(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<float>* pobj;
         StLorentzVector<float> xobj = operator*(*(StMatrix<float>*) libp->para[0].ref, *(StLorentzVector<float>*) libp->para[1].ref);
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2220(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<float>* pobj;
         StLorentzVector<float> xobj = operator*(*(StLorentzVector<float>*) libp->para[0].ref, *(StMatrix<float>*) libp->para[1].ref);
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2221(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>* pobj;
         StMatrix<double> xobj = operator+(*(StMatrix<double>*) libp->para[0].ref, *(StMatrix<double>*) libp->para[1].ref);
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2222(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>* pobj;
         StMatrix<double> xobj = operator+(*(StMatrix<float>*) libp->para[0].ref, *(StMatrix<double>*) libp->para[1].ref);
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2223(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>* pobj;
         StMatrix<double> xobj = operator+(*(StMatrix<double>*) libp->para[0].ref, *(StMatrix<float>*) libp->para[1].ref);
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2224(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<float>* pobj;
         StMatrix<float> xobj = operator+(*(StMatrix<float>*) libp->para[0].ref, *(StMatrix<float>*) libp->para[1].ref);
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2225(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>* pobj;
         StMatrix<double> xobj = operator-(*(StMatrix<double>*) libp->para[0].ref, *(StMatrix<double>*) libp->para[1].ref);
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2226(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>* pobj;
         StMatrix<double> xobj = operator-(*(StMatrix<float>*) libp->para[0].ref, *(StMatrix<double>*) libp->para[1].ref);
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2227(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<double>* pobj;
         StMatrix<double> xobj = operator-(*(StMatrix<double>*) libp->para[0].ref, *(StMatrix<float>*) libp->para[1].ref);
         pobj = new StMatrix<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2228(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StMatrix<float>* pobj;
         StMatrix<float> xobj = operator-(*(StMatrix<float>*) libp->para[0].ref, *(StMatrix<float>*) libp->para[1].ref);
         pobj = new StMatrix<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2229(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator<<(*(ostream*) libp->para[0].ref, *(StMatrix<double>*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2230(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator<<(*(ostream*) libp->para[0].ref, *(StMatrix<float>*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2231(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) norm_infinity(*(StMatrix<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2232(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) normInfinity(*(StMatrix<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2233(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) norm1(*(StMatrix<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2234(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) norm_infinity(*(StMatrix<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2235(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) normInfinity(*(StMatrix<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2236(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) norm1(*(StMatrix<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2237(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) operator==(*(StHelix*) libp->para[0].ref, *(StHelix*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2238(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) operator!=(*(StHelix*) libp->para[0].ref, *(StHelix*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2239(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator<<(*(ostream*) libp->para[0].ref, *(StHelix*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2714(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = cross_product(*(StThreeVector<float>*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2715(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = cross_product(*(StThreeVector<float>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2716(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = operator+(*(StThreeVector<float>*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2717(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = operator+(*(StThreeVector<float>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2718(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = operator-(*(StThreeVector<float>*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2719(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = operator-(*(StThreeVector<float>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2720(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = operator*(*(StThreeVector<float>*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2721(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = operator*((double) G__double(libp->para[0]), *(StThreeVector<float>*) libp->para[1].ref);
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2722(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<float>* pobj;
         StThreeVector<float> xobj = operator/(*(StThreeVector<float>*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new StThreeVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2723(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const istream& obj = operator>>(*(istream*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2724(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const istream& obj = operator>>(*(istream*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2725(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = cross_product(*(StThreeVector<double>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2726(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = cross_product(*(StThreeVector<double>*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2727(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator+(*(StThreeVector<double>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2728(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator+(*(StThreeVector<double>*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2729(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator-(*(StThreeVector<double>*) libp->para[0].ref, *(StThreeVector<float>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2730(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator-(*(StThreeVector<double>*) libp->para[0].ref, *(StThreeVector<double>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2731(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator*(*(StThreeVector<double>*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2732(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator*((double) G__double(libp->para[0]), *(StThreeVector<double>*) libp->para[1].ref);
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2733(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVector<double>* pobj;
         StThreeVector<double> xobj = operator/(*(StThreeVector<double>*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new StThreeVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2734(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator<<(*(ostream*) libp->para[0].ref, *(StLorentzVector<float>*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2735(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<float>* pobj;
         StLorentzVector<float> xobj = operator+(*(StLorentzVector<float>*) libp->para[0].ref, *(StLorentzVector<float>*) libp->para[1].ref);
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2736(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<float>* pobj;
         StLorentzVector<float> xobj = operator-(*(StLorentzVector<float>*) libp->para[0].ref, *(StLorentzVector<float>*) libp->para[1].ref);
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2737(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) operator*(*(StLorentzVector<float>*) libp->para[0].ref, *(StLorentzVector<float>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2738(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<float>* pobj;
         StLorentzVector<float> xobj = operator*(*(StLorentzVector<float>*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2739(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<float>* pobj;
         StLorentzVector<float> xobj = operator*((double) G__double(libp->para[0]), *(StLorentzVector<float>*) libp->para[1].ref);
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2740(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<float>* pobj;
         StLorentzVector<float> xobj = operator/(*(StLorentzVector<float>*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2741(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) abs(*(StLorentzVector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2742(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator+(*(StLorentzVector<double>*) libp->para[0].ref, *(StLorentzVector<float>*) libp->para[1].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2743(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<float>* pobj;
         StLorentzVector<float> xobj = operator+(*(StLorentzVector<float>*) libp->para[0].ref, *(StLorentzVector<double>*) libp->para[1].ref);
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2744(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator+(*(StLorentzVector<double>*) libp->para[0].ref, *(StLorentzVector<double>*) libp->para[1].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2745(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator-(*(StLorentzVector<double>*) libp->para[0].ref, *(StLorentzVector<float>*) libp->para[1].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2746(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<float>* pobj;
         StLorentzVector<float> xobj = operator-(*(StLorentzVector<float>*) libp->para[0].ref, *(StLorentzVector<double>*) libp->para[1].ref);
         pobj = new StLorentzVector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2747(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator-(*(StLorentzVector<double>*) libp->para[0].ref, *(StLorentzVector<double>*) libp->para[1].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2748(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = operator<<(*(ostream*) libp->para[0].ref, *(StLorentzVector<double>*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2749(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) operator*(*(StLorentzVector<double>*) libp->para[0].ref, *(StLorentzVector<float>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2750(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) operator*(*(StLorentzVector<float>*) libp->para[0].ref, *(StLorentzVector<double>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2751(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) operator*(*(StLorentzVector<double>*) libp->para[0].ref, *(StLorentzVector<double>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2752(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator*(*(StLorentzVector<double>*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2753(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator*((double) G__double(libp->para[0]), *(StLorentzVector<double>*) libp->para[1].ref);
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2754(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVector<double>* pobj;
         StLorentzVector<double> xobj = operator/(*(StLorentzVector<double>*) libp->para[0].ref, (double) G__double(libp->para[1]));
         pobj = new StLorentzVector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StarClassLibrary_Cint__0_2755(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) abs(*(StLorentzVector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* StThreeVector<double> */

/* StThreeVector<float> */

/* StLorentzVector<float> */

/* StLorentzVector<double> */

/* StMatrix<double> */

/* StMatrix<float> */

/* StHelix */

/* StPhysicalHelix */

/* BetheBloch */

/* StHelixHelper */

/* StParticleTable */

/* StParticleDefinition */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStarClassLibrary_Cint {
 public:
  G__Sizep2memfuncStarClassLibrary_Cint(): p(&G__Sizep2memfuncStarClassLibrary_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStarClassLibrary_Cint::*p)();
};

size_t G__get_sizep2memfuncStarClassLibrary_Cint()
{
  G__Sizep2memfuncStarClassLibrary_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStarClassLibrary_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix))) {
     StPhysicalHelix *G__Lderived;
     G__Lderived=(StPhysicalHelix*)0x1000;
     {
       StHelix *G__Lpbase=(StHelix*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix),G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelix),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelper))) {
     StHelixHelper *G__Lderived;
     G__Lderived=(StHelixHelper*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelper),G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStarClassLibrary_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StThreeVectorF",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StThreeVectorD",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StLorentzVectorF",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StLorentzVectorD",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("float (*)(float, size_t, size_t)",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("double (*)(double, size_t, size_t)",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StMatrixF",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StMatrixD",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StHelixD",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelix),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pairD",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_pairlEdoublecOdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StPhysicalHelixD",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StParticleDefinition*>",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_vectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_vectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_vectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StVecPtrParticleDefinition",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_vectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mGeantPdgMapType",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,StParticleDefinition*>",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_maplEintcOStParticleDefinitionmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOStParticleDefinitionmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,StParticleDefinition*,less<int> >",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_maplEintcOStParticleDefinitionmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOStParticleDefinitionmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mPdgMapType",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_maplEintcOStParticleDefinitionmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOStParticleDefinitionmUgRsPgRsPgR),0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,StParticleDefinition*>",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_maplEstringcOStParticleDefinitionmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOStParticleDefinitionmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,StParticleDefinition*,less<string> >",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_maplEstringcOStParticleDefinitionmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOStParticleDefinitionmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mNameMapType",117,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_maplEstringcOStParticleDefinitionmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOStParticleDefinitionmUgRsPgRsPgR),0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StThreeVector<double> */
static void G__setup_memvarStThreeVectorlEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR));
   { StThreeVector<double> *p; p=(StThreeVector<double>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mX1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mX2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mX3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StThreeVector<float> */
static void G__setup_memvarStThreeVectorlEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR));
   { StThreeVector<float> *p; p=(StThreeVector<float>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"mX1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"mX2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"mX3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StLorentzVector<float> */
static void G__setup_memvarStLorentzVectorlEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR));
   { StLorentzVector<float> *p; p=(StLorentzVector<float>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR),-1,-1,2,"mThreeVector=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"mX4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StLorentzVector<double> */
static void G__setup_memvarStLorentzVectorlEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR));
   { StLorentzVector<double> *p; p=(StLorentzVector<double>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR),-1,-1,2,"mThreeVector=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mX4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMatrix<double> */
static void G__setup_memvarStMatrixlEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR));
   { StMatrix<double> *p; p=(StMatrix<double>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,2,"mElement=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"mRow=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"mCol=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"mSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StMatrix<float> */
static void G__setup_memvarStMatrixlEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR));
   { StMatrix<float> *p; p=(StMatrix<float>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,-1,-1,2,"mElement=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"mRow=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"mCol=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"mSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StHelix */
static void G__setup_memvarStHelix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelix));
   { StHelix *p; p=(StHelix*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&StHelix::NoSolution),100,0,1,-1,-1,-2,1,"NoSolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"mSingularity=",0,"true for straight line case (B=0)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR),-1,-1,2,"mOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mDipAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mCurvature=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mPhase=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"mH=",0,"-sign(q*B);");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mCosDipAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mSinDipAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mCosPhase=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mSinPhase=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StPhysicalHelix */
static void G__setup_memvarStPhysicalHelix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix));
   { StPhysicalHelix *p; p=(StPhysicalHelix*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BetheBloch */
static void G__setup_memvarBetheBloch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_BetheBloch));
   { BetheBloch *p; p=(BetheBloch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_maplEdoublecOdoublecOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOdoublegRsPgRsPgR),G__defined_typename("map<double,double>"),-1,4,"mMap=",0,"!");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&BetheBloch::noWarn),105,0,0,-1,-1,-2,1,"noWarn=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StHelixHelper */
static void G__setup_memvarStHelixHelper(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelper));
   { StHelixHelper *p; p=(StHelixHelper*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelpercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kInnerHelix=%lldLL",(long long)StHelixHelper::kInnerHelix).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelpercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kOutterHelix=%lldLL",(long long)StHelixHelper::kOutterHelix).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix),G__defined_typename("StPhysicalHelixD"),-1,4,"fHelx[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_THelixTrack),-1,-1,4,"fTHlx[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StParticleTable */
static void G__setup_memvarStParticleTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable));
   { StParticleTable *p; p=(StParticleTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable),-1,-2,4,"mParticleTable=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("mGeantPdgMapType"),-1,4,"mGeantPdgMap=",0,"Geant3 IDs only");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_maplEintcOStParticleDefinitionmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOStParticleDefinitionmUgRsPgRsPgR),G__defined_typename("mPdgMapType"),-1,4,"mPdgMap=",0,"PDG IDs only");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_maplEstringcOStParticleDefinitionmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOStParticleDefinitionmUgRsPgRsPgR),G__defined_typename("mNameMapType"),-1,4,"mNameMap=",0,"complete list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StParticleDefinition */
static void G__setup_memvarStParticleDefinition(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleDefinition));
   { StParticleDefinition *p; p=(StParticleDefinition*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_string),-1,-1,4,"mParticleName=",0,"name of the particle.");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mPDGMass=",0,"mass of the particle, in units of equivalent energy.");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mPDGWidth=",0,"decay width of the particle, usually the width of a");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mPDGCharge=",0,"charge of the particle.(in units of Coulomb)");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPDGiSpin=",0,"total spin of the particle, also often denoted as");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mPDGSpin=",0,"total spin of the particle, in units of 1.");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPDGiParity=",0,"parity quantum number, in units of 1. If the parity");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPDGiConjugation=",0,"charge conjugation quantum number in units of 1.");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPDGiIsospin=",0,"isospin and its 3rd-component in units of 1/2.");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPDGiIsospin3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mPDGIsospin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mPDGIsospin3=",0,"isospin quantum number in units of 1.");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPDGiGParity=",0,"value of the G-parity quantum number.");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mLeptonNumber=",0,"lepton quantum number.");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mBaryonNumber=",0,"baryon quantum number.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_string),-1,-1,4,"mParticleType=",0,"general textual type description of the particle.");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPDGEncoding=",0,"Particle Data Group integer identifier of this particle");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mAntiPDGEncoding=",0,"Particle Data Group integer identifier of the anti-particle");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mPDGStable=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mPDGLifeTime=",0,"related to the decay width of the particle. The mean");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable),-1,-1,4,"mParticleTable=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStarClassLibrary_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStThreeVectorlEdoublegR(void) {
   /* StThreeVector<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR));
   G__memfunc_setup("StThreeVector<double>",2087,G__StarClassLibrary_Cint_168_0_1, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<double>",2087,G__StarClassLibrary_Cint_168_0_2, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 3, 1, 1, 0, 
"d - - 0 - X d - - 0 - Y "
"d - - 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<double>",2087,G__StarClassLibrary_Cint_168_0_3, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 0, "U 'TRootIOCtor' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<double>",2087,G__StarClassLibrary_Cint_168_0_4, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<double>",2087,G__StarClassLibrary_Cint_168_0_5, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<double>",2087,G__StarClassLibrary_Cint_168_0_6, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 0, "F - - 10 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<double>",2087,G__StarClassLibrary_Cint_168_0_7, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 0, "D - - 10 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StarClassLibrary_Cint_168_0_8, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StarClassLibrary_Cint_168_0_9, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setX",420,G__StarClassLibrary_Cint_168_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - X", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setY",421,G__StarClassLibrary_Cint_168_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__StarClassLibrary_Cint_168_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__StarClassLibrary_Cint_168_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - X d - - 0 - Y "
"d - - 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhi",621,G__StarClassLibrary_Cint_168_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTheta",834,G__StarClassLibrary_Cint_168_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMag",609,G__StarClassLibrary_Cint_168_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Mag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMagnitude",1258,G__StarClassLibrary_Cint_168_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__StarClassLibrary_Cint_168_0_18, 100, -1, -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__StarClassLibrary_Cint_168_0_19, 100, -1, -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__StarClassLibrary_Cint_168_0_20, 100, -1, -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xyz",363,G__StarClassLibrary_Cint_168_0_21, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xyz",363,G__StarClassLibrary_Cint_168_0_22, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__StarClassLibrary_Cint_168_0_23, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosTheta",827,G__StarClassLibrary_Cint_168_0_24, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__StarClassLibrary_Cint_168_0_25, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp",439,G__StarClassLibrary_Cint_168_0_26, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp2",489,G__StarClassLibrary_Cint_168_0_27, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("magnitude",958,G__StarClassLibrary_Cint_168_0_28, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag",309,G__StarClassLibrary_Cint_168_0_29, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag2",359,G__StarClassLibrary_Cint_168_0_30, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoRapidity",1494,G__StarClassLibrary_Cint_168_0_31, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_168_0_32, 100, -1, -1, 0, 1, 1, 1, 8, "h - 'size_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_168_0_33, 100, -1, -1, 0, 1, 1, 1, 8, "h - 'size_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_168_0_34, 100, -1, -1, 1, 1, 1, 1, 0, "h - 'size_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_168_0_35, 100, -1, -1, 1, 1, 1, 1, 0, "h - 'size_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("massHypothesis",1508,G__StarClassLibrary_Cint_168_0_36, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unit",448,G__StarClassLibrary_Cint_168_0_37, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("orthogonal",1085,G__StarClassLibrary_Cint_168_0_38, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateX",743,G__StarClassLibrary_Cint_168_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateY",744,G__StarClassLibrary_Cint_168_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateZ",745,G__StarClassLibrary_Cint_168_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__StarClassLibrary_Cint_168_0_42, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__StarClassLibrary_Cint_168_0_43, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__StarClassLibrary_Cint_168_0_44, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__StarClassLibrary_Cint_168_0_45, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "d - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoProduct",1393,G__StarClassLibrary_Cint_168_0_46, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 3, 1, 1, 8, 
"d - - 0 - X d - - 0 - Y "
"d - - 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angle",519,G__StarClassLibrary_Cint_168_0_47, 100, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cross",554,G__StarClassLibrary_Cint_168_0_48, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dot",327,G__StarClassLibrary_Cint_168_0_49, 100, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoProduct",1393,G__StarClassLibrary_Cint_168_0_50, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angle",519,G__StarClassLibrary_Cint_168_0_51, 100, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dot",327,G__StarClassLibrary_Cint_168_0_52, 100, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cross",554,G__StarClassLibrary_Cint_168_0_53, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoProduct",1393,G__StarClassLibrary_Cint_168_0_54, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__StarClassLibrary_Cint_168_0_55, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__StarClassLibrary_Cint_168_0_56, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_168_0_57, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_168_0_58, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__StarClassLibrary_Cint_168_0_59, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__StarClassLibrary_Cint_168_0_60, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_168_0_61, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_168_0_62, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("valid",528,G__StarClassLibrary_Cint_168_0_63, 105, -1, -1, 0, 1, 1, 1, 8, "d - - 0 '1.e+5' world", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bad",295,G__StarClassLibrary_Cint_168_0_64, 105, -1, -1, 0, 1, 1, 1, 8, "d - - 0 '1.e+5' world", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StarClassLibrary_Cint_168_0_65, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StThreeVector<double>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StarClassLibrary_Cint_168_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StThreeVector<double>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StarClassLibrary_Cint_168_0_67, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StThreeVector<double>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StarClassLibrary_Cint_168_0_68, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StThreeVector<double>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StarClassLibrary_Cint_168_0_69, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StarClassLibrary_Cint_168_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StarClassLibrary_Cint_168_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StarClassLibrary_Cint_168_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StarClassLibrary_Cint_168_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StThreeVector<double>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StarClassLibrary_Cint_168_0_74, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StThreeVector<double>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StarClassLibrary_Cint_168_0_75, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StThreeVector<double>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StarClassLibrary_Cint_168_0_76, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StThreeVector<double>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StThreeVector<double>", 2213, G__StarClassLibrary_Cint_168_0_77, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStThreeVectorlEfloatgR(void) {
   /* StThreeVector<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR));
   G__memfunc_setup("StThreeVector<float>",1986,G__StarClassLibrary_Cint_169_0_1, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<float>",1986,G__StarClassLibrary_Cint_169_0_2, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 3, 1, 1, 0, 
"f - - 0 - X f - - 0 - Y "
"f - - 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<float>",1986,G__StarClassLibrary_Cint_169_0_3, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 1, 1, 1, 0, "U 'TRootIOCtor' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<float>",1986,G__StarClassLibrary_Cint_169_0_4, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<float>",1986,G__StarClassLibrary_Cint_169_0_5, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<float>",1986,G__StarClassLibrary_Cint_169_0_6, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 1, 1, 1, 0, "F - - 10 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StThreeVector<float>",1986,G__StarClassLibrary_Cint_169_0_7, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 1, 1, 1, 0, "D - - 10 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StarClassLibrary_Cint_169_0_8, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StarClassLibrary_Cint_169_0_9, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setX",420,G__StarClassLibrary_Cint_169_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - X", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setY",421,G__StarClassLibrary_Cint_169_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__StarClassLibrary_Cint_169_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__StarClassLibrary_Cint_169_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - X f - - 0 - Y "
"f - - 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhi",621,G__StarClassLibrary_Cint_169_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTheta",834,G__StarClassLibrary_Cint_169_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMag",609,G__StarClassLibrary_Cint_169_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Mag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMagnitude",1258,G__StarClassLibrary_Cint_169_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__StarClassLibrary_Cint_169_0_18, 102, -1, -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__StarClassLibrary_Cint_169_0_19, 102, -1, -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__StarClassLibrary_Cint_169_0_20, 102, -1, -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xyz",363,G__StarClassLibrary_Cint_169_0_21, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xyz",363,G__StarClassLibrary_Cint_169_0_22, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__StarClassLibrary_Cint_169_0_23, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosTheta",827,G__StarClassLibrary_Cint_169_0_24, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__StarClassLibrary_Cint_169_0_25, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp",439,G__StarClassLibrary_Cint_169_0_26, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp2",489,G__StarClassLibrary_Cint_169_0_27, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("magnitude",958,G__StarClassLibrary_Cint_169_0_28, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag",309,G__StarClassLibrary_Cint_169_0_29, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mag2",359,G__StarClassLibrary_Cint_169_0_30, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoRapidity",1494,G__StarClassLibrary_Cint_169_0_31, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_169_0_32, 102, -1, -1, 0, 1, 1, 1, 8, "h - 'size_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_169_0_33, 102, -1, -1, 0, 1, 1, 1, 8, "h - 'size_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_169_0_34, 102, -1, -1, 1, 1, 1, 1, 0, "h - 'size_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_169_0_35, 102, -1, -1, 1, 1, 1, 1, 0, "h - 'size_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("massHypothesis",1508,G__StarClassLibrary_Cint_169_0_36, 102, -1, -1, 0, 1, 1, 1, 8, "f - - 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unit",448,G__StarClassLibrary_Cint_169_0_37, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("orthogonal",1085,G__StarClassLibrary_Cint_169_0_38, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateX",743,G__StarClassLibrary_Cint_169_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateY",744,G__StarClassLibrary_Cint_169_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rotateZ",745,G__StarClassLibrary_Cint_169_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__StarClassLibrary_Cint_169_0_42, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__StarClassLibrary_Cint_169_0_43, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__StarClassLibrary_Cint_169_0_44, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__StarClassLibrary_Cint_169_0_45, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "d - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoProduct",1393,G__StarClassLibrary_Cint_169_0_46, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 3, 1, 1, 8, 
"d - - 0 - X d - - 0 - Y "
"d - - 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angle",519,G__StarClassLibrary_Cint_169_0_47, 102, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cross",554,G__StarClassLibrary_Cint_169_0_48, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dot",327,G__StarClassLibrary_Cint_169_0_49, 102, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoProduct",1393,G__StarClassLibrary_Cint_169_0_50, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angle",519,G__StarClassLibrary_Cint_169_0_51, 102, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dot",327,G__StarClassLibrary_Cint_169_0_52, 102, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cross",554,G__StarClassLibrary_Cint_169_0_53, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoProduct",1393,G__StarClassLibrary_Cint_169_0_54, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__StarClassLibrary_Cint_169_0_55, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__StarClassLibrary_Cint_169_0_56, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_169_0_57, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_169_0_58, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<float>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__StarClassLibrary_Cint_169_0_59, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__StarClassLibrary_Cint_169_0_60, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_169_0_61, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_169_0_62, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("valid",528,G__StarClassLibrary_Cint_169_0_63, 105, -1, -1, 0, 1, 1, 1, 8, "d - - 0 '1.e+5' world", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bad",295,G__StarClassLibrary_Cint_169_0_64, 105, -1, -1, 0, 1, 1, 1, 8, "d - - 0 '1.e+5' world", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StarClassLibrary_Cint_169_0_65, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StThreeVector<float>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StarClassLibrary_Cint_169_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StThreeVector<float>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StarClassLibrary_Cint_169_0_67, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StThreeVector<float>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StarClassLibrary_Cint_169_0_68, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StThreeVector<float>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StarClassLibrary_Cint_169_0_69, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StarClassLibrary_Cint_169_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StarClassLibrary_Cint_169_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StarClassLibrary_Cint_169_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StarClassLibrary_Cint_169_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StThreeVector<float>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StarClassLibrary_Cint_169_0_74, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StThreeVector<float>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StarClassLibrary_Cint_169_0_75, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StThreeVector<float>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StarClassLibrary_Cint_169_0_76, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StThreeVector<float>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StThreeVector<float>", 2112, G__StarClassLibrary_Cint_169_0_77, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStLorentzVectorlEfloatgR(void) {
   /* StLorentzVector<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR));
   G__memfunc_setup("StLorentzVector<float>",2232,G__StarClassLibrary_Cint_170_0_1, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 4, 1, 1, 0, 
"f - - 0 - - f - - 0 - - "
"f - - 0 - - f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StLorentzVector<float>",2232,G__StarClassLibrary_Cint_170_0_2, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__StarClassLibrary_Cint_170_0_3, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__StarClassLibrary_Cint_170_0_4, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__StarClassLibrary_Cint_170_0_5, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("t",116,G__StarClassLibrary_Cint_170_0_6, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__StarClassLibrary_Cint_170_0_7, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__StarClassLibrary_Cint_170_0_8, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__StarClassLibrary_Cint_170_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__StarClassLibrary_Cint_170_0_10, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_170_0_11, 102, -1, -1, 0, 1, 1, 1, 8, "h - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_170_0_12, 102, -1, -1, 0, 1, 1, 1, 8, "h - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_170_0_13, 102, -1, -1, 1, 1, 1, 1, 0, "h - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_170_0_14, 102, -1, -1, 1, 1, 1, 1, 0, "h - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vect",434,G__StarClassLibrary_Cint_170_0_15, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setX",420,G__StarClassLibrary_Cint_170_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setY",421,G__StarClassLibrary_Cint_170_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__StarClassLibrary_Cint_170_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPx",532,G__StarClassLibrary_Cint_170_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPy",533,G__StarClassLibrary_Cint_170_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPz",534,G__StarClassLibrary_Cint_170_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setE",401,G__StarClassLibrary_Cint_170_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setT",416,G__StarClassLibrary_Cint_170_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVect",734,G__StarClassLibrary_Cint_170_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StThreeVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVect",734,G__StarClassLibrary_Cint_170_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp",439,G__StarClassLibrary_Cint_170_0_26, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp2",489,G__StarClassLibrary_Cint_170_0_27, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoRapidity",1494,G__StarClassLibrary_Cint_170_0_28, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__StarClassLibrary_Cint_170_0_29, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__StarClassLibrary_Cint_170_0_30, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosTheta",827,G__StarClassLibrary_Cint_170_0_31, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("plus",452,G__StarClassLibrary_Cint_170_0_32, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("minus",556,G__StarClassLibrary_Cint_170_0_33, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__StarClassLibrary_Cint_170_0_34, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m2",159,G__StarClassLibrary_Cint_170_0_35, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mt",225,G__StarClassLibrary_Cint_170_0_36, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mt2",275,G__StarClassLibrary_Cint_170_0_37, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rapidity",870,G__StarClassLibrary_Cint_170_0_38, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boost",551,G__StarClassLibrary_Cint_170_0_39, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boost",551,G__StarClassLibrary_Cint_170_0_40, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__StarClassLibrary_Cint_170_0_41, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__StarClassLibrary_Cint_170_0_42, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__StarClassLibrary_Cint_170_0_43, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__StarClassLibrary_Cint_170_0_44, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__StarClassLibrary_Cint_170_0_45, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__StarClassLibrary_Cint_170_0_46, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__StarClassLibrary_Cint_170_0_47, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__StarClassLibrary_Cint_170_0_48, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_170_0_49, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StLorentzVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_170_0_50, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StLorentzVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_170_0_51, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StLorentzVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_170_0_52, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StLorentzVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StarClassLibrary_Cint_170_0_53, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StLorentzVector<float>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StarClassLibrary_Cint_170_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StLorentzVector<float>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StarClassLibrary_Cint_170_0_55, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StLorentzVector<float>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StarClassLibrary_Cint_170_0_56, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StLorentzVector<float>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StarClassLibrary_Cint_170_0_57, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StarClassLibrary_Cint_170_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StarClassLibrary_Cint_170_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StarClassLibrary_Cint_170_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StarClassLibrary_Cint_170_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StLorentzVector<float>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StarClassLibrary_Cint_170_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StLorentzVector<float>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StarClassLibrary_Cint_170_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StLorentzVector<float>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StarClassLibrary_Cint_170_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StLorentzVector<float>::DeclFileLine) ), 0);
   G__memfunc_setup("StLorentzVector<float>",2232,G__StarClassLibrary_Cint_170_0_65, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'StLorentzVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StLorentzVector<float>", 2232, G__StarClassLibrary_Cint_170_0_66, (int) ('i'), 
G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'StLorentzVector<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StLorentzVector<float>", 2358, G__StarClassLibrary_Cint_170_0_67, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StarClassLibrary_Cint_170_0_68, (int) ('u'), G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StLorentzVector<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStLorentzVectorlEdoublegR(void) {
   /* StLorentzVector<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR));
   G__memfunc_setup("StLorentzVector<double>",2333,G__StarClassLibrary_Cint_171_0_1, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 4, 1, 1, 0, 
"d - - 0 - - d - - 0 - - "
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StLorentzVector<double>",2333,G__StarClassLibrary_Cint_171_0_2, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__StarClassLibrary_Cint_171_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__StarClassLibrary_Cint_171_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__StarClassLibrary_Cint_171_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("t",116,G__StarClassLibrary_Cint_171_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__StarClassLibrary_Cint_171_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__StarClassLibrary_Cint_171_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__StarClassLibrary_Cint_171_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__StarClassLibrary_Cint_171_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_171_0_11, 100, -1, -1, 0, 1, 1, 1, 8, "h - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_171_0_12, 100, -1, -1, 0, 1, 1, 1, 8, "h - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_171_0_13, 100, -1, -1, 1, 1, 1, 1, 0, "h - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_171_0_14, 100, -1, -1, 1, 1, 1, 1, 0, "h - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vect",434,G__StarClassLibrary_Cint_171_0_15, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setX",420,G__StarClassLibrary_Cint_171_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setY",421,G__StarClassLibrary_Cint_171_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__StarClassLibrary_Cint_171_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPx",532,G__StarClassLibrary_Cint_171_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPy",533,G__StarClassLibrary_Cint_171_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPz",534,G__StarClassLibrary_Cint_171_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setE",401,G__StarClassLibrary_Cint_171_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setT",416,G__StarClassLibrary_Cint_171_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVect",734,G__StarClassLibrary_Cint_171_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StThreeVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVect",734,G__StarClassLibrary_Cint_171_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp",439,G__StarClassLibrary_Cint_171_0_26, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perp2",489,G__StarClassLibrary_Cint_171_0_27, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pseudoRapidity",1494,G__StarClassLibrary_Cint_171_0_28, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__StarClassLibrary_Cint_171_0_29, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__StarClassLibrary_Cint_171_0_30, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosTheta",827,G__StarClassLibrary_Cint_171_0_31, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("plus",452,G__StarClassLibrary_Cint_171_0_32, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("minus",556,G__StarClassLibrary_Cint_171_0_33, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__StarClassLibrary_Cint_171_0_34, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m2",159,G__StarClassLibrary_Cint_171_0_35, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mt",225,G__StarClassLibrary_Cint_171_0_36, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mt2",275,G__StarClassLibrary_Cint_171_0_37, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rapidity",870,G__StarClassLibrary_Cint_171_0_38, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boost",551,G__StarClassLibrary_Cint_171_0_39, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("boost",551,G__StarClassLibrary_Cint_171_0_40, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__StarClassLibrary_Cint_171_0_41, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__StarClassLibrary_Cint_171_0_42, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__StarClassLibrary_Cint_171_0_43, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__StarClassLibrary_Cint_171_0_44, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__StarClassLibrary_Cint_171_0_45, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__StarClassLibrary_Cint_171_0_46, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__StarClassLibrary_Cint_171_0_47, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__StarClassLibrary_Cint_171_0_48, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StLorentzVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_171_0_49, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StLorentzVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_171_0_50, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StLorentzVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_171_0_51, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StLorentzVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_171_0_52, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StLorentzVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StarClassLibrary_Cint_171_0_53, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StLorentzVector<double>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StarClassLibrary_Cint_171_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StLorentzVector<double>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StarClassLibrary_Cint_171_0_55, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StLorentzVector<double>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StarClassLibrary_Cint_171_0_56, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StLorentzVector<double>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StarClassLibrary_Cint_171_0_57, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StarClassLibrary_Cint_171_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StarClassLibrary_Cint_171_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StarClassLibrary_Cint_171_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StarClassLibrary_Cint_171_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StLorentzVector<double>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StarClassLibrary_Cint_171_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StLorentzVector<double>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StarClassLibrary_Cint_171_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StLorentzVector<double>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StarClassLibrary_Cint_171_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StLorentzVector<double>::DeclFileLine) ), 0);
   G__memfunc_setup("StLorentzVector<double>",2333,G__StarClassLibrary_Cint_171_0_65, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'StLorentzVector<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("StLorentzVector<double>", 2333, G__StarClassLibrary_Cint_171_0_66, (int) ('i'), 
G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'StLorentzVector<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StLorentzVector<double>", 2459, G__StarClassLibrary_Cint_171_0_67, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StarClassLibrary_Cint_171_0_68, (int) ('u'), G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StLorentzVector<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMatrixlEdoublegR(void) {
   /* StMatrix<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR));
   G__memfunc_setup("StMatrix<double>",1585,G__StarClassLibrary_Cint_185_0_1, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMatrix<double>",1585,G__StarClassLibrary_Cint_185_0_2, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 3, 1, 1, 0, 
"h - 'size_t' 0 - p h - 'size_t' 0 - q "
"h - 'size_t' 0 '0' init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMatrix<double>",1585,G__StarClassLibrary_Cint_185_0_3, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMatrix<double>",1585,G__StarClassLibrary_Cint_185_0_4, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StarClassLibrary_Cint_185_0_5, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StarClassLibrary_Cint_185_0_6, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numRow",648,G__StarClassLibrary_Cint_185_0_7, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numCol",622,G__StarClassLibrary_Cint_185_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numSize",747,G__StarClassLibrary_Cint_185_0_9, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("num_row",775,G__StarClassLibrary_Cint_185_0_10, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("num_col",749,G__StarClassLibrary_Cint_185_0_11, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("num_size",874,G__StarClassLibrary_Cint_185_0_12, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_185_0_13, 100, -1, -1, 1, 2, 1, 1, 9, 
"h - 'size_t' 0 - row h - 'size_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_185_0_14, 100, -1, -1, 1, 2, 1, 1, 0, 
"h - 'size_t' 0 - row h - 'size_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_185_0_15, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegRcLcLStMatrixRow), -1, 0, 1, 1, 1, 0, "h - 'size_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_185_0_16, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegRcLcLStMatrixRowConst), -1, 0, 1, 1, 1, 9, "h - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__StarClassLibrary_Cint_185_0_17, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 1, 1, 1, 1, 0, "d - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__StarClassLibrary_Cint_185_0_18, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 1, 1, 1, 1, 0, "d - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_185_0_19, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_185_0_20, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_185_0_21, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_185_0_22, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dot",327,G__StarClassLibrary_Cint_185_0_23, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dot",327,G__StarClassLibrary_Cint_185_0_24, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__StarClassLibrary_Cint_185_0_25, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__StarClassLibrary_Cint_185_0_26, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__StarClassLibrary_Cint_185_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__StarClassLibrary_Cint_185_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__StarClassLibrary_Cint_185_0_29, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 1, 1, 1, 8, "1 - 'double (*)(double, size_t, size_t)' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("T",84,G__StarClassLibrary_Cint_185_0_30, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("transpose",991,G__StarClassLibrary_Cint_185_0_31, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sub",330,G__StarClassLibrary_Cint_185_0_32, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 4, 1, 1, 8, 
"h - 'size_t' 0 - min_row h - 'size_t' 0 - max_row "
"h - 'size_t' 0 - min_col h - 'size_t' 0 - max_col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sub",330,G__StarClassLibrary_Cint_185_0_33, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'size_t' 0 - row h - 'size_t' 0 - col "
"u 'StMatrix<double>' - 11 - m1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inverse",764,G__StarClassLibrary_Cint_185_0_34, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 1, 1, 1, 8, "h - 'size_t' 1 - ierr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("invert",664,G__StarClassLibrary_Cint_185_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'size_t' 1 - ierr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("determinant",1179,G__StarClassLibrary_Cint_185_0_36, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__StarClassLibrary_Cint_185_0_37, 121, -1, -1, 0, 2, 3, 1, 0, 
"h - - 1 - - h - - 1 - -", (char*)NULL, (void*) G__func2void( (void (*)(unsigned int&, unsigned int&))(&StMatrix<double>::swap) ), 0);
   G__memfunc_setup("swap",443,G__StarClassLibrary_Cint_185_0_38, 121, -1, -1, 0, 2, 3, 1, 0, 
"D - - 1 - - D - - 1 - -", (char*)NULL, (void*) G__func2void( (void (*)(double*&, double*&))(&StMatrix<double>::swap) ), 0);
   G__memfunc_setup("dfact",514,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"d - - 1 - det I - - 0 - ir", "factorize the matrix. ", (void*) NULL, 0);
   G__memfunc_setup("dfinv",535,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "I - - 0 - ir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StarClassLibrary_Cint_185_0_41, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMatrix<double>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StarClassLibrary_Cint_185_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMatrix<double>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StarClassLibrary_Cint_185_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMatrix<double>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StarClassLibrary_Cint_185_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMatrix<double>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StarClassLibrary_Cint_185_0_45, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StarClassLibrary_Cint_185_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StarClassLibrary_Cint_185_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StarClassLibrary_Cint_185_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StarClassLibrary_Cint_185_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMatrix<double>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StarClassLibrary_Cint_185_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMatrix<double>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StarClassLibrary_Cint_185_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMatrix<double>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StarClassLibrary_Cint_185_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMatrix<double>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StMatrix<double>", 1711, G__StarClassLibrary_Cint_185_0_53, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStMatrixlEfloatgR(void) {
   /* StMatrix<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR));
   G__memfunc_setup("StMatrix<float>",1484,G__StarClassLibrary_Cint_186_0_1, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMatrix<float>",1484,G__StarClassLibrary_Cint_186_0_2, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 3, 1, 1, 0, 
"h - 'size_t' 0 - p h - 'size_t' 0 - q "
"h - 'size_t' 0 '0' init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMatrix<float>",1484,G__StarClassLibrary_Cint_186_0_3, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StMatrix<float>",1484,G__StarClassLibrary_Cint_186_0_4, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StarClassLibrary_Cint_186_0_5, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StarClassLibrary_Cint_186_0_6, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numRow",648,G__StarClassLibrary_Cint_186_0_7, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numCol",622,G__StarClassLibrary_Cint_186_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numSize",747,G__StarClassLibrary_Cint_186_0_9, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("num_row",775,G__StarClassLibrary_Cint_186_0_10, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("num_col",749,G__StarClassLibrary_Cint_186_0_11, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("num_size",874,G__StarClassLibrary_Cint_186_0_12, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_186_0_13, 102, -1, -1, 1, 2, 1, 1, 9, 
"h - 'size_t' 0 - row h - 'size_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_186_0_14, 102, -1, -1, 1, 2, 1, 1, 0, 
"h - 'size_t' 0 - row h - 'size_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_186_0_15, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgRcLcLStMatrixRow), -1, 0, 1, 1, 1, 0, "h - 'size_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StarClassLibrary_Cint_186_0_16, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgRcLcLStMatrixRowConst), -1, 0, 1, 1, 1, 9, "h - 'size_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*=",979,G__StarClassLibrary_Cint_186_0_17, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 1, 1, 1, 1, 0, "d - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator/=",984,G__StarClassLibrary_Cint_186_0_18, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 1, 1, 1, 1, 0, "d - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_186_0_19, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__StarClassLibrary_Cint_186_0_20, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_186_0_21, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__StarClassLibrary_Cint_186_0_22, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dot",327,G__StarClassLibrary_Cint_186_0_23, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dot",327,G__StarClassLibrary_Cint_186_0_24, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+",919,G__StarClassLibrary_Cint_186_0_25, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-",921,G__StarClassLibrary_Cint_186_0_26, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__StarClassLibrary_Cint_186_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__StarClassLibrary_Cint_186_0_28, 103, -1, -1, 0, 1, 1, 1, 8, "u 'StMatrix<float>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__StarClassLibrary_Cint_186_0_29, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 1, 1, 1, 8, "1 - 'float (*)(float, size_t, size_t)' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("T",84,G__StarClassLibrary_Cint_186_0_30, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("transpose",991,G__StarClassLibrary_Cint_186_0_31, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sub",330,G__StarClassLibrary_Cint_186_0_32, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 4, 1, 1, 8, 
"h - 'size_t' 0 - min_row h - 'size_t' 0 - max_row "
"h - 'size_t' 0 - min_col h - 'size_t' 0 - max_col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sub",330,G__StarClassLibrary_Cint_186_0_33, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'size_t' 0 - row h - 'size_t' 0 - col "
"u 'StMatrix<float>' - 11 - m1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inverse",764,G__StarClassLibrary_Cint_186_0_34, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 1, 1, 1, 8, "h - 'size_t' 1 - ierr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("invert",664,G__StarClassLibrary_Cint_186_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'size_t' 1 - ierr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("determinant",1179,G__StarClassLibrary_Cint_186_0_36, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__StarClassLibrary_Cint_186_0_37, 121, -1, -1, 0, 2, 3, 1, 0, 
"h - - 1 - - h - - 1 - -", (char*)NULL, (void*) G__func2void( (void (*)(unsigned int&, unsigned int&))(&StMatrix<float>::swap) ), 0);
   G__memfunc_setup("swap",443,G__StarClassLibrary_Cint_186_0_38, 121, -1, -1, 0, 2, 3, 1, 0, 
"F - - 1 - - F - - 1 - -", (char*)NULL, (void*) G__func2void( (void (*)(float*&, float*&))(&StMatrix<float>::swap) ), 0);
   G__memfunc_setup("dfact",514,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"f - - 1 - det I - - 0 - ir", "factorize the matrix. ", (void*) NULL, 0);
   G__memfunc_setup("dfinv",535,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "I - - 0 - ir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StarClassLibrary_Cint_186_0_41, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StMatrix<float>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StarClassLibrary_Cint_186_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMatrix<float>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StarClassLibrary_Cint_186_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StMatrix<float>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StarClassLibrary_Cint_186_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StMatrix<float>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StarClassLibrary_Cint_186_0_45, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StarClassLibrary_Cint_186_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StarClassLibrary_Cint_186_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StarClassLibrary_Cint_186_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StarClassLibrary_Cint_186_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMatrix<float>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StarClassLibrary_Cint_186_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMatrix<float>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StarClassLibrary_Cint_186_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StMatrix<float>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StarClassLibrary_Cint_186_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StMatrix<float>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StMatrix<float>", 1610, G__StarClassLibrary_Cint_186_0_53, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStHelix(void) {
   /* StHelix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelix));
   G__memfunc_setup("StHelix",705,G__StarClassLibrary_Cint_192_0_1, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelix), -1, 0, 5, 1, 1, 0, 
"d - - 0 - c d - - 0 - dip "
"d - - 0 - phase u 'StThreeVector<double>' - 11 - o "
"i - - 0 '-1' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dipAngle",804,G__StarClassLibrary_Cint_192_0_2, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("curvature",993,G__StarClassLibrary_Cint_192_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", "/ 1/R in xy-plane", (void*) NULL, 0);
   G__memfunc_setup("phase",529,G__StarClassLibrary_Cint_192_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", "/ aziumth in xy-plane measured from ring center", (void*) NULL, 0);
   G__memfunc_setup("xcenter",761,G__StarClassLibrary_Cint_192_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", "/ x-center of circle in xy-plane", (void*) NULL, 0);
   G__memfunc_setup("ycenter",762,G__StarClassLibrary_Cint_192_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", "/ y-center of circle in xy-plane", (void*) NULL, 0);
   G__memfunc_setup("h",104,G__StarClassLibrary_Cint_192_0_7, 105, -1, -1, 0, 0, 1, 1, 8, "", "/ -sign(q*B);", (void*) NULL, 0);
   G__memfunc_setup("origin",648,G__StarClassLibrary_Cint_192_0_8, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 1, 0, 1, 1, 9, "", "/ starting point", (void*) NULL, 0);
   G__memfunc_setup("setParameters",1376,G__StarClassLibrary_Cint_192_0_9, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - c d - - 0 - dip "
"d - - 0 - phase u 'StThreeVector<double>' - 11 - o "
"i - - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__StarClassLibrary_Cint_192_0_10, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__StarClassLibrary_Cint_192_0_11, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__StarClassLibrary_Cint_192_0_12, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__StarClassLibrary_Cint_192_0_13, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 8, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cx",219,G__StarClassLibrary_Cint_192_0_14, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cy",220,G__StarClassLibrary_Cint_192_0_15, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cz",221,G__StarClassLibrary_Cint_192_0_16, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 '0' s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cat",312,G__StarClassLibrary_Cint_192_0_17, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 8, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("period",643,G__StarClassLibrary_Cint_192_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLength",1039,G__StarClassLibrary_Cint_192_0_19, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_pairlEdoublecOdoublegR), -1, 0, 1, 1, 1, 8, "d - - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLength",1039,G__StarClassLibrary_Cint_192_0_20, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_pairlEdoublecOdoublegR), -1, 0, 3, 1, 1, 0, 
"d - - 0 - r d - - 0 - x "
"d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLength",1039,G__StarClassLibrary_Cint_192_0_21, 100, -1, -1, 0, 2, 1, 1, 8, 
"u 'StThreeVector<double>' - 11 - p g - - 0 'true' scanPeriods", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLength",1039,G__StarClassLibrary_Cint_192_0_22, 100, -1, -1, 0, 2, 1, 1, 8, 
"u 'StThreeVector<double>' - 11 - r u 'StThreeVector<double>' - 11 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLength",1039,G__StarClassLibrary_Cint_192_0_23, 100, -1, -1, 0, 2, 1, 1, 8, 
"d - - 0 - X d - - 0 - Y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLengths",1154,G__StarClassLibrary_Cint_192_0_24, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_pairlEdoublecOdoublegR), -1, 0, 3, 1, 1, 8, 
"u 'StHelix' - 11 - - d - - 0 '10*micrometer' minStepSize "
"d - - 0 '10*centimeter' minRange", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("distance",843,G__StarClassLibrary_Cint_192_0_25, 100, -1, -1, 0, 2, 1, 1, 8, 
"u 'StThreeVector<double>' - 11 - p g - - 0 'true' scanPeriods", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("valid",528,G__StarClassLibrary_Cint_192_0_26, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 0 '1.e+5' world", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bad",295,G__StarClassLibrary_Cint_192_0_27, 105, -1, -1, 0, 1, 1, 1, 8, "d - - 0 '1.e+5' WorldSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("moveOrigin",1055,G__StarClassLibrary_Cint_192_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StHelix",705,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelix), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCurvature",1293,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - - 0 - -", "/ performs also various checks   ", (void*) NULL, 0);
   G__memfunc_setup("setPhase",829,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDipAngle",1104,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fudgePathLength",1530,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 8, "u 'StThreeVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StarClassLibrary_Cint_192_0_34, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StHelix::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StarClassLibrary_Cint_192_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StHelix::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StarClassLibrary_Cint_192_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StHelix::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StarClassLibrary_Cint_192_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StHelix::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StarClassLibrary_Cint_192_0_38, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StarClassLibrary_Cint_192_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StarClassLibrary_Cint_192_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StarClassLibrary_Cint_192_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StarClassLibrary_Cint_192_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StHelix::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StarClassLibrary_Cint_192_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StHelix::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StarClassLibrary_Cint_192_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StHelix::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StarClassLibrary_Cint_192_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StHelix::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StHelix", 705, G__StarClassLibrary_Cint_192_0_46, (int) ('i'), G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelix), -1, 0, 1, 1, 1, 0, "u 'StHelix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StHelix", 831, G__StarClassLibrary_Cint_192_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StarClassLibrary_Cint_192_0_48, (int) ('u'), G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelix), -1, 1, 1, 1, 1, 0, "u 'StHelix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStPhysicalHelix(void) {
   /* StPhysicalHelix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix));
   G__memfunc_setup("StPhysicalHelix",1534,G__StarClassLibrary_Cint_194_0_1, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix), -1, 0, 4, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - - u 'StThreeVector<double>' - 11 - - "
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StPhysicalHelix",1534,G__StarClassLibrary_Cint_194_0_2, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix), -1, 0, 5, 1, 1, 0, 
"d - - 0 - - d - - 0 - - "
"d - - 0 - - u 'StThreeVector<double>' - 11 - - "
"i - - 0 '-1' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StPhysicalHelix",1534,G__StarClassLibrary_Cint_194_0_3, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("momentum",882,G__StarClassLibrary_Cint_194_0_4, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 1, 1, 1, 8, "d - - 0 - -", "returns the momentum at origin", (void*) NULL, 0);
   G__memfunc_setup("momentumAt",1063,G__StarClassLibrary_Cint_194_0_5, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 8, 
"d - - 0 - - d - - 0 - -", "returns momemtum at S", (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__StarClassLibrary_Cint_194_0_6, 105, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - -", "returns charge of particle", (void*) NULL, 0);
   G__memfunc_setup("curvatureSignedDistance",2406,G__StarClassLibrary_Cint_194_0_7, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("geometricSignedDistance",2372,G__StarClassLibrary_Cint_194_0_8, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("curvatureSignedDistance",2406,G__StarClassLibrary_Cint_194_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("geometricSignedDistance",2372,G__StarClassLibrary_Cint_194_0_10, 100, -1, -1, 0, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StarClassLibrary_Cint_194_0_11, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StPhysicalHelix::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StarClassLibrary_Cint_194_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPhysicalHelix::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StarClassLibrary_Cint_194_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StPhysicalHelix::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StarClassLibrary_Cint_194_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StPhysicalHelix::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StarClassLibrary_Cint_194_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StarClassLibrary_Cint_194_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPhysicalHelix::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StarClassLibrary_Cint_194_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StPhysicalHelix::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StarClassLibrary_Cint_194_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPhysicalHelix::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StarClassLibrary_Cint_194_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StPhysicalHelix::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StPhysicalHelix", 1534, G__StarClassLibrary_Cint_194_0_23, (int) ('i'), G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix), -1, 0, 1, 1, 1, 0, "u 'StPhysicalHelix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StPhysicalHelix", 1660, G__StarClassLibrary_Cint_194_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StarClassLibrary_Cint_194_0_25, (int) ('u'), G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix), -1, 1, 1, 1, 1, 0, "u 'StPhysicalHelix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBetheBloch(void) {
   /* BetheBloch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_BetheBloch));
   G__memfunc_setup("BetheBloch",976,G__StarClassLibrary_Cint_429_0_1, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_BetheBloch), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__StarClassLibrary_Cint_429_0_2, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sirrf",518,G__StarClassLibrary_Cint_429_0_3, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - poverm d - 'Double_t' 0 '60.' Length "
"i - 'Int_t' 0 '0' k", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Int_t))(&BetheBloch::Sirrf) ), 0);
   G__memfunc_setup("Girrf",506,G__StarClassLibrary_Cint_429_0_4, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - poverm d - 'Double_t' 0 '1.e-3' Tmin "
"i - 'Int_t' 0 '0' k", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Int_t))(&BetheBloch::Girrf) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BetheBloch", 976, G__StarClassLibrary_Cint_429_0_5, (int) ('i'), G__get_linked_tagnum(&G__StarClassLibrary_CintLN_BetheBloch), -1, 0, 1, 1, 1, 0, "u 'BetheBloch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BetheBloch", 1102, G__StarClassLibrary_Cint_429_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StarClassLibrary_Cint_429_0_7, (int) ('u'), G__get_linked_tagnum(&G__StarClassLibrary_CintLN_BetheBloch), -1, 1, 1, 1, 1, 0, "u 'BetheBloch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStHelixHelper(void) {
   /* StHelixHelper */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelper));
   G__memfunc_setup("StHelixHelper",1313,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelper), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyHelix",704,G__StarClassLibrary_Cint_431_0_2, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_THelixTrack), -1, 0, 2, 3, 1, 0, 
"U 'THelixTrack' - 0 - myHlx U 'StHelix' 'StHelixD' 10 - evHlx", (char*)NULL, (void*) G__func2void( (THelixTrack* (*)(THelixTrack*, const StHelixD*))(&StHelixHelper::MyHelix) ), 0);
   G__memfunc_setup("StHelixHelper",1313,G__StarClassLibrary_Cint_431_0_3, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelper), -1, 0, 3, 1, 1, 0, 
"u 'StPhysicalHelix' - 11 - helix u 'StPhysicalHelix' - 11 - outerHelix "
"d - - 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StHelixHelper",1313,G__StarClassLibrary_Cint_431_0_4, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelper), -1, 0, 1, 1, 1, 0, "u 'StHelixHelper' - 11 - helper", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLength",898,G__StarClassLibrary_Cint_431_0_5, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHelix",794,G__StarClassLibrary_Cint_431_0_6, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StPhysicalHelix), G__defined_typename("StPhysicalHelixD"), 0, 1, 1, 1, 8, "i - - 0 '0' idx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTHelix",878,G__StarClassLibrary_Cint_431_0_7, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_THelixTrack), -1, 0, 1, 1, 1, 8, "i - - 0 '0' idx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPoints",925,G__StarClassLibrary_Cint_431_0_8, 70, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 1 - npoints", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StarClassLibrary_Cint_431_0_9, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StHelixHelper::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StarClassLibrary_Cint_431_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StHelixHelper::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StarClassLibrary_Cint_431_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StHelixHelper::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StarClassLibrary_Cint_431_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StHelixHelper::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StarClassLibrary_Cint_431_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StarClassLibrary_Cint_431_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StHelixHelper::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StarClassLibrary_Cint_431_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StHelixHelper::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StarClassLibrary_Cint_431_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StHelixHelper::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StarClassLibrary_Cint_431_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StHelixHelper::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StHelixHelper", 1439, G__StarClassLibrary_Cint_431_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StarClassLibrary_Cint_431_0_22, (int) ('u'), G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StHelixHelper), -1, 1, 1, 1, 1, 0, "u 'StHelixHelper' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStParticleTable(void) {
   /* StParticleTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable));
   G__memfunc_setup("particleTable",1340,G__StarClassLibrary_Cint_433_0_1, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (StParticleTable* (*)())(&StParticleTable::particleTable) ), 0);
   G__memfunc_setup("instance",853,G__StarClassLibrary_Cint_433_0_2, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (StParticleTable* (*)())(&StParticleTable::instance) ), 0);
   G__memfunc_setup("entries",762,G__StarClassLibrary_Cint_433_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__StarClassLibrary_Cint_433_0_4, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("contains",863,G__StarClassLibrary_Cint_433_0_5, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - -", "by name", (void*) NULL, 0);
   G__memfunc_setup("contains",863,G__StarClassLibrary_Cint_433_0_6, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - -", "by PDG encoding", (void*) NULL, 0);
   G__memfunc_setup("containsGeantId",1531,G__StarClassLibrary_Cint_433_0_7, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - -", "by Geant3 id", (void*) NULL, 0);
   G__memfunc_setup("findParticle",1237,G__StarClassLibrary_Cint_433_0_8, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleDefinition), -1, 0, 1, 1, 1, 8, "u 'string' - 11 - -", "by name    ", (void*) NULL, 0);
   G__memfunc_setup("findParticle",1237,G__StarClassLibrary_Cint_433_0_9, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleDefinition), -1, 0, 1, 1, 1, 8, "i - - 0 - -", "by PDG encoding   ", (void*) NULL, 0);
   G__memfunc_setup("findParticleByGeantId",2092,G__StarClassLibrary_Cint_433_0_10, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleDefinition), -1, 0, 1, 1, 1, 8, "i - - 0 - -", "by Geant3 id", (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__StarClassLibrary_Cint_433_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StParticleDefinition' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__StarClassLibrary_Cint_433_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StParticleDefinition' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dump",438,G__StarClassLibrary_Cint_433_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'cout' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allParticles",1248,G__StarClassLibrary_Cint_433_0_14, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_vectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgR), G__defined_typename("StVecPtrParticleDefinition"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StParticleTable",1507,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StParticleTable",1507,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable), -1, 0, 1, 1, 4, 0, "u 'StParticleTable' - 11 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StarClassLibrary_Cint_433_0_17, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StParticleTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StarClassLibrary_Cint_433_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StParticleTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StarClassLibrary_Cint_433_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StParticleTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StarClassLibrary_Cint_433_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StParticleTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StarClassLibrary_Cint_433_0_21, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StarClassLibrary_Cint_433_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StarClassLibrary_Cint_433_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StarClassLibrary_Cint_433_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StarClassLibrary_Cint_433_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StParticleTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StarClassLibrary_Cint_433_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StParticleTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StarClassLibrary_Cint_433_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StParticleTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StarClassLibrary_Cint_433_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StParticleTable::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StParticleTable", 1633, G__StarClassLibrary_Cint_433_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StarClassLibrary_Cint_433_0_30, (int) ('u'), G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable), -1, 1, 1, 1, 1, 0, "u 'StParticleTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStParticleDefinition(void) {
   /* StParticleDefinition */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleDefinition));
   G__memfunc_setup("StParticleDefinition",2052,G__StarClassLibrary_Cint_434_0_1, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleDefinition), -1, 0, 16, 1, 1, 0, 
"u 'string' - 11 - aName d - - 0 - mass "
"d - - 0 - width d - - 0 - charge "
"i - - 0 - iSpin i - - 0 - iParity "
"i - - 0 - iConjugation i - - 0 - iIsospin "
"i - - 0 - iIsospinZ i - - 0 - gParity "
"u 'string' - 11 - pType i - - 0 - lepton "
"i - - 0 - baryon i - - 0 - encoding "
"g - - 0 - stable d - - 0 - lifetime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__StarClassLibrary_Cint_434_0_2, 105, -1, -1, 0, 1, 1, 1, 8, "u 'StParticleDefinition' - 11 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__StarClassLibrary_Cint_434_0_3, 105, -1, -1, 0, 1, 1, 1, 8, "u 'StParticleDefinition' - 11 - right", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("name",417,G__StarClassLibrary_Cint_434_0_4, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mass",436,G__StarClassLibrary_Cint_434_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("width",544,G__StarClassLibrary_Cint_434_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__StarClassLibrary_Cint_434_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spin",442,G__StarClassLibrary_Cint_434_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iSpin",515,G__StarClassLibrary_Cint_434_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iParity",738,G__StarClassLibrary_Cint_434_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iConjugation",1258,G__StarClassLibrary_Cint_434_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isospin",773,G__StarClassLibrary_Cint_434_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isospin3",824,G__StarClassLibrary_Cint_434_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iIsospin",846,G__StarClassLibrary_Cint_434_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iIsospin3",897,G__StarClassLibrary_Cint_434_0_15, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iGParity",809,G__StarClassLibrary_Cint_434_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("type",450,G__StarClassLibrary_Cint_434_0_17, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("leptonNumber",1275,G__StarClassLibrary_Cint_434_0_18, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("baryonNumber",1268,G__StarClassLibrary_Cint_434_0_19, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdgEncoding",1122,G__StarClassLibrary_Cint_434_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("antiPdgEncoding",1518,G__StarClassLibrary_Cint_434_0_21, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("stable",635,G__StarClassLibrary_Cint_434_0_22, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lifeTime",815,G__StarClassLibrary_Cint_434_0_23, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("particleTable",1340,G__StarClassLibrary_Cint_434_0_24, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleTable), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StParticleDefinition",2052,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleDefinition), -1, 0, 1, 1, 4, 0, "u 'StParticleDefinition' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StParticleDefinition",2052,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleDefinition), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StParticleDefinition), -1, 1, 1, 1, 4, 1, "u 'StParticleDefinition' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StarClassLibrary_Cint_434_0_28, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StParticleDefinition::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StarClassLibrary_Cint_434_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StParticleDefinition::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StarClassLibrary_Cint_434_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StParticleDefinition::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StarClassLibrary_Cint_434_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StParticleDefinition::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StarClassLibrary_Cint_434_0_32, 85, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StarClassLibrary_Cint_434_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StarClassLibrary_Cint_434_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StarClassLibrary_Cint_434_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StarClassLibrary_Cint_434_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StParticleDefinition::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StarClassLibrary_Cint_434_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StParticleDefinition::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StarClassLibrary_Cint_434_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StParticleDefinition::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StarClassLibrary_Cint_434_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StParticleDefinition::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StParticleDefinition", 2178, G__StarClassLibrary_Cint_434_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStarClassLibrary_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStarClassLibrary_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
   G__memfunc_setup("abs", 310, G__StarClassLibrary_Cint__0_2180, 100, -1, -1, 0, 1, 1, 1, 0, "u 'StThreeVector<double>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("abs", 310, G__StarClassLibrary_Cint__0_2181, 102, -1, -1, 0, 1, 1, 1, 0, "u 'StThreeVector<float>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2182, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v1 u 'StThreeVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2183, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v1 u 'StThreeVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2184, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v1 u 'StThreeVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2185, 102, -1, -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v1 u 'StThreeVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__StarClassLibrary_Cint__0_2186, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os u 'StThreeVector<double>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__StarClassLibrary_Cint__0_2187, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os u 'StThreeVector<float>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2193, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<double>' - 11 - m1 u 'StMatrix<double>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2194, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<double>' - 11 - m1 u 'StMatrix<float>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2195, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<float>' - 11 - m1 u 'StMatrix<double>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2196, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<float>' - 11 - m1 u 'StMatrix<float>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2205, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<double>' - 11 - m1 u 'StThreeVector<double>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2206, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v u 'StMatrix<double>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2207, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<double>' - 11 - m1 u 'StThreeVector<float>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2208, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v u 'StMatrix<double>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2209, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<float>' - 11 - m1 u 'StThreeVector<double>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2210, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v u 'StMatrix<float>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2211, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<float>' - 11 - m1 u 'StThreeVector<float>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2212, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v u 'StMatrix<float>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2213, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<double>' - 11 - m1 u 'StLorentzVector<double>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2214, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<double>' - 11 - v u 'StMatrix<double>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2215, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<double>' - 11 - m1 u 'StLorentzVector<float>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2216, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<float>' - 11 - v u 'StMatrix<double>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2217, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<float>' - 11 - m1 u 'StLorentzVector<double>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2218, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<double>' - 11 - v u 'StMatrix<float>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2219, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<float>' - 11 - m1 u 'StLorentzVector<float>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2220, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<float>' - 11 - v u 'StMatrix<float>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2221, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<double>' - 11 - m1 u 'StMatrix<double>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2222, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<float>' - 11 - m1 u 'StMatrix<double>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2223, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<double>' - 11 - m1 u 'StMatrix<float>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2224, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<float>' - 11 - m1 u 'StMatrix<float>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2225, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<double>' - 11 - m1 u 'StMatrix<double>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2226, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<float>' - 11 - m1 u 'StMatrix<double>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2227, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<double>' - 11 - m1 u 'StMatrix<float>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2228, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StMatrix<float>' - 11 - m1 u 'StMatrix<float>' - 11 - m2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__StarClassLibrary_Cint__0_2229, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s u 'StMatrix<double>' - 11 - q", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__StarClassLibrary_Cint__0_2230, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - s u 'StMatrix<float>' - 11 - q", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("norm_infinity", 1413, G__StarClassLibrary_Cint__0_2231, 100, -1, -1, 0, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("normInfinity", 1286, G__StarClassLibrary_Cint__0_2232, 100, -1, -1, 0, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("norm1", 493, G__StarClassLibrary_Cint__0_2233, 100, -1, -1, 0, 1, 1, 1, 0, "u 'StMatrix<double>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("norm_infinity", 1413, G__StarClassLibrary_Cint__0_2234, 102, -1, -1, 0, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("normInfinity", 1286, G__StarClassLibrary_Cint__0_2235, 102, -1, -1, 0, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("norm1", 493, G__StarClassLibrary_Cint__0_2236, 102, -1, -1, 0, 1, 1, 1, 0, "u 'StMatrix<float>' - 11 - m1", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator==", 998, G__StarClassLibrary_Cint__0_2237, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'StHelix' - 11 - - u 'StHelix' - 11 - -", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__StarClassLibrary_Cint__0_2238, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'StHelix' - 11 - - u 'StHelix' - 11 - -", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__StarClassLibrary_Cint__0_2239, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - - u 'StHelix' - 11 - -", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
   G__memfunc_setup("cross_product", 1418, G__StarClassLibrary_Cint__0_2714, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v1 u 'StThreeVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("cross_product", 1418, G__StarClassLibrary_Cint__0_2715, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v1 u 'StThreeVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2716, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v1 u 'StThreeVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2717, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v1 u 'StThreeVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2718, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v1 u 'StThreeVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2719, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v1 u 'StThreeVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2720, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v d - - 0 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2721, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"d - - 0 - c u 'StThreeVector<float>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator/", 923, G__StarClassLibrary_Cint__0_2722, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<float>' - 11 - v d - - 0 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__StarClassLibrary_Cint__0_2723, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("istream"), 1, 2, 1, 1, 0, 
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is u 'StThreeVector<double>' - 1 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator>>", 1000, G__StarClassLibrary_Cint__0_2724, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("istream"), 1, 2, 1, 1, 0, 
"u 'basic_istream<char,char_traits<char> >' 'istream' 1 - is u 'StThreeVector<float>' - 1 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("cross_product", 1418, G__StarClassLibrary_Cint__0_2725, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v1 u 'StThreeVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("cross_product", 1418, G__StarClassLibrary_Cint__0_2726, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v1 u 'StThreeVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2727, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v1 u 'StThreeVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2728, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v1 u 'StThreeVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2729, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v1 u 'StThreeVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2730, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v1 u 'StThreeVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2731, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v d - - 0 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2732, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"d - - 0 - c u 'StThreeVector<double>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator/", 923, G__StarClassLibrary_Cint__0_2733, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StThreeVector<double>' - 11 - v d - - 0 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__StarClassLibrary_Cint__0_2734, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os u 'StLorentzVector<float>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2735, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<float>' - 11 - v1 u 'StLorentzVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2736, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<float>' - 11 - v1 u 'StLorentzVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2737, 102, -1, -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<float>' - 11 - v1 u 'StLorentzVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2738, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<float>' - 11 - v d - - 0 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2739, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"d - - 0 - c u 'StLorentzVector<float>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator/", 923, G__StarClassLibrary_Cint__0_2740, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<float>' - 11 - v d - - 0 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("abs", 310, G__StarClassLibrary_Cint__0_2741, 102, -1, -1, 0, 1, 1, 1, 0, "u 'StLorentzVector<float>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2742, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<double>' - 11 - v1 u 'StLorentzVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2743, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<float>' - 11 - v1 u 'StLorentzVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator+", 919, G__StarClassLibrary_Cint__0_2744, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<double>' - 11 - v1 u 'StLorentzVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2745, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<double>' - 11 - v1 u 'StLorentzVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2746, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<float>' - 11 - v1 u 'StLorentzVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator-", 921, G__StarClassLibrary_Cint__0_2747, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<double>' - 11 - v1 u 'StLorentzVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator<<", 996, G__StarClassLibrary_Cint__0_2748, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - os u 'StLorentzVector<double>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2749, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<double>' - 11 - v1 u 'StLorentzVector<float>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2750, 102, -1, -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<float>' - 11 - v1 u 'StLorentzVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2751, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<double>' - 11 - v1 u 'StLorentzVector<double>' - 11 - v2", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2752, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<double>' - 11 - v d - - 0 - c", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func27() {
   G__memfunc_setup("operator*", 918, G__StarClassLibrary_Cint__0_2753, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"d - - 0 - c u 'StLorentzVector<double>' - 11 - v", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator/", 923, G__StarClassLibrary_Cint__0_2754, 117, G__get_linked_tagnum(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'StLorentzVector<double>' - 11 - v d - - 0 - c", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("abs", 310, G__StarClassLibrary_Cint__0_2755, 100, -1, -1, 0, 1, 1, 1, 0, "u 'StLorentzVector<double>' - 11 - v", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStarClassLibrary_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StarClassLibrary_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_TRootIOCtor = { "TRootIOCtor" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR = { "StThreeVector<double>" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR = { "StThreeVector<float>" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR = { "StLorentzVector<float>" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR = { "StLorentzVector<double>" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StMatrixlEdoublegR = { "StMatrix<double>" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StMatrixlEfloatgR = { "StMatrix<float>" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StMatrixlEfloatgRcLcLStMatrixRow = { "StMatrix<float>::StMatrixRow" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StMatrixlEfloatgRcLcLStMatrixRowConst = { "StMatrix<float>::StMatrixRowConst" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StMatrixlEdoublegRcLcLStMatrixRow = { "StMatrix<double>::StMatrixRow" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StMatrixlEdoublegRcLcLStMatrixRowConst = { "StMatrix<double>::StMatrixRowConst" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StHelix = { "StHelix" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StPhysicalHelix = { "StPhysicalHelix" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_maplEdoublecOdoublecOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOdoublegRsPgRsPgR = { "map<double,double,less<double>,allocator<pair<const double,double> > >" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_BetheBloch = { "BetheBloch" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_THelixTrack = { "THelixTrack" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StHelixHelper = { "StHelixHelper" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StHelixHelpercLcLdA = { "StHelixHelper::$" , 101 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StParticleTable = { "StParticleTable" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_StParticleDefinition = { "StParticleDefinition" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_vectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgR = { "vector<StParticleDefinition*,allocator<StParticleDefinition*> >" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StParticleDefinition*,allocator<StParticleDefinition*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_maplEintcOStParticleDefinitionmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOStParticleDefinitionmUgRsPgRsPgR = { "map<int,StParticleDefinition*,less<int>,allocator<pair<const int,StParticleDefinition*> > >" , 99 , -1 };
G__linked_taginfo G__StarClassLibrary_CintLN_maplEstringcOStParticleDefinitionmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOStParticleDefinitionmUgRsPgRsPgR = { "map<string,StParticleDefinition*,less<string>,allocator<pair<const string,StParticleDefinition*> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStarClassLibrary_Cint() {
  G__StarClassLibrary_CintLN_TClass.tagnum = -1 ;
  G__StarClassLibrary_CintLN_TBuffer.tagnum = -1 ;
  G__StarClassLibrary_CintLN_TMemberInspector.tagnum = -1 ;
  G__StarClassLibrary_CintLN_TObject.tagnum = -1 ;
  G__StarClassLibrary_CintLN_TRootIOCtor.tagnum = -1 ;
  G__StarClassLibrary_CintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_string.tagnum = -1 ;
  G__StarClassLibrary_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StMatrixlEdoublegR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StMatrixlEfloatgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StMatrixlEfloatgRcLcLStMatrixRow.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StMatrixlEfloatgRcLcLStMatrixRowConst.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StMatrixlEdoublegRcLcLStMatrixRow.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StMatrixlEdoublegRcLcLStMatrixRowConst.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StHelix.tagnum = -1 ;
  G__StarClassLibrary_CintLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StPhysicalHelix.tagnum = -1 ;
  G__StarClassLibrary_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_maplEdoublecOdoublecOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOdoublegRsPgRsPgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_BetheBloch.tagnum = -1 ;
  G__StarClassLibrary_CintLN_THelixTrack.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StHelixHelper.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StHelixHelpercLcLdA.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StParticleTable.tagnum = -1 ;
  G__StarClassLibrary_CintLN_StParticleDefinition.tagnum = -1 ;
  G__StarClassLibrary_CintLN_vectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_maplEintcOStParticleDefinitionmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOStParticleDefinitionmUgRsPgRsPgR.tagnum = -1 ;
  G__StarClassLibrary_CintLN_maplEstringcOStParticleDefinitionmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOStParticleDefinitionmUgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStarClassLibrary_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_TRootIOCtor);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_string);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StThreeVectorlEdoublegR),sizeof(StThreeVector<double>),-1,102144,(char*)NULL,G__setup_memvarStThreeVectorlEdoublegR,G__setup_memfuncStThreeVectorlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StThreeVectorlEfloatgR),sizeof(StThreeVector<float>),-1,102144,(char*)NULL,G__setup_memvarStThreeVectorlEfloatgR,G__setup_memfuncStThreeVectorlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StLorentzVectorlEfloatgR),sizeof(StLorentzVector<float>),-1,296192,(char*)NULL,G__setup_memvarStLorentzVectorlEfloatgR,G__setup_memfuncStLorentzVectorlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StLorentzVectorlEdoublegR),sizeof(StLorentzVector<double>),-1,296192,(char*)NULL,G__setup_memvarStLorentzVectorlEdoublegR,G__setup_memfuncStLorentzVectorlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StMatrixlEdoublegR),sizeof(StMatrix<double>),-1,102144,(char*)NULL,G__setup_memvarStMatrixlEdoublegR,G__setup_memfuncStMatrixlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StMatrixlEfloatgR),sizeof(StMatrix<float>),-1,102144,(char*)NULL,G__setup_memvarStMatrixlEfloatgR,G__setup_memfuncStMatrixlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StMatrixlEfloatgRcLcLStMatrixRow);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StMatrixlEfloatgRcLcLStMatrixRowConst);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StMatrixlEdoublegRcLcLStMatrixRow);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StMatrixlEdoublegRcLcLStMatrixRowConst);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StHelix),sizeof(StHelix),-1,296192,(char*)NULL,G__setup_memvarStHelix,G__setup_memfuncStHelix);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_pairlEdoublecOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StPhysicalHelix),sizeof(StPhysicalHelix),-1,296192,(char*)NULL,G__setup_memvarStPhysicalHelix,G__setup_memfuncStPhysicalHelix);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_maplEdoublecOdoublecOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOdoublegRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_BetheBloch),sizeof(BetheBloch),-1,1280,(char*)NULL,G__setup_memvarBetheBloch,G__setup_memfuncBetheBloch);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_THelixTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StHelixHelper),sizeof(StHelixHelper),-1,325376,(char*)NULL,G__setup_memvarStHelixHelper,G__setup_memfuncStHelixHelper);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StHelixHelpercLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StParticleTable),sizeof(StParticleTable),-1,263936,(char*)NULL,G__setup_memvarStParticleTable,G__setup_memfuncStParticleTable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_StParticleDefinition),sizeof(StParticleDefinition),-1,298752,(char*)NULL,G__setup_memvarStParticleDefinition,G__setup_memfuncStParticleDefinition);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_vectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_reverse_iteratorlEvectorlEStParticleDefinitionmUcOallocatorlEStParticleDefinitionmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_maplEintcOStParticleDefinitionmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOStParticleDefinitionmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StarClassLibrary_CintLN_maplEstringcOStParticleDefinitionmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOStParticleDefinitionmUgRsPgRsPgR);
}
extern "C" void G__cpp_setupStarClassLibrary_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStarClassLibrary_Cint()");
  G__set_cpp_environmentStarClassLibrary_Cint();
  G__cpp_setup_tagtableStarClassLibrary_Cint();

  G__cpp_setup_inheritanceStarClassLibrary_Cint();

  G__cpp_setup_typetableStarClassLibrary_Cint();

  G__cpp_setup_memvarStarClassLibrary_Cint();

  G__cpp_setup_memfuncStarClassLibrary_Cint();
  G__cpp_setup_globalStarClassLibrary_Cint();
  G__cpp_setup_funcStarClassLibrary_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStarClassLibrary_Cint();
  return;
}
class G__cpp_setup_initStarClassLibrary_Cint {
  public:
    G__cpp_setup_initStarClassLibrary_Cint() { G__add_setup_func("StarClassLibrary_Cint",(G__incsetup)(&G__cpp_setupStarClassLibrary_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStarClassLibrary_Cint() { G__remove_setup_func("StarClassLibrary_Cint"); }
};
G__cpp_setup_initStarClassLibrary_Cint G__cpp_setup_initializerStarClassLibrary_Cint;

