/* This was generated for version 'SL20d' */
#pragma link off all globals;
#pragma link off all classes;
#pragma link off all functions;
#pragma link C++ class BetheBloch;
#pragma link C++ class StThreeVector<float>-;
#pragma link C++ class StThreeVector<double>-;
#pragma link C++ class StLorentzVector<float>+;
#pragma link C++ class StLorentzVector<double>+;
#pragma link C++ class StMatrix<float>-;
#pragma link C++ class StMatrix<double>-;
#pragma link C++ class StHelix+;
#pragma link C++ class StPhysicalHelix+;
#pragma link C++ function abs(const StThreeVector<float>&);                                      
#pragma link C++ function abs(const StThreeVector<double>&);                                      
#pragma link C++ function cross_product(const StThreeVector<float>&, const StThreeVector<float>&); 
#pragma link C++ function cross_product(const StThreeVector<float>&, const StThreeVector<double>&); 
#pragma link C++ function operator+ (const StThreeVector<float>&, const StThreeVector<float>&);    
#pragma link C++ function operator+ (const StThreeVector<float>&, const StThreeVector<double>&);    
#pragma link C++ function operator- (const StThreeVector<float>&, const StThreeVector<float>&);    
#pragma link C++ function operator- (const StThreeVector<float>&, const StThreeVector<double>&);    
#pragma link C++ function operator* (const StThreeVector<float>&, const StThreeVector<float>&);    
#pragma link C++ function operator* (const StThreeVector<float>&, const StThreeVector<double>&);    
#pragma link C++ function operator* (const StThreeVector<float>&, double);                     
#pragma link C++ function operator* (double, const StThreeVector<float>&);                     
#pragma link C++ function operator/ (const StThreeVector<float>&, double);                     
#pragma link C++ function operator<<(ostream&, const StThreeVector<double>&);                     
#pragma link C++ function operator>>(istream&, StThreeVector<double>&);                           
#pragma link C++ function operator<<(ostream&, const StThreeVector<float>&);                     
#pragma link C++ function operator>>(istream&, StThreeVector<float>&);                           
#pragma link C++ function cross_product(const StThreeVector<double>&, const StThreeVector<double>&);    
#pragma link C++ function cross_product(const StThreeVector<double>&, const StThreeVector<float>&);    
#pragma link C++ function operator+ (const StThreeVector<double>&, const StThreeVector<double>&);       
#pragma link C++ function operator+ (const StThreeVector<double>&, const StThreeVector<float>&);       
#pragma link C++ function operator- (const StThreeVector<double>&, const StThreeVector<float>&);       
#pragma link C++ function operator- (const StThreeVector<double>&, const StThreeVector<double>&);       
#pragma link C++ function operator* (const StThreeVector<double>&, const StThreeVector<float>&);       
#pragma link C++ function operator* (const StThreeVector<double>&, const StThreeVector<double>&);       
#pragma link C++ function operator* (const StThreeVector<double>&, double);                        
#pragma link C++ function operator* (double, const StThreeVector<double>&);                        
#pragma link C++ function operator/ (const StThreeVector<double>&, double);                        
#pragma link C++ function operator<< (ostream&, const StLorentzVector<float>&);                 
#pragma link C++ function operator+ (const StLorentzVector<float>&, const StLorentzVector<float>&);        
#pragma link C++ function operator- (const StLorentzVector<float>&, const StLorentzVector<float>&);        
#pragma link C++ function operator* (const StLorentzVector<float>&, const StLorentzVector<float>&);        
#pragma link C++ function operator* (const StLorentzVector<float>&, double);                       
#pragma link C++ function operator* (double, const StLorentzVector<float>&);                         
#pragma link C++ function operator/ (const StLorentzVector<float>&, double);                         
#pragma link C++ function abs(const StLorentzVector<float>&);
#pragma link C++ function operator+ (const StLorentzVector<double>&, const StLorentzVector<float>&);  
#pragma link C++ function operator+ (const StLorentzVector<float>&, const StLorentzVector<double>&);        
#pragma link C++ function operator+ (const StLorentzVector<double>&, const StLorentzVector<double>&);        
#pragma link C++ function operator- (const StLorentzVector<double>&, const StLorentzVector<float>&);  
#pragma link C++ function operator- (const StLorentzVector<float>&, const StLorentzVector<double>&);        
#pragma link C++ function operator- (const StLorentzVector<double>&, const StLorentzVector<double>&);  
#pragma link C++ function operator<< (ostream&, const StLorentzVector<double>&);                 
#pragma link C++ function operator* (const StLorentzVector<double>&, const StLorentzVector<float>&);  
#pragma link C++ function operator* (const StLorentzVector<float>&, const StLorentzVector<double>&);        
#pragma link C++ function operator* (const StLorentzVector<double>&, const StLorentzVector<double>&);            
#pragma link C++ function operator* (const StLorentzVector<double>&, double);                     
#pragma link C++ function operator* (double, const StLorentzVector<double>&);                     
#pragma link C++ function operator/ (const StLorentzVector<double>&, double);                     
#pragma link C++ function abs(const StLorentzVector<double>&);
#pragma link C++ function operator*(const StMatrix<float>&,const StMatrix<float>&);            
#pragma link C++ function operator*(const StMatrix<float>&, const StThreeVector<float>&);      
#pragma link C++ function operator*(const StMatrix<float>&, const StThreeVector<double>&);      
#pragma link C++ function operator*(const StThreeVector<float>&, const StMatrix<float>&);      
#pragma link C++ function operator*(const StThreeVector<double>&, const StMatrix<float>&);      
#pragma link C++ function operator*(const StMatrix<float>&, const StLorentzVector<float>&);    
#pragma link C++ function operator*(const StMatrix<float>&, const StLorentzVector<double>&);    
#pragma link C++ function operator*(const StLorentzVector<float>&, const StMatrix<float>&);    
#pragma link C++ function operator*(const StLorentzVector<double>&, const StMatrix<float>&);    
#pragma link C++ function operator+(const StMatrix<float>&,const StMatrix<float>&);            
#pragma link C++ function operator-(const StMatrix<float>&,const StMatrix<float>&);            
#pragma link C++ function operator<<(ostream&, const StMatrix<float>&);                    
#pragma link C++ function norm_infinity(const StMatrix<float>&);                            
#pragma link C++ function normInfinity(const StMatrix<float>&);                             
#pragma link C++ function norm1(const StMatrix<float>&);                                    
#pragma link C++ function operator*(const StMatrix<double>&,const StMatrix<double>&);             
#pragma link C++ function operator*(const StMatrix<double>&,const StMatrix<float>&);             
#pragma link C++ function operator*(const StMatrix<float>&,const StMatrix<double>&);             
#pragma link C++ function operator*(const StMatrix<double>&, const StThreeVector<float>&);       
#pragma link C++ function operator*(const StMatrix<double>&, const StThreeVector<double>&);       
#pragma link C++ function operator*(const StThreeVector<float>&, const StMatrix<double>&);       
#pragma link C++ function operator*(const StThreeVector<double>&, const StMatrix<double>&);       
#pragma link C++ function operator*(const StMatrix<double>&, const StLorentzVector<float>&);     
#pragma link C++ function operator*(const StMatrix<double>&, const StLorentzVector<double>&);     
#pragma link C++ function operator*(const StLorentzVector<float>&, const StMatrix<double>&);     
#pragma link C++ function operator*(const StLorentzVector<double>&, const StMatrix<double>&);     
#pragma link C++ function operator+(const StMatrix<double>&,const StMatrix<double>&);             
#pragma link C++ function operator+(const StMatrix<float>&,const StMatrix<double>&);             
#pragma link C++ function operator+(const StMatrix<double>&,const StMatrix<float>&);             
#pragma link C++ function operator-(const StMatrix<double>&,const StMatrix<double>&);             
#pragma link C++ function operator-(const StMatrix<float>&,const StMatrix<double>&);             
#pragma link C++ function operator-(const StMatrix<double>&,const StMatrix<float>&);             
#pragma link C++ function operator<<(ostream&, const StMatrix<double>&);                     
#pragma link C++ function norm_infinity(const StMatrix<double>&);                             
#pragma link C++ function normInfinity(const StMatrix<double>&);                              
#pragma link C++ function norm1(const StMatrix<double>&);                                     
#pragma link C++ function operator== (const StHelix&, const StHelix&);                         
#pragma link C++ function operator!= (const StHelix&, const StHelix&);                         
#pragma link C++ function operator<<(ostream&, const StHelix&);                         
#pragma link C++ typedef StThreeVectorF;
#pragma link C++ typedef StThreeVectorD;
#pragma link C++ typedef StLorentzVectorF;
#pragma link C++ typedef StLorentzVectorD;
#pragma link C++ typedef StMatrixF;
#pragma link C++ typedef StMatrixD;
#pragma link C++ typedef StHelixD;
#pragma link C++ typedef StPhysicalHelixD;
#pragma link C++ typedef pairD;             
#ifdef __CINT__
#pragma link C++ class StHelixHelper+;
#pragma link C++ class StParticleDefinition+;
#pragma link C++ class StParticleTable+;
#endif
